//
// File generated by rootcint at Tue Apr  8 16:57:31 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIlustredIusersdIjhetherldIsrcdIHALmIROOTdIsrcdIHAL_dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "HAL_dict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::AnalysisTreeReader AnalysisTreeReader;
      #else
      class AnalysisTreeReader  :  public ::TNamed {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::HAL::AnalysisTreeReader::BranchManager BranchManager;
         #else
         class BranchManager  {
            public:
            //friend XX;
            ::HAL::AnalysisTreeReader::StorageType fStorageID; //this will be the proprietary type to use in the ATR
            int fStorageIndex; //this will be the proprietary index in the deque to use in the ATR
            bool fScalar; //
            bool fCArray1D; //
            bool fCArray2D; //
            bool fVec1D; //
            bool fVec2D; //
            ::TString fBranchName; //
            ::TString fBranchTitle; //
            ::TString fLeafTitle; //
            ::TString fType; //
            ::TString fScalarType; //
            int fLeafNdata; //
            ::TBranch* fBranch; //
            ::HAL::AnalysisTreeReader* fTreeReader; //
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~AnalysisTreeReader() throw() {};
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::CutAlgorithm CutAlgorithm;
      #else
      class CutAlgorithm  :  public ::HAL::Algorithm {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~CutAlgorithm() throw() {};
         G__int64 fNPassed; //
      };
      #endif
      } 
      namespace HAL {
         namespace internal {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::internal::ImportTLVAlgo ImportTLVAlgo;
      #else
      class ImportTLVAlgo  :  public ::HAL::Algorithm {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~ImportTLVAlgo() throw() {};
      };
      #endif
      } } 
      namespace HAL {
         namespace internal {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::internal::NthElementAlgo NthElementAlgo;
      #else
      class NthElementAlgo  :  public ::HAL::Algorithm {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~NthElementAlgo() throw() {};
         unsigned int fN; //
         ::TString fInput; //
         ::TString fElementName; //
      };
      #endif
      } } 
      namespace HAL {
         namespace internal {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::internal::FilterTLVAlgo FilterTLVAlgo;
      #else
      class FilterTLVAlgo  :  public ::HAL::Algorithm {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~FilterTLVAlgo() throw() {};
         ::TString fInput; //
      };
      #endif
      } } 
      namespace HAL {
         namespace internal {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::internal::ParticlesTLVCut ParticlesTLVCut;
      #else
      class ParticlesTLVCut  :  public ::HAL::CutAlgorithm {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~ParticlesTLVCut() throw() {};
         ::TString fInput; //
      };
      #endif
      } } 
      namespace HAL {
         namespace internal {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::internal::SingleParticleTLVStore SingleParticleTLVStore;
      #else
      class SingleParticleTLVStore  :  public ::HAL::Algorithm {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~SingleParticleTLVStore() throw() {};
         ::TString fBranchName; //
         ::TString fInput; //
      };
      #endif
      } } 
      namespace HAL {
         namespace internal {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::internal::ParticlesTLVStore ParticlesTLVStore;
      #else
      class ParticlesTLVStore  :  public ::HAL::Algorithm {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~ParticlesTLVStore() throw() {};
         ::TString fBranchName; //
         ::TString fInput; //
      };
      #endif
      } } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::IA0000 IA0000;
      #else
      class IA0000  :  public ::HAL::internal::ImportTLVAlgo {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~IA0000() throw() {};
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::IA0001 IA0001;
      #else
      class IA0001  :  public ::HAL::internal::ImportTLVAlgo {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~IA0001() throw() {};
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::IA0002 IA0002;
      #else
      class IA0002  :  public ::HAL::internal::ImportTLVAlgo {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~IA0002() throw() {};
         unsigned int fNEntries; //
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::IA0010 IA0010;
      #else
      class IA0010  :  public ::HAL::internal::ImportTLVAlgo {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~IA0010() throw() {};
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::IA0011 IA0011;
      #else
      class IA0011  :  public ::HAL::internal::ImportTLVAlgo {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~IA0011() throw() {};
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::IA0012 IA0012;
      #else
      class IA0012  :  public ::HAL::internal::ImportTLVAlgo {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~IA0012() throw() {};
         unsigned int fNEntries; //
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::IA0020 IA0020;
      #else
      class IA0020  :  public ::HAL::internal::ImportTLVAlgo {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~IA0020() throw() {};
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::IA0021 IA0021;
      #else
      class IA0021  :  public ::HAL::internal::ImportTLVAlgo {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~IA0021() throw() {};
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::IA0022 IA0022;
      #else
      class IA0022  :  public ::HAL::internal::ImportTLVAlgo {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~IA0022() throw() {};
         unsigned int fNEntries; //
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::RA0000 RA0000;
      #else
      class RA0000  :  public ::HAL::Algorithm {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~RA0000() throw() {};
          char** fParentNames; //
         G__int64 fLength; //
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::FA0000 FA0000;
      #else
      class FA0000  :  public ::HAL::internal::NthElementAlgo {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~FA0000() throw() {};
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::FA0100 FA0100;
      #else
      class FA0100  :  public ::HAL::internal::FilterTLVAlgo {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~FA0100() throw() {};
         double fValue; //
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::FA0101 FA0101;
      #else
      class FA0101  :  public ::HAL::internal::FilterTLVAlgo {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~FA0101() throw() {};
         double fValue; //
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::FA0102 FA0102;
      #else
      class FA0102  :  public ::HAL::internal::FilterTLVAlgo {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~FA0102() throw() {};
         double fValue; //
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::FA0103 FA0103;
      #else
      class FA0103  :  public ::HAL::internal::FilterTLVAlgo {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~FA0103() throw() {};
         double fValue; //
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::FA0104 FA0104;
      #else
      class FA0104  :  public ::HAL::internal::FilterTLVAlgo {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~FA0104() throw() {};
         double fValue; //
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::FA0110 FA0110;
      #else
      class FA0110  :  public ::HAL::internal::FilterTLVAlgo {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~FA0110() throw() {};
         double fValue; //
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::FA0111 FA0111;
      #else
      class FA0111  :  public ::HAL::internal::FilterTLVAlgo {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~FA0111() throw() {};
         double fValue; //
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::FA0112 FA0112;
      #else
      class FA0112  :  public ::HAL::internal::FilterTLVAlgo {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~FA0112() throw() {};
         double fValue; //
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::FA0113 FA0113;
      #else
      class FA0113  :  public ::HAL::internal::FilterTLVAlgo {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~FA0113() throw() {};
         double fValue; //
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::FA0114 FA0114;
      #else
      class FA0114  :  public ::HAL::internal::FilterTLVAlgo {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~FA0114() throw() {};
         double fValue; //
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::FA0120 FA0120;
      #else
      class FA0120  :  public ::HAL::internal::FilterTLVAlgo {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~FA0120() throw() {};
         double fLow; //
         double fHigh; //
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::FA0121 FA0121;
      #else
      class FA0121  :  public ::HAL::internal::FilterTLVAlgo {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~FA0121() throw() {};
         double fLow; //
         double fHigh; //
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::FA0122 FA0122;
      #else
      class FA0122  :  public ::HAL::internal::FilterTLVAlgo {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~FA0122() throw() {};
         double fLow; //
         double fHigh; //
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::FA0123 FA0123;
      #else
      class FA0123  :  public ::HAL::internal::FilterTLVAlgo {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~FA0123() throw() {};
         double fLow; //
         double fHigh; //
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::FA0124 FA0124;
      #else
      class FA0124  :  public ::HAL::internal::FilterTLVAlgo {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~FA0124() throw() {};
         double fLow; //
         double fHigh; //
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::CA0000 CA0000;
      #else
      class CA0000  :  public ::HAL::internal::ParticlesTLVCut {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~CA0000() throw() {};
         double fCutValue; //
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::CA0003 CA0003;
      #else
      class CA0003  :  public ::HAL::internal::ParticlesTLVCut {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~CA0003() throw() {};
         double fCutValue; //
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::CA0100 CA0100;
      #else
      class CA0100  :  public ::HAL::CutAlgorithm {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~CA0100() throw() {};
         G__int64 fLength; //
          char** fParticleNames; //
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::CA0101 CA0101;
      #else
      class CA0101  :  public ::HAL::CutAlgorithm {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~CA0101() throw() {};
         G__int64 fLength; //
          char** fParticleNames; //
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::EA0000 EA0000;
      #else
      class EA0000  :  public ::HAL::internal::SingleParticleTLVStore {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~EA0000() throw() {};
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::EA0001 EA0001;
      #else
      class EA0001  :  public ::HAL::internal::SingleParticleTLVStore {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~EA0001() throw() {};
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::EA0002 EA0002;
      #else
      class EA0002  :  public ::HAL::internal::SingleParticleTLVStore {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~EA0002() throw() {};
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::EA0003 EA0003;
      #else
      class EA0003  :  public ::HAL::internal::SingleParticleTLVStore {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~EA0003() throw() {};
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::EA0004 EA0004;
      #else
      class EA0004  :  public ::HAL::internal::SingleParticleTLVStore {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~EA0004() throw() {};
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::EA0010 EA0010;
      #else
      class EA0010  :  public ::HAL::internal::ParticlesTLVStore {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~EA0010() throw() {};
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::EA0011 EA0011;
      #else
      class EA0011  :  public ::HAL::internal::ParticlesTLVStore {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~EA0011() throw() {};
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::EA0012 EA0012;
      #else
      class EA0012  :  public ::HAL::internal::ParticlesTLVStore {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~EA0012() throw() {};
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::EA0013 EA0013;
      #else
      class EA0013  :  public ::HAL::internal::ParticlesTLVStore {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~EA0013() throw() {};
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::EA0014 EA0014;
      #else
      class EA0014  :  public ::HAL::internal::ParticlesTLVStore {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~EA0014() throw() {};
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::CutOptimizer CutOptimizer;
      #else
      class CutOptimizer  {
         public:
         //friend XX;
         ::TF2* f; //fitness function
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::Integrator Integrator;
      #else
      class Integrator  {
         public:
         //friend XX;
         double TOL; //
         double toler; //
         bool terminate; //
         bool out_of_tolerance; //
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::InterpBase InterpBase;
      #else
      class InterpBase  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~InterpBase() throw() {};
         int n; //
         int mm; //
         int cor; //
         int jsav; //
         int dj; //
         double* xx; //
         double* yy; //
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::PolyInterp PolyInterp;
      #else
      class PolyInterp  :  public ::HAL::InterpBase {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::HAL::PolyInterp::Poly2DInterp Poly2DInterp;
         #else
         class Poly2DInterp  {
            public:
            //friend XX;
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~PolyInterp() throw() {};
         double dy; //
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::Poly2DInterp Poly2DInterp;
      #else
      class Poly2DInterp  {
         public:
         //friend XX;
         double** y; //
         int mm; //
         int nn; //
         ::HAL::PolyInterp x1terp; //
         ::HAL::PolyInterp x2terp; //
      };
      #endif
      } 
      namespace HAL {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::HAL::PythonAlgorithm PythonAlgorithm;
      #else
      class PythonAlgorithm  :  public ::HAL::Algorithm {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~PythonAlgorithm() throw() {};
         ::TString fPyPath; //
         ::TString fPyFile; //
         ::TString fPyClass; //
         ::_object* fPySelf; //! actual python object
      };
      #endif
      } 
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace HAL {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void HAL_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("HAL", 0 /*version*/, "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/PythonAlgorithm.h", 13,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &HAL_Dictionary, 4);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void HAL_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOT {
   void HALcLcLAnalysisData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HALcLcLAnalysisData(void *p = 0);
   static void *newArray_HALcLcLAnalysisData(Long_t size, void *p);
   static void delete_HALcLcLAnalysisData(void *p);
   static void deleteArray_HALcLcLAnalysisData(void *p);
   static void destruct_HALcLcLAnalysisData(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::AnalysisData*)
   {
      ::HAL::AnalysisData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HAL::AnalysisData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::AnalysisData", ::HAL::AnalysisData::Class_Version(), "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/AnalysisData.h", 16,
                  typeid(::HAL::AnalysisData), DefineBehavior(ptr, ptr),
                  &::HAL::AnalysisData::Dictionary, isa_proxy, 4,
                  sizeof(::HAL::AnalysisData) );
      instance.SetNew(&new_HALcLcLAnalysisData);
      instance.SetNewArray(&newArray_HALcLcLAnalysisData);
      instance.SetDelete(&delete_HALcLcLAnalysisData);
      instance.SetDeleteArray(&deleteArray_HALcLcLAnalysisData);
      instance.SetDestructor(&destruct_HALcLcLAnalysisData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::AnalysisData*)
   {
      return GenerateInitInstanceLocal((::HAL::AnalysisData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::AnalysisData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void HALcLcLAnalysisTreeReader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HALcLcLAnalysisTreeReader(void *p = 0);
   static void *newArray_HALcLcLAnalysisTreeReader(Long_t size, void *p);
   static void delete_HALcLcLAnalysisTreeReader(void *p);
   static void deleteArray_HALcLcLAnalysisTreeReader(void *p);
   static void destruct_HALcLcLAnalysisTreeReader(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::AnalysisTreeReader*)
   {
      ::HAL::AnalysisTreeReader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HAL::AnalysisTreeReader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::AnalysisTreeReader", ::HAL::AnalysisTreeReader::Class_Version(), "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/AnalysisTreeReader.h", 45,
                  typeid(::HAL::AnalysisTreeReader), DefineBehavior(ptr, ptr),
                  &::HAL::AnalysisTreeReader::Dictionary, isa_proxy, 4,
                  sizeof(::HAL::AnalysisTreeReader) );
      instance.SetNew(&new_HALcLcLAnalysisTreeReader);
      instance.SetNewArray(&newArray_HALcLcLAnalysisTreeReader);
      instance.SetDelete(&delete_HALcLcLAnalysisTreeReader);
      instance.SetDeleteArray(&deleteArray_HALcLcLAnalysisTreeReader);
      instance.SetDestructor(&destruct_HALcLcLAnalysisTreeReader);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::AnalysisTreeReader*)
   {
      return GenerateInitInstanceLocal((::HAL::AnalysisTreeReader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::AnalysisTreeReader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void HALcLcLAnalysisTreeWriter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HALcLcLAnalysisTreeWriter(void *p);
   static void deleteArray_HALcLcLAnalysisTreeWriter(void *p);
   static void destruct_HALcLcLAnalysisTreeWriter(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::AnalysisTreeWriter*)
   {
      ::HAL::AnalysisTreeWriter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HAL::AnalysisTreeWriter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::AnalysisTreeWriter", ::HAL::AnalysisTreeWriter::Class_Version(), "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/AnalysisTreeWriter.h", 17,
                  typeid(::HAL::AnalysisTreeWriter), DefineBehavior(ptr, ptr),
                  &::HAL::AnalysisTreeWriter::Dictionary, isa_proxy, 4,
                  sizeof(::HAL::AnalysisTreeWriter) );
      instance.SetDelete(&delete_HALcLcLAnalysisTreeWriter);
      instance.SetDeleteArray(&deleteArray_HALcLcLAnalysisTreeWriter);
      instance.SetDestructor(&destruct_HALcLcLAnalysisTreeWriter);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::AnalysisTreeWriter*)
   {
      return GenerateInitInstanceLocal((::HAL::AnalysisTreeWriter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::AnalysisTreeWriter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void HALcLcLAlgorithm_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HALcLcLAlgorithm(void *p = 0);
   static void *newArray_HALcLcLAlgorithm(Long_t size, void *p);
   static void delete_HALcLcLAlgorithm(void *p);
   static void deleteArray_HALcLcLAlgorithm(void *p);
   static void destruct_HALcLcLAlgorithm(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::Algorithm*)
   {
      ::HAL::Algorithm *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HAL::Algorithm >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::Algorithm", ::HAL::Algorithm::Class_Version(), "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithm.h", 23,
                  typeid(::HAL::Algorithm), DefineBehavior(ptr, ptr),
                  &::HAL::Algorithm::Dictionary, isa_proxy, 4,
                  sizeof(::HAL::Algorithm) );
      instance.SetNew(&new_HALcLcLAlgorithm);
      instance.SetNewArray(&newArray_HALcLcLAlgorithm);
      instance.SetDelete(&delete_HALcLcLAlgorithm);
      instance.SetDeleteArray(&deleteArray_HALcLcLAlgorithm);
      instance.SetDestructor(&destruct_HALcLcLAlgorithm);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::Algorithm*)
   {
      return GenerateInitInstanceLocal((::HAL::Algorithm*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::Algorithm*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void HALcLcLCutAlgorithm_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLCutAlgorithm_Dictionary();
   static void *new_HALcLcLCutAlgorithm(void *p = 0);
   static void *newArray_HALcLcLCutAlgorithm(Long_t size, void *p);
   static void delete_HALcLcLCutAlgorithm(void *p);
   static void deleteArray_HALcLcLCutAlgorithm(void *p);
   static void destruct_HALcLcLCutAlgorithm(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::CutAlgorithm*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::CutAlgorithm) == sizeof(::ROOT::Shadow::HAL::CutAlgorithm));
      ::HAL::CutAlgorithm *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::CutAlgorithm),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::CutAlgorithm", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/CutAlgorithm.h", 10,
                  typeid(::HAL::CutAlgorithm), DefineBehavior(ptr, ptr),
                  &HALcLcLCutAlgorithm_ShowMembers, &HALcLcLCutAlgorithm_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::CutAlgorithm) );
      instance.SetNew(&new_HALcLcLCutAlgorithm);
      instance.SetNewArray(&newArray_HALcLcLCutAlgorithm);
      instance.SetDelete(&delete_HALcLcLCutAlgorithm);
      instance.SetDeleteArray(&deleteArray_HALcLcLCutAlgorithm);
      instance.SetDestructor(&destruct_HALcLcLCutAlgorithm);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::CutAlgorithm*)
   {
      return GenerateInitInstanceLocal((::HAL::CutAlgorithm*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::CutAlgorithm*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLCutAlgorithm_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::CutAlgorithm*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLAnalysisTreeReadercLcLBranchManager_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLAnalysisTreeReadercLcLBranchManager_Dictionary();
   static void *new_HALcLcLAnalysisTreeReadercLcLBranchManager(void *p = 0);
   static void *newArray_HALcLcLAnalysisTreeReadercLcLBranchManager(Long_t size, void *p);
   static void delete_HALcLcLAnalysisTreeReadercLcLBranchManager(void *p);
   static void deleteArray_HALcLcLAnalysisTreeReadercLcLBranchManager(void *p);
   static void destruct_HALcLcLAnalysisTreeReadercLcLBranchManager(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::AnalysisTreeReader::BranchManager*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::AnalysisTreeReader::BranchManager) == sizeof(::ROOT::Shadow::HAL::AnalysisTreeReader::BranchManager));
      ::HAL::AnalysisTreeReader::BranchManager *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::AnalysisTreeReader::BranchManager),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::AnalysisTreeReader::BranchManager", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/AnalysisTreeReader.h", 134,
                  typeid(::HAL::AnalysisTreeReader::BranchManager), DefineBehavior(ptr, ptr),
                  &HALcLcLAnalysisTreeReadercLcLBranchManager_ShowMembers, &HALcLcLAnalysisTreeReadercLcLBranchManager_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::AnalysisTreeReader::BranchManager) );
      instance.SetNew(&new_HALcLcLAnalysisTreeReadercLcLBranchManager);
      instance.SetNewArray(&newArray_HALcLcLAnalysisTreeReadercLcLBranchManager);
      instance.SetDelete(&delete_HALcLcLAnalysisTreeReadercLcLBranchManager);
      instance.SetDeleteArray(&deleteArray_HALcLcLAnalysisTreeReadercLcLBranchManager);
      instance.SetDestructor(&destruct_HALcLcLAnalysisTreeReadercLcLBranchManager);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::AnalysisTreeReader::BranchManager*)
   {
      return GenerateInitInstanceLocal((::HAL::AnalysisTreeReader::BranchManager*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::AnalysisTreeReader::BranchManager*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLAnalysisTreeReadercLcLBranchManager_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::AnalysisTreeReader::BranchManager*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace HAL {
namespace internal {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void HALcLcLinternal_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("HAL::internal", 0 /*version*/, "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 45,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &HALcLcLinternal_Dictionary, 4);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void HALcLcLinternal_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}
}

namespace ROOT {
   void HALcLcLinternalcLcLImportTLVAlgo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLinternalcLcLImportTLVAlgo_Dictionary();
   static void delete_HALcLcLinternalcLcLImportTLVAlgo(void *p);
   static void deleteArray_HALcLcLinternalcLcLImportTLVAlgo(void *p);
   static void destruct_HALcLcLinternalcLcLImportTLVAlgo(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::internal::ImportTLVAlgo*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::internal::ImportTLVAlgo) == sizeof(::ROOT::Shadow::HAL::internal::ImportTLVAlgo));
      ::HAL::internal::ImportTLVAlgo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::internal::ImportTLVAlgo),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::internal::ImportTLVAlgo", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 56,
                  typeid(::HAL::internal::ImportTLVAlgo), DefineBehavior(ptr, ptr),
                  &HALcLcLinternalcLcLImportTLVAlgo_ShowMembers, &HALcLcLinternalcLcLImportTLVAlgo_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::internal::ImportTLVAlgo) );
      instance.SetDelete(&delete_HALcLcLinternalcLcLImportTLVAlgo);
      instance.SetDeleteArray(&deleteArray_HALcLcLinternalcLcLImportTLVAlgo);
      instance.SetDestructor(&destruct_HALcLcLinternalcLcLImportTLVAlgo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::internal::ImportTLVAlgo*)
   {
      return GenerateInitInstanceLocal((::HAL::internal::ImportTLVAlgo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::internal::ImportTLVAlgo*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLinternalcLcLImportTLVAlgo_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::internal::ImportTLVAlgo*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLinternalcLcLNthElementAlgo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLinternalcLcLNthElementAlgo_Dictionary();
   static void delete_HALcLcLinternalcLcLNthElementAlgo(void *p);
   static void deleteArray_HALcLcLinternalcLcLNthElementAlgo(void *p);
   static void destruct_HALcLcLinternalcLcLNthElementAlgo(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::internal::NthElementAlgo*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::internal::NthElementAlgo) == sizeof(::ROOT::Shadow::HAL::internal::NthElementAlgo));
      ::HAL::internal::NthElementAlgo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::internal::NthElementAlgo),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::internal::NthElementAlgo", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 71,
                  typeid(::HAL::internal::NthElementAlgo), DefineBehavior(ptr, ptr),
                  &HALcLcLinternalcLcLNthElementAlgo_ShowMembers, &HALcLcLinternalcLcLNthElementAlgo_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::internal::NthElementAlgo) );
      instance.SetDelete(&delete_HALcLcLinternalcLcLNthElementAlgo);
      instance.SetDeleteArray(&deleteArray_HALcLcLinternalcLcLNthElementAlgo);
      instance.SetDestructor(&destruct_HALcLcLinternalcLcLNthElementAlgo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::internal::NthElementAlgo*)
   {
      return GenerateInitInstanceLocal((::HAL::internal::NthElementAlgo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::internal::NthElementAlgo*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLinternalcLcLNthElementAlgo_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::internal::NthElementAlgo*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLinternalcLcLFilterTLVAlgo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLinternalcLcLFilterTLVAlgo_Dictionary();
   static void delete_HALcLcLinternalcLcLFilterTLVAlgo(void *p);
   static void deleteArray_HALcLcLinternalcLcLFilterTLVAlgo(void *p);
   static void destruct_HALcLcLinternalcLcLFilterTLVAlgo(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::internal::FilterTLVAlgo*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::internal::FilterTLVAlgo) == sizeof(::ROOT::Shadow::HAL::internal::FilterTLVAlgo));
      ::HAL::internal::FilterTLVAlgo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::internal::FilterTLVAlgo),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::internal::FilterTLVAlgo", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 93,
                  typeid(::HAL::internal::FilterTLVAlgo), DefineBehavior(ptr, ptr),
                  &HALcLcLinternalcLcLFilterTLVAlgo_ShowMembers, &HALcLcLinternalcLcLFilterTLVAlgo_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::internal::FilterTLVAlgo) );
      instance.SetDelete(&delete_HALcLcLinternalcLcLFilterTLVAlgo);
      instance.SetDeleteArray(&deleteArray_HALcLcLinternalcLcLFilterTLVAlgo);
      instance.SetDestructor(&destruct_HALcLcLinternalcLcLFilterTLVAlgo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::internal::FilterTLVAlgo*)
   {
      return GenerateInitInstanceLocal((::HAL::internal::FilterTLVAlgo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::internal::FilterTLVAlgo*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLinternalcLcLFilterTLVAlgo_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::internal::FilterTLVAlgo*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLinternalcLcLParticlesTLVCut_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLinternalcLcLParticlesTLVCut_Dictionary();
   static void delete_HALcLcLinternalcLcLParticlesTLVCut(void *p);
   static void deleteArray_HALcLcLinternalcLcLParticlesTLVCut(void *p);
   static void destruct_HALcLcLinternalcLcLParticlesTLVCut(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::internal::ParticlesTLVCut*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::internal::ParticlesTLVCut) == sizeof(::ROOT::Shadow::HAL::internal::ParticlesTLVCut));
      ::HAL::internal::ParticlesTLVCut *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::internal::ParticlesTLVCut),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::internal::ParticlesTLVCut", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 110,
                  typeid(::HAL::internal::ParticlesTLVCut), DefineBehavior(ptr, ptr),
                  &HALcLcLinternalcLcLParticlesTLVCut_ShowMembers, &HALcLcLinternalcLcLParticlesTLVCut_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::internal::ParticlesTLVCut) );
      instance.SetDelete(&delete_HALcLcLinternalcLcLParticlesTLVCut);
      instance.SetDeleteArray(&deleteArray_HALcLcLinternalcLcLParticlesTLVCut);
      instance.SetDestructor(&destruct_HALcLcLinternalcLcLParticlesTLVCut);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::internal::ParticlesTLVCut*)
   {
      return GenerateInitInstanceLocal((::HAL::internal::ParticlesTLVCut*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::internal::ParticlesTLVCut*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLinternalcLcLParticlesTLVCut_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::internal::ParticlesTLVCut*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLinternalcLcLSingleParticleTLVStore_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLinternalcLcLSingleParticleTLVStore_Dictionary();
   static void delete_HALcLcLinternalcLcLSingleParticleTLVStore(void *p);
   static void deleteArray_HALcLcLinternalcLcLSingleParticleTLVStore(void *p);
   static void destruct_HALcLcLinternalcLcLSingleParticleTLVStore(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::internal::SingleParticleTLVStore*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::internal::SingleParticleTLVStore) == sizeof(::ROOT::Shadow::HAL::internal::SingleParticleTLVStore));
      ::HAL::internal::SingleParticleTLVStore *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::internal::SingleParticleTLVStore),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::internal::SingleParticleTLVStore", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 129,
                  typeid(::HAL::internal::SingleParticleTLVStore), DefineBehavior(ptr, ptr),
                  &HALcLcLinternalcLcLSingleParticleTLVStore_ShowMembers, &HALcLcLinternalcLcLSingleParticleTLVStore_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::internal::SingleParticleTLVStore) );
      instance.SetDelete(&delete_HALcLcLinternalcLcLSingleParticleTLVStore);
      instance.SetDeleteArray(&deleteArray_HALcLcLinternalcLcLSingleParticleTLVStore);
      instance.SetDestructor(&destruct_HALcLcLinternalcLcLSingleParticleTLVStore);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::internal::SingleParticleTLVStore*)
   {
      return GenerateInitInstanceLocal((::HAL::internal::SingleParticleTLVStore*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::internal::SingleParticleTLVStore*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLinternalcLcLSingleParticleTLVStore_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::internal::SingleParticleTLVStore*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLinternalcLcLParticlesTLVStore_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLinternalcLcLParticlesTLVStore_Dictionary();
   static void delete_HALcLcLinternalcLcLParticlesTLVStore(void *p);
   static void deleteArray_HALcLcLinternalcLcLParticlesTLVStore(void *p);
   static void destruct_HALcLcLinternalcLcLParticlesTLVStore(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::internal::ParticlesTLVStore*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::internal::ParticlesTLVStore) == sizeof(::ROOT::Shadow::HAL::internal::ParticlesTLVStore));
      ::HAL::internal::ParticlesTLVStore *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::internal::ParticlesTLVStore),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::internal::ParticlesTLVStore", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 147,
                  typeid(::HAL::internal::ParticlesTLVStore), DefineBehavior(ptr, ptr),
                  &HALcLcLinternalcLcLParticlesTLVStore_ShowMembers, &HALcLcLinternalcLcLParticlesTLVStore_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::internal::ParticlesTLVStore) );
      instance.SetDelete(&delete_HALcLcLinternalcLcLParticlesTLVStore);
      instance.SetDeleteArray(&deleteArray_HALcLcLinternalcLcLParticlesTLVStore);
      instance.SetDestructor(&destruct_HALcLcLinternalcLcLParticlesTLVStore);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::internal::ParticlesTLVStore*)
   {
      return GenerateInitInstanceLocal((::HAL::internal::ParticlesTLVStore*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::internal::ParticlesTLVStore*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLinternalcLcLParticlesTLVStore_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::internal::ParticlesTLVStore*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLIA0000_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLIA0000_Dictionary();
   static void delete_HALcLcLIA0000(void *p);
   static void deleteArray_HALcLcLIA0000(void *p);
   static void destruct_HALcLcLIA0000(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::IA0000*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::IA0000) == sizeof(::ROOT::Shadow::HAL::IA0000));
      ::HAL::IA0000 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::IA0000),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::IA0000", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 186,
                  typeid(::HAL::IA0000), DefineBehavior(ptr, ptr),
                  &HALcLcLIA0000_ShowMembers, &HALcLcLIA0000_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::IA0000) );
      instance.SetDelete(&delete_HALcLcLIA0000);
      instance.SetDeleteArray(&deleteArray_HALcLcLIA0000);
      instance.SetDestructor(&destruct_HALcLcLIA0000);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::IA0000*)
   {
      return GenerateInitInstanceLocal((::HAL::IA0000*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::IA0000*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLIA0000_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::IA0000*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLIA0001_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLIA0001_Dictionary();
   static void delete_HALcLcLIA0001(void *p);
   static void deleteArray_HALcLcLIA0001(void *p);
   static void destruct_HALcLcLIA0001(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::IA0001*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::IA0001) == sizeof(::ROOT::Shadow::HAL::IA0001));
      ::HAL::IA0001 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::IA0001),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::IA0001", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 216,
                  typeid(::HAL::IA0001), DefineBehavior(ptr, ptr),
                  &HALcLcLIA0001_ShowMembers, &HALcLcLIA0001_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::IA0001) );
      instance.SetDelete(&delete_HALcLcLIA0001);
      instance.SetDeleteArray(&deleteArray_HALcLcLIA0001);
      instance.SetDestructor(&destruct_HALcLcLIA0001);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::IA0001*)
   {
      return GenerateInitInstanceLocal((::HAL::IA0001*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::IA0001*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLIA0001_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::IA0001*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLIA0002_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLIA0002_Dictionary();
   static void delete_HALcLcLIA0002(void *p);
   static void deleteArray_HALcLcLIA0002(void *p);
   static void destruct_HALcLcLIA0002(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::IA0002*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::IA0002) == sizeof(::ROOT::Shadow::HAL::IA0002));
      ::HAL::IA0002 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::IA0002),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::IA0002", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 244,
                  typeid(::HAL::IA0002), DefineBehavior(ptr, ptr),
                  &HALcLcLIA0002_ShowMembers, &HALcLcLIA0002_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::IA0002) );
      instance.SetDelete(&delete_HALcLcLIA0002);
      instance.SetDeleteArray(&deleteArray_HALcLcLIA0002);
      instance.SetDestructor(&destruct_HALcLcLIA0002);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::IA0002*)
   {
      return GenerateInitInstanceLocal((::HAL::IA0002*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::IA0002*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLIA0002_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::IA0002*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLIA0010_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLIA0010_Dictionary();
   static void delete_HALcLcLIA0010(void *p);
   static void deleteArray_HALcLcLIA0010(void *p);
   static void destruct_HALcLcLIA0010(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::IA0010*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::IA0010) == sizeof(::ROOT::Shadow::HAL::IA0010));
      ::HAL::IA0010 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::IA0010),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::IA0010", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 276,
                  typeid(::HAL::IA0010), DefineBehavior(ptr, ptr),
                  &HALcLcLIA0010_ShowMembers, &HALcLcLIA0010_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::IA0010) );
      instance.SetDelete(&delete_HALcLcLIA0010);
      instance.SetDeleteArray(&deleteArray_HALcLcLIA0010);
      instance.SetDestructor(&destruct_HALcLcLIA0010);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::IA0010*)
   {
      return GenerateInitInstanceLocal((::HAL::IA0010*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::IA0010*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLIA0010_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::IA0010*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLIA0011_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLIA0011_Dictionary();
   static void delete_HALcLcLIA0011(void *p);
   static void deleteArray_HALcLcLIA0011(void *p);
   static void destruct_HALcLcLIA0011(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::IA0011*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::IA0011) == sizeof(::ROOT::Shadow::HAL::IA0011));
      ::HAL::IA0011 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::IA0011),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::IA0011", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 306,
                  typeid(::HAL::IA0011), DefineBehavior(ptr, ptr),
                  &HALcLcLIA0011_ShowMembers, &HALcLcLIA0011_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::IA0011) );
      instance.SetDelete(&delete_HALcLcLIA0011);
      instance.SetDeleteArray(&deleteArray_HALcLcLIA0011);
      instance.SetDestructor(&destruct_HALcLcLIA0011);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::IA0011*)
   {
      return GenerateInitInstanceLocal((::HAL::IA0011*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::IA0011*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLIA0011_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::IA0011*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLIA0012_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLIA0012_Dictionary();
   static void delete_HALcLcLIA0012(void *p);
   static void deleteArray_HALcLcLIA0012(void *p);
   static void destruct_HALcLcLIA0012(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::IA0012*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::IA0012) == sizeof(::ROOT::Shadow::HAL::IA0012));
      ::HAL::IA0012 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::IA0012),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::IA0012", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 335,
                  typeid(::HAL::IA0012), DefineBehavior(ptr, ptr),
                  &HALcLcLIA0012_ShowMembers, &HALcLcLIA0012_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::IA0012) );
      instance.SetDelete(&delete_HALcLcLIA0012);
      instance.SetDeleteArray(&deleteArray_HALcLcLIA0012);
      instance.SetDestructor(&destruct_HALcLcLIA0012);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::IA0012*)
   {
      return GenerateInitInstanceLocal((::HAL::IA0012*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::IA0012*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLIA0012_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::IA0012*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLIA0020_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLIA0020_Dictionary();
   static void delete_HALcLcLIA0020(void *p);
   static void deleteArray_HALcLcLIA0020(void *p);
   static void destruct_HALcLcLIA0020(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::IA0020*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::IA0020) == sizeof(::ROOT::Shadow::HAL::IA0020));
      ::HAL::IA0020 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::IA0020),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::IA0020", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 368,
                  typeid(::HAL::IA0020), DefineBehavior(ptr, ptr),
                  &HALcLcLIA0020_ShowMembers, &HALcLcLIA0020_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::IA0020) );
      instance.SetDelete(&delete_HALcLcLIA0020);
      instance.SetDeleteArray(&deleteArray_HALcLcLIA0020);
      instance.SetDestructor(&destruct_HALcLcLIA0020);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::IA0020*)
   {
      return GenerateInitInstanceLocal((::HAL::IA0020*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::IA0020*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLIA0020_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::IA0020*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLIA0021_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLIA0021_Dictionary();
   static void delete_HALcLcLIA0021(void *p);
   static void deleteArray_HALcLcLIA0021(void *p);
   static void destruct_HALcLcLIA0021(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::IA0021*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::IA0021) == sizeof(::ROOT::Shadow::HAL::IA0021));
      ::HAL::IA0021 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::IA0021),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::IA0021", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 398,
                  typeid(::HAL::IA0021), DefineBehavior(ptr, ptr),
                  &HALcLcLIA0021_ShowMembers, &HALcLcLIA0021_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::IA0021) );
      instance.SetDelete(&delete_HALcLcLIA0021);
      instance.SetDeleteArray(&deleteArray_HALcLcLIA0021);
      instance.SetDestructor(&destruct_HALcLcLIA0021);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::IA0021*)
   {
      return GenerateInitInstanceLocal((::HAL::IA0021*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::IA0021*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLIA0021_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::IA0021*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLIA0022_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLIA0022_Dictionary();
   static void delete_HALcLcLIA0022(void *p);
   static void deleteArray_HALcLcLIA0022(void *p);
   static void destruct_HALcLcLIA0022(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::IA0022*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::IA0022) == sizeof(::ROOT::Shadow::HAL::IA0022));
      ::HAL::IA0022 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::IA0022),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::IA0022", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 427,
                  typeid(::HAL::IA0022), DefineBehavior(ptr, ptr),
                  &HALcLcLIA0022_ShowMembers, &HALcLcLIA0022_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::IA0022) );
      instance.SetDelete(&delete_HALcLcLIA0022);
      instance.SetDeleteArray(&deleteArray_HALcLcLIA0022);
      instance.SetDestructor(&destruct_HALcLcLIA0022);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::IA0022*)
   {
      return GenerateInitInstanceLocal((::HAL::IA0022*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::IA0022*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLIA0022_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::IA0022*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLRA0000_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLRA0000_Dictionary();
   static void delete_HALcLcLRA0000(void *p);
   static void deleteArray_HALcLcLRA0000(void *p);
   static void destruct_HALcLcLRA0000(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::RA0000*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::RA0000) == sizeof(::ROOT::Shadow::HAL::RA0000));
      ::HAL::RA0000 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::RA0000),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::RA0000", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 466,
                  typeid(::HAL::RA0000), DefineBehavior(ptr, ptr),
                  &HALcLcLRA0000_ShowMembers, &HALcLcLRA0000_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::RA0000) );
      instance.SetDelete(&delete_HALcLcLRA0000);
      instance.SetDeleteArray(&deleteArray_HALcLcLRA0000);
      instance.SetDestructor(&destruct_HALcLcLRA0000);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::RA0000*)
   {
      return GenerateInitInstanceLocal((::HAL::RA0000*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::RA0000*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLRA0000_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::RA0000*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLFA0000_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLFA0000_Dictionary();
   static void delete_HALcLcLFA0000(void *p);
   static void deleteArray_HALcLcLFA0000(void *p);
   static void destruct_HALcLcLFA0000(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::FA0000*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::FA0000) == sizeof(::ROOT::Shadow::HAL::FA0000));
      ::HAL::FA0000 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::FA0000),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::FA0000", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 496,
                  typeid(::HAL::FA0000), DefineBehavior(ptr, ptr),
                  &HALcLcLFA0000_ShowMembers, &HALcLcLFA0000_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::FA0000) );
      instance.SetDelete(&delete_HALcLcLFA0000);
      instance.SetDeleteArray(&deleteArray_HALcLcLFA0000);
      instance.SetDestructor(&destruct_HALcLcLFA0000);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::FA0000*)
   {
      return GenerateInitInstanceLocal((::HAL::FA0000*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::FA0000*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLFA0000_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::FA0000*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLFA0100_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLFA0100_Dictionary();
   static void delete_HALcLcLFA0100(void *p);
   static void deleteArray_HALcLcLFA0100(void *p);
   static void destruct_HALcLcLFA0100(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::FA0100*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::FA0100) == sizeof(::ROOT::Shadow::HAL::FA0100));
      ::HAL::FA0100 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::FA0100),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::FA0100", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 521,
                  typeid(::HAL::FA0100), DefineBehavior(ptr, ptr),
                  &HALcLcLFA0100_ShowMembers, &HALcLcLFA0100_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::FA0100) );
      instance.SetDelete(&delete_HALcLcLFA0100);
      instance.SetDeleteArray(&deleteArray_HALcLcLFA0100);
      instance.SetDestructor(&destruct_HALcLcLFA0100);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::FA0100*)
   {
      return GenerateInitInstanceLocal((::HAL::FA0100*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::FA0100*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLFA0100_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::FA0100*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLFA0101_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLFA0101_Dictionary();
   static void delete_HALcLcLFA0101(void *p);
   static void deleteArray_HALcLcLFA0101(void *p);
   static void destruct_HALcLcLFA0101(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::FA0101*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::FA0101) == sizeof(::ROOT::Shadow::HAL::FA0101));
      ::HAL::FA0101 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::FA0101),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::FA0101", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 547,
                  typeid(::HAL::FA0101), DefineBehavior(ptr, ptr),
                  &HALcLcLFA0101_ShowMembers, &HALcLcLFA0101_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::FA0101) );
      instance.SetDelete(&delete_HALcLcLFA0101);
      instance.SetDeleteArray(&deleteArray_HALcLcLFA0101);
      instance.SetDestructor(&destruct_HALcLcLFA0101);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::FA0101*)
   {
      return GenerateInitInstanceLocal((::HAL::FA0101*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::FA0101*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLFA0101_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::FA0101*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLFA0102_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLFA0102_Dictionary();
   static void delete_HALcLcLFA0102(void *p);
   static void deleteArray_HALcLcLFA0102(void *p);
   static void destruct_HALcLcLFA0102(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::FA0102*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::FA0102) == sizeof(::ROOT::Shadow::HAL::FA0102));
      ::HAL::FA0102 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::FA0102),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::FA0102", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 573,
                  typeid(::HAL::FA0102), DefineBehavior(ptr, ptr),
                  &HALcLcLFA0102_ShowMembers, &HALcLcLFA0102_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::FA0102) );
      instance.SetDelete(&delete_HALcLcLFA0102);
      instance.SetDeleteArray(&deleteArray_HALcLcLFA0102);
      instance.SetDestructor(&destruct_HALcLcLFA0102);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::FA0102*)
   {
      return GenerateInitInstanceLocal((::HAL::FA0102*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::FA0102*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLFA0102_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::FA0102*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLFA0103_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLFA0103_Dictionary();
   static void delete_HALcLcLFA0103(void *p);
   static void deleteArray_HALcLcLFA0103(void *p);
   static void destruct_HALcLcLFA0103(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::FA0103*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::FA0103) == sizeof(::ROOT::Shadow::HAL::FA0103));
      ::HAL::FA0103 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::FA0103),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::FA0103", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 599,
                  typeid(::HAL::FA0103), DefineBehavior(ptr, ptr),
                  &HALcLcLFA0103_ShowMembers, &HALcLcLFA0103_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::FA0103) );
      instance.SetDelete(&delete_HALcLcLFA0103);
      instance.SetDeleteArray(&deleteArray_HALcLcLFA0103);
      instance.SetDestructor(&destruct_HALcLcLFA0103);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::FA0103*)
   {
      return GenerateInitInstanceLocal((::HAL::FA0103*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::FA0103*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLFA0103_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::FA0103*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLFA0104_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLFA0104_Dictionary();
   static void delete_HALcLcLFA0104(void *p);
   static void deleteArray_HALcLcLFA0104(void *p);
   static void destruct_HALcLcLFA0104(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::FA0104*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::FA0104) == sizeof(::ROOT::Shadow::HAL::FA0104));
      ::HAL::FA0104 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::FA0104),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::FA0104", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 625,
                  typeid(::HAL::FA0104), DefineBehavior(ptr, ptr),
                  &HALcLcLFA0104_ShowMembers, &HALcLcLFA0104_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::FA0104) );
      instance.SetDelete(&delete_HALcLcLFA0104);
      instance.SetDeleteArray(&deleteArray_HALcLcLFA0104);
      instance.SetDestructor(&destruct_HALcLcLFA0104);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::FA0104*)
   {
      return GenerateInitInstanceLocal((::HAL::FA0104*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::FA0104*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLFA0104_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::FA0104*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLFA0110_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLFA0110_Dictionary();
   static void delete_HALcLcLFA0110(void *p);
   static void deleteArray_HALcLcLFA0110(void *p);
   static void destruct_HALcLcLFA0110(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::FA0110*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::FA0110) == sizeof(::ROOT::Shadow::HAL::FA0110));
      ::HAL::FA0110 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::FA0110),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::FA0110", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 651,
                  typeid(::HAL::FA0110), DefineBehavior(ptr, ptr),
                  &HALcLcLFA0110_ShowMembers, &HALcLcLFA0110_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::FA0110) );
      instance.SetDelete(&delete_HALcLcLFA0110);
      instance.SetDeleteArray(&deleteArray_HALcLcLFA0110);
      instance.SetDestructor(&destruct_HALcLcLFA0110);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::FA0110*)
   {
      return GenerateInitInstanceLocal((::HAL::FA0110*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::FA0110*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLFA0110_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::FA0110*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLFA0111_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLFA0111_Dictionary();
   static void delete_HALcLcLFA0111(void *p);
   static void deleteArray_HALcLcLFA0111(void *p);
   static void destruct_HALcLcLFA0111(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::FA0111*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::FA0111) == sizeof(::ROOT::Shadow::HAL::FA0111));
      ::HAL::FA0111 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::FA0111),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::FA0111", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 677,
                  typeid(::HAL::FA0111), DefineBehavior(ptr, ptr),
                  &HALcLcLFA0111_ShowMembers, &HALcLcLFA0111_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::FA0111) );
      instance.SetDelete(&delete_HALcLcLFA0111);
      instance.SetDeleteArray(&deleteArray_HALcLcLFA0111);
      instance.SetDestructor(&destruct_HALcLcLFA0111);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::FA0111*)
   {
      return GenerateInitInstanceLocal((::HAL::FA0111*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::FA0111*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLFA0111_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::FA0111*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLFA0112_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLFA0112_Dictionary();
   static void delete_HALcLcLFA0112(void *p);
   static void deleteArray_HALcLcLFA0112(void *p);
   static void destruct_HALcLcLFA0112(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::FA0112*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::FA0112) == sizeof(::ROOT::Shadow::HAL::FA0112));
      ::HAL::FA0112 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::FA0112),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::FA0112", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 703,
                  typeid(::HAL::FA0112), DefineBehavior(ptr, ptr),
                  &HALcLcLFA0112_ShowMembers, &HALcLcLFA0112_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::FA0112) );
      instance.SetDelete(&delete_HALcLcLFA0112);
      instance.SetDeleteArray(&deleteArray_HALcLcLFA0112);
      instance.SetDestructor(&destruct_HALcLcLFA0112);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::FA0112*)
   {
      return GenerateInitInstanceLocal((::HAL::FA0112*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::FA0112*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLFA0112_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::FA0112*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLFA0113_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLFA0113_Dictionary();
   static void delete_HALcLcLFA0113(void *p);
   static void deleteArray_HALcLcLFA0113(void *p);
   static void destruct_HALcLcLFA0113(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::FA0113*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::FA0113) == sizeof(::ROOT::Shadow::HAL::FA0113));
      ::HAL::FA0113 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::FA0113),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::FA0113", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 729,
                  typeid(::HAL::FA0113), DefineBehavior(ptr, ptr),
                  &HALcLcLFA0113_ShowMembers, &HALcLcLFA0113_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::FA0113) );
      instance.SetDelete(&delete_HALcLcLFA0113);
      instance.SetDeleteArray(&deleteArray_HALcLcLFA0113);
      instance.SetDestructor(&destruct_HALcLcLFA0113);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::FA0113*)
   {
      return GenerateInitInstanceLocal((::HAL::FA0113*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::FA0113*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLFA0113_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::FA0113*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLFA0114_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLFA0114_Dictionary();
   static void delete_HALcLcLFA0114(void *p);
   static void deleteArray_HALcLcLFA0114(void *p);
   static void destruct_HALcLcLFA0114(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::FA0114*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::FA0114) == sizeof(::ROOT::Shadow::HAL::FA0114));
      ::HAL::FA0114 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::FA0114),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::FA0114", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 755,
                  typeid(::HAL::FA0114), DefineBehavior(ptr, ptr),
                  &HALcLcLFA0114_ShowMembers, &HALcLcLFA0114_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::FA0114) );
      instance.SetDelete(&delete_HALcLcLFA0114);
      instance.SetDeleteArray(&deleteArray_HALcLcLFA0114);
      instance.SetDestructor(&destruct_HALcLcLFA0114);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::FA0114*)
   {
      return GenerateInitInstanceLocal((::HAL::FA0114*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::FA0114*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLFA0114_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::FA0114*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLFA0120_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLFA0120_Dictionary();
   static void delete_HALcLcLFA0120(void *p);
   static void deleteArray_HALcLcLFA0120(void *p);
   static void destruct_HALcLcLFA0120(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::FA0120*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::FA0120) == sizeof(::ROOT::Shadow::HAL::FA0120));
      ::HAL::FA0120 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::FA0120),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::FA0120", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 780,
                  typeid(::HAL::FA0120), DefineBehavior(ptr, ptr),
                  &HALcLcLFA0120_ShowMembers, &HALcLcLFA0120_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::FA0120) );
      instance.SetDelete(&delete_HALcLcLFA0120);
      instance.SetDeleteArray(&deleteArray_HALcLcLFA0120);
      instance.SetDestructor(&destruct_HALcLcLFA0120);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::FA0120*)
   {
      return GenerateInitInstanceLocal((::HAL::FA0120*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::FA0120*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLFA0120_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::FA0120*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLFA0121_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLFA0121_Dictionary();
   static void delete_HALcLcLFA0121(void *p);
   static void deleteArray_HALcLcLFA0121(void *p);
   static void destruct_HALcLcLFA0121(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::FA0121*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::FA0121) == sizeof(::ROOT::Shadow::HAL::FA0121));
      ::HAL::FA0121 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::FA0121),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::FA0121", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 805,
                  typeid(::HAL::FA0121), DefineBehavior(ptr, ptr),
                  &HALcLcLFA0121_ShowMembers, &HALcLcLFA0121_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::FA0121) );
      instance.SetDelete(&delete_HALcLcLFA0121);
      instance.SetDeleteArray(&deleteArray_HALcLcLFA0121);
      instance.SetDestructor(&destruct_HALcLcLFA0121);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::FA0121*)
   {
      return GenerateInitInstanceLocal((::HAL::FA0121*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::FA0121*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLFA0121_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::FA0121*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLFA0122_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLFA0122_Dictionary();
   static void delete_HALcLcLFA0122(void *p);
   static void deleteArray_HALcLcLFA0122(void *p);
   static void destruct_HALcLcLFA0122(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::FA0122*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::FA0122) == sizeof(::ROOT::Shadow::HAL::FA0122));
      ::HAL::FA0122 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::FA0122),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::FA0122", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 830,
                  typeid(::HAL::FA0122), DefineBehavior(ptr, ptr),
                  &HALcLcLFA0122_ShowMembers, &HALcLcLFA0122_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::FA0122) );
      instance.SetDelete(&delete_HALcLcLFA0122);
      instance.SetDeleteArray(&deleteArray_HALcLcLFA0122);
      instance.SetDestructor(&destruct_HALcLcLFA0122);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::FA0122*)
   {
      return GenerateInitInstanceLocal((::HAL::FA0122*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::FA0122*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLFA0122_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::FA0122*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLFA0123_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLFA0123_Dictionary();
   static void delete_HALcLcLFA0123(void *p);
   static void deleteArray_HALcLcLFA0123(void *p);
   static void destruct_HALcLcLFA0123(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::FA0123*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::FA0123) == sizeof(::ROOT::Shadow::HAL::FA0123));
      ::HAL::FA0123 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::FA0123),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::FA0123", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 855,
                  typeid(::HAL::FA0123), DefineBehavior(ptr, ptr),
                  &HALcLcLFA0123_ShowMembers, &HALcLcLFA0123_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::FA0123) );
      instance.SetDelete(&delete_HALcLcLFA0123);
      instance.SetDeleteArray(&deleteArray_HALcLcLFA0123);
      instance.SetDestructor(&destruct_HALcLcLFA0123);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::FA0123*)
   {
      return GenerateInitInstanceLocal((::HAL::FA0123*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::FA0123*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLFA0123_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::FA0123*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLFA0124_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLFA0124_Dictionary();
   static void delete_HALcLcLFA0124(void *p);
   static void deleteArray_HALcLcLFA0124(void *p);
   static void destruct_HALcLcLFA0124(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::FA0124*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::FA0124) == sizeof(::ROOT::Shadow::HAL::FA0124));
      ::HAL::FA0124 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::FA0124),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::FA0124", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 880,
                  typeid(::HAL::FA0124), DefineBehavior(ptr, ptr),
                  &HALcLcLFA0124_ShowMembers, &HALcLcLFA0124_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::FA0124) );
      instance.SetDelete(&delete_HALcLcLFA0124);
      instance.SetDeleteArray(&deleteArray_HALcLcLFA0124);
      instance.SetDestructor(&destruct_HALcLcLFA0124);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::FA0124*)
   {
      return GenerateInitInstanceLocal((::HAL::FA0124*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::FA0124*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLFA0124_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::FA0124*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLCA0000_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLCA0000_Dictionary();
   static void delete_HALcLcLCA0000(void *p);
   static void deleteArray_HALcLcLCA0000(void *p);
   static void destruct_HALcLcLCA0000(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::CA0000*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::CA0000) == sizeof(::ROOT::Shadow::HAL::CA0000));
      ::HAL::CA0000 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::CA0000),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::CA0000", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 910,
                  typeid(::HAL::CA0000), DefineBehavior(ptr, ptr),
                  &HALcLcLCA0000_ShowMembers, &HALcLcLCA0000_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::CA0000) );
      instance.SetDelete(&delete_HALcLcLCA0000);
      instance.SetDeleteArray(&deleteArray_HALcLcLCA0000);
      instance.SetDestructor(&destruct_HALcLcLCA0000);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::CA0000*)
   {
      return GenerateInitInstanceLocal((::HAL::CA0000*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::CA0000*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLCA0000_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::CA0000*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLCA0003_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLCA0003_Dictionary();
   static void delete_HALcLcLCA0003(void *p);
   static void deleteArray_HALcLcLCA0003(void *p);
   static void destruct_HALcLcLCA0003(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::CA0003*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::CA0003) == sizeof(::ROOT::Shadow::HAL::CA0003));
      ::HAL::CA0003 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::CA0003),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::CA0003", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 934,
                  typeid(::HAL::CA0003), DefineBehavior(ptr, ptr),
                  &HALcLcLCA0003_ShowMembers, &HALcLcLCA0003_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::CA0003) );
      instance.SetDelete(&delete_HALcLcLCA0003);
      instance.SetDeleteArray(&deleteArray_HALcLcLCA0003);
      instance.SetDestructor(&destruct_HALcLcLCA0003);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::CA0003*)
   {
      return GenerateInitInstanceLocal((::HAL::CA0003*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::CA0003*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLCA0003_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::CA0003*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLCA0100_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLCA0100_Dictionary();
   static void delete_HALcLcLCA0100(void *p);
   static void deleteArray_HALcLcLCA0100(void *p);
   static void destruct_HALcLcLCA0100(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::CA0100*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::CA0100) == sizeof(::ROOT::Shadow::HAL::CA0100));
      ::HAL::CA0100 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::CA0100),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::CA0100", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 958,
                  typeid(::HAL::CA0100), DefineBehavior(ptr, ptr),
                  &HALcLcLCA0100_ShowMembers, &HALcLcLCA0100_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::CA0100) );
      instance.SetDelete(&delete_HALcLcLCA0100);
      instance.SetDeleteArray(&deleteArray_HALcLcLCA0100);
      instance.SetDestructor(&destruct_HALcLcLCA0100);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::CA0100*)
   {
      return GenerateInitInstanceLocal((::HAL::CA0100*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::CA0100*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLCA0100_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::CA0100*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLCA0101_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLCA0101_Dictionary();
   static void delete_HALcLcLCA0101(void *p);
   static void deleteArray_HALcLcLCA0101(void *p);
   static void destruct_HALcLcLCA0101(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::CA0101*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::CA0101) == sizeof(::ROOT::Shadow::HAL::CA0101));
      ::HAL::CA0101 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::CA0101),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::CA0101", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 983,
                  typeid(::HAL::CA0101), DefineBehavior(ptr, ptr),
                  &HALcLcLCA0101_ShowMembers, &HALcLcLCA0101_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::CA0101) );
      instance.SetDelete(&delete_HALcLcLCA0101);
      instance.SetDeleteArray(&deleteArray_HALcLcLCA0101);
      instance.SetDestructor(&destruct_HALcLcLCA0101);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::CA0101*)
   {
      return GenerateInitInstanceLocal((::HAL::CA0101*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::CA0101*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLCA0101_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::CA0101*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLEA0000_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLEA0000_Dictionary();
   static void delete_HALcLcLEA0000(void *p);
   static void deleteArray_HALcLcLEA0000(void *p);
   static void destruct_HALcLcLEA0000(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::EA0000*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::EA0000) == sizeof(::ROOT::Shadow::HAL::EA0000));
      ::HAL::EA0000 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::EA0000),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::EA0000", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 1013,
                  typeid(::HAL::EA0000), DefineBehavior(ptr, ptr),
                  &HALcLcLEA0000_ShowMembers, &HALcLcLEA0000_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::EA0000) );
      instance.SetDelete(&delete_HALcLcLEA0000);
      instance.SetDeleteArray(&deleteArray_HALcLcLEA0000);
      instance.SetDestructor(&destruct_HALcLcLEA0000);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::EA0000*)
   {
      return GenerateInitInstanceLocal((::HAL::EA0000*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::EA0000*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLEA0000_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::EA0000*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLEA0001_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLEA0001_Dictionary();
   static void delete_HALcLcLEA0001(void *p);
   static void deleteArray_HALcLcLEA0001(void *p);
   static void destruct_HALcLcLEA0001(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::EA0001*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::EA0001) == sizeof(::ROOT::Shadow::HAL::EA0001));
      ::HAL::EA0001 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::EA0001),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::EA0001", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 1034,
                  typeid(::HAL::EA0001), DefineBehavior(ptr, ptr),
                  &HALcLcLEA0001_ShowMembers, &HALcLcLEA0001_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::EA0001) );
      instance.SetDelete(&delete_HALcLcLEA0001);
      instance.SetDeleteArray(&deleteArray_HALcLcLEA0001);
      instance.SetDestructor(&destruct_HALcLcLEA0001);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::EA0001*)
   {
      return GenerateInitInstanceLocal((::HAL::EA0001*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::EA0001*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLEA0001_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::EA0001*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLEA0002_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLEA0002_Dictionary();
   static void delete_HALcLcLEA0002(void *p);
   static void deleteArray_HALcLcLEA0002(void *p);
   static void destruct_HALcLcLEA0002(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::EA0002*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::EA0002) == sizeof(::ROOT::Shadow::HAL::EA0002));
      ::HAL::EA0002 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::EA0002),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::EA0002", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 1055,
                  typeid(::HAL::EA0002), DefineBehavior(ptr, ptr),
                  &HALcLcLEA0002_ShowMembers, &HALcLcLEA0002_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::EA0002) );
      instance.SetDelete(&delete_HALcLcLEA0002);
      instance.SetDeleteArray(&deleteArray_HALcLcLEA0002);
      instance.SetDestructor(&destruct_HALcLcLEA0002);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::EA0002*)
   {
      return GenerateInitInstanceLocal((::HAL::EA0002*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::EA0002*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLEA0002_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::EA0002*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLEA0003_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLEA0003_Dictionary();
   static void delete_HALcLcLEA0003(void *p);
   static void deleteArray_HALcLcLEA0003(void *p);
   static void destruct_HALcLcLEA0003(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::EA0003*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::EA0003) == sizeof(::ROOT::Shadow::HAL::EA0003));
      ::HAL::EA0003 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::EA0003),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::EA0003", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 1076,
                  typeid(::HAL::EA0003), DefineBehavior(ptr, ptr),
                  &HALcLcLEA0003_ShowMembers, &HALcLcLEA0003_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::EA0003) );
      instance.SetDelete(&delete_HALcLcLEA0003);
      instance.SetDeleteArray(&deleteArray_HALcLcLEA0003);
      instance.SetDestructor(&destruct_HALcLcLEA0003);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::EA0003*)
   {
      return GenerateInitInstanceLocal((::HAL::EA0003*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::EA0003*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLEA0003_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::EA0003*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLEA0004_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLEA0004_Dictionary();
   static void delete_HALcLcLEA0004(void *p);
   static void deleteArray_HALcLcLEA0004(void *p);
   static void destruct_HALcLcLEA0004(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::EA0004*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::EA0004) == sizeof(::ROOT::Shadow::HAL::EA0004));
      ::HAL::EA0004 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::EA0004),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::EA0004", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 1097,
                  typeid(::HAL::EA0004), DefineBehavior(ptr, ptr),
                  &HALcLcLEA0004_ShowMembers, &HALcLcLEA0004_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::EA0004) );
      instance.SetDelete(&delete_HALcLcLEA0004);
      instance.SetDeleteArray(&deleteArray_HALcLcLEA0004);
      instance.SetDestructor(&destruct_HALcLcLEA0004);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::EA0004*)
   {
      return GenerateInitInstanceLocal((::HAL::EA0004*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::EA0004*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLEA0004_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::EA0004*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLEA0010_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLEA0010_Dictionary();
   static void delete_HALcLcLEA0010(void *p);
   static void deleteArray_HALcLcLEA0010(void *p);
   static void destruct_HALcLcLEA0010(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::EA0010*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::EA0010) == sizeof(::ROOT::Shadow::HAL::EA0010));
      ::HAL::EA0010 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::EA0010),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::EA0010", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 1118,
                  typeid(::HAL::EA0010), DefineBehavior(ptr, ptr),
                  &HALcLcLEA0010_ShowMembers, &HALcLcLEA0010_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::EA0010) );
      instance.SetDelete(&delete_HALcLcLEA0010);
      instance.SetDeleteArray(&deleteArray_HALcLcLEA0010);
      instance.SetDestructor(&destruct_HALcLcLEA0010);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::EA0010*)
   {
      return GenerateInitInstanceLocal((::HAL::EA0010*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::EA0010*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLEA0010_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::EA0010*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLEA0011_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLEA0011_Dictionary();
   static void delete_HALcLcLEA0011(void *p);
   static void deleteArray_HALcLcLEA0011(void *p);
   static void destruct_HALcLcLEA0011(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::EA0011*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::EA0011) == sizeof(::ROOT::Shadow::HAL::EA0011));
      ::HAL::EA0011 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::EA0011),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::EA0011", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 1139,
                  typeid(::HAL::EA0011), DefineBehavior(ptr, ptr),
                  &HALcLcLEA0011_ShowMembers, &HALcLcLEA0011_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::EA0011) );
      instance.SetDelete(&delete_HALcLcLEA0011);
      instance.SetDeleteArray(&deleteArray_HALcLcLEA0011);
      instance.SetDestructor(&destruct_HALcLcLEA0011);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::EA0011*)
   {
      return GenerateInitInstanceLocal((::HAL::EA0011*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::EA0011*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLEA0011_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::EA0011*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLEA0012_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLEA0012_Dictionary();
   static void delete_HALcLcLEA0012(void *p);
   static void deleteArray_HALcLcLEA0012(void *p);
   static void destruct_HALcLcLEA0012(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::EA0012*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::EA0012) == sizeof(::ROOT::Shadow::HAL::EA0012));
      ::HAL::EA0012 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::EA0012),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::EA0012", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 1160,
                  typeid(::HAL::EA0012), DefineBehavior(ptr, ptr),
                  &HALcLcLEA0012_ShowMembers, &HALcLcLEA0012_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::EA0012) );
      instance.SetDelete(&delete_HALcLcLEA0012);
      instance.SetDeleteArray(&deleteArray_HALcLcLEA0012);
      instance.SetDestructor(&destruct_HALcLcLEA0012);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::EA0012*)
   {
      return GenerateInitInstanceLocal((::HAL::EA0012*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::EA0012*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLEA0012_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::EA0012*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLEA0013_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLEA0013_Dictionary();
   static void delete_HALcLcLEA0013(void *p);
   static void deleteArray_HALcLcLEA0013(void *p);
   static void destruct_HALcLcLEA0013(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::EA0013*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::EA0013) == sizeof(::ROOT::Shadow::HAL::EA0013));
      ::HAL::EA0013 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::EA0013),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::EA0013", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 1181,
                  typeid(::HAL::EA0013), DefineBehavior(ptr, ptr),
                  &HALcLcLEA0013_ShowMembers, &HALcLcLEA0013_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::EA0013) );
      instance.SetDelete(&delete_HALcLcLEA0013);
      instance.SetDeleteArray(&deleteArray_HALcLcLEA0013);
      instance.SetDestructor(&destruct_HALcLcLEA0013);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::EA0013*)
   {
      return GenerateInitInstanceLocal((::HAL::EA0013*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::EA0013*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLEA0013_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::EA0013*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLEA0014_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLEA0014_Dictionary();
   static void delete_HALcLcLEA0014(void *p);
   static void deleteArray_HALcLcLEA0014(void *p);
   static void destruct_HALcLcLEA0014(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::EA0014*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::EA0014) == sizeof(::ROOT::Shadow::HAL::EA0014));
      ::HAL::EA0014 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::EA0014),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::EA0014", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Algorithms.h", 1202,
                  typeid(::HAL::EA0014), DefineBehavior(ptr, ptr),
                  &HALcLcLEA0014_ShowMembers, &HALcLcLEA0014_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::EA0014) );
      instance.SetDelete(&delete_HALcLcLEA0014);
      instance.SetDeleteArray(&deleteArray_HALcLcLEA0014);
      instance.SetDestructor(&destruct_HALcLcLEA0014);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::EA0014*)
   {
      return GenerateInitInstanceLocal((::HAL::EA0014*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::EA0014*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLEA0014_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::EA0014*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLAnalysisSelector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HALcLcLAnalysisSelector(void *p);
   static void deleteArray_HALcLcLAnalysisSelector(void *p);
   static void destruct_HALcLcLAnalysisSelector(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::AnalysisSelector*)
   {
      ::HAL::AnalysisSelector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HAL::AnalysisSelector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::AnalysisSelector", ::HAL::AnalysisSelector::Class_Version(), "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/AnalysisSelector.h", 19,
                  typeid(::HAL::AnalysisSelector), DefineBehavior(ptr, ptr),
                  &::HAL::AnalysisSelector::Dictionary, isa_proxy, 4,
                  sizeof(::HAL::AnalysisSelector) );
      instance.SetDelete(&delete_HALcLcLAnalysisSelector);
      instance.SetDeleteArray(&deleteArray_HALcLcLAnalysisSelector);
      instance.SetDestructor(&destruct_HALcLcLAnalysisSelector);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::AnalysisSelector*)
   {
      return GenerateInitInstanceLocal((::HAL::AnalysisSelector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::AnalysisSelector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void HALcLcLAnalysis_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HALcLcLAnalysis(void *p = 0);
   static void *newArray_HALcLcLAnalysis(Long_t size, void *p);
   static void delete_HALcLcLAnalysis(void *p);
   static void deleteArray_HALcLcLAnalysis(void *p);
   static void destruct_HALcLcLAnalysis(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::Analysis*)
   {
      ::HAL::Analysis *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HAL::Analysis >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::Analysis", ::HAL::Analysis::Class_Version(), "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Analysis.h", 17,
                  typeid(::HAL::Analysis), DefineBehavior(ptr, ptr),
                  &::HAL::Analysis::Dictionary, isa_proxy, 4,
                  sizeof(::HAL::Analysis) );
      instance.SetNew(&new_HALcLcLAnalysis);
      instance.SetNewArray(&newArray_HALcLcLAnalysis);
      instance.SetDelete(&delete_HALcLcLAnalysis);
      instance.SetDeleteArray(&deleteArray_HALcLcLAnalysis);
      instance.SetDestructor(&destruct_HALcLcLAnalysis);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::Analysis*)
   {
      return GenerateInitInstanceLocal((::HAL::Analysis*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::Analysis*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void HALcLcLCutOptimizer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLCutOptimizer_Dictionary();
   static void *new_HALcLcLCutOptimizer(void *p = 0);
   static void *newArray_HALcLcLCutOptimizer(Long_t size, void *p);
   static void delete_HALcLcLCutOptimizer(void *p);
   static void deleteArray_HALcLcLCutOptimizer(void *p);
   static void destruct_HALcLcLCutOptimizer(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::CutOptimizer*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::CutOptimizer) == sizeof(::ROOT::Shadow::HAL::CutOptimizer));
      ::HAL::CutOptimizer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::CutOptimizer),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::CutOptimizer", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/CutOptimizer.h", 63,
                  typeid(::HAL::CutOptimizer), DefineBehavior(ptr, ptr),
                  &HALcLcLCutOptimizer_ShowMembers, &HALcLcLCutOptimizer_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::CutOptimizer) );
      instance.SetNew(&new_HALcLcLCutOptimizer);
      instance.SetNewArray(&newArray_HALcLcLCutOptimizer);
      instance.SetDelete(&delete_HALcLcLCutOptimizer);
      instance.SetDeleteArray(&deleteArray_HALcLcLCutOptimizer);
      instance.SetDestructor(&destruct_HALcLcLCutOptimizer);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::CutOptimizer*)
   {
      return GenerateInitInstanceLocal((::HAL::CutOptimizer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::CutOptimizer*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLCutOptimizer_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::CutOptimizer*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLIntegrator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLIntegrator_Dictionary();
   static void *new_HALcLcLIntegrator(void *p = 0);
   static void *newArray_HALcLcLIntegrator(Long_t size, void *p);
   static void delete_HALcLcLIntegrator(void *p);
   static void deleteArray_HALcLcLIntegrator(void *p);
   static void destruct_HALcLcLIntegrator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::Integrator*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::Integrator) == sizeof(::ROOT::Shadow::HAL::Integrator));
      ::HAL::Integrator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::Integrator),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::Integrator", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Integrator.h", 17,
                  typeid(::HAL::Integrator), DefineBehavior(ptr, ptr),
                  &HALcLcLIntegrator_ShowMembers, &HALcLcLIntegrator_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::Integrator) );
      instance.SetNew(&new_HALcLcLIntegrator);
      instance.SetNewArray(&newArray_HALcLcLIntegrator);
      instance.SetDelete(&delete_HALcLcLIntegrator);
      instance.SetDeleteArray(&deleteArray_HALcLcLIntegrator);
      instance.SetDestructor(&destruct_HALcLcLIntegrator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::Integrator*)
   {
      return GenerateInitInstanceLocal((::HAL::Integrator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::Integrator*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLIntegrator_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::Integrator*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLInterpBase_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLInterpBase_Dictionary();
   static void delete_HALcLcLInterpBase(void *p);
   static void deleteArray_HALcLcLInterpBase(void *p);
   static void destruct_HALcLcLInterpBase(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::InterpBase*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::InterpBase) == sizeof(::ROOT::Shadow::HAL::InterpBase));
      ::HAL::InterpBase *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::InterpBase),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::InterpBase", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Interpolator.h", 17,
                  typeid(::HAL::InterpBase), DefineBehavior(ptr, ptr),
                  &HALcLcLInterpBase_ShowMembers, &HALcLcLInterpBase_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::InterpBase) );
      instance.SetDelete(&delete_HALcLcLInterpBase);
      instance.SetDeleteArray(&deleteArray_HALcLcLInterpBase);
      instance.SetDestructor(&destruct_HALcLcLInterpBase);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::InterpBase*)
   {
      return GenerateInitInstanceLocal((::HAL::InterpBase*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::InterpBase*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLInterpBase_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::InterpBase*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLPolyInterp_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLPolyInterp_Dictionary();
   static void delete_HALcLcLPolyInterp(void *p);
   static void deleteArray_HALcLcLPolyInterp(void *p);
   static void destruct_HALcLcLPolyInterp(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::PolyInterp*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::PolyInterp) == sizeof(::ROOT::Shadow::HAL::PolyInterp));
      ::HAL::PolyInterp *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::PolyInterp),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::PolyInterp", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Interpolator.h", 40,
                  typeid(::HAL::PolyInterp), DefineBehavior(ptr, ptr),
                  &HALcLcLPolyInterp_ShowMembers, &HALcLcLPolyInterp_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::PolyInterp) );
      instance.SetDelete(&delete_HALcLcLPolyInterp);
      instance.SetDeleteArray(&deleteArray_HALcLcLPolyInterp);
      instance.SetDestructor(&destruct_HALcLcLPolyInterp);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::PolyInterp*)
   {
      return GenerateInitInstanceLocal((::HAL::PolyInterp*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::PolyInterp*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLPolyInterp_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::PolyInterp*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLPoly2DInterp_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLPoly2DInterp_Dictionary();
   static void delete_HALcLcLPoly2DInterp(void *p);
   static void deleteArray_HALcLcLPoly2DInterp(void *p);
   static void destruct_HALcLcLPoly2DInterp(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::Poly2DInterp*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::Poly2DInterp) == sizeof(::ROOT::Shadow::HAL::Poly2DInterp));
      ::HAL::Poly2DInterp *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::Poly2DInterp),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::Poly2DInterp", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/Interpolator.h", 53,
                  typeid(::HAL::Poly2DInterp), DefineBehavior(ptr, ptr),
                  &HALcLcLPoly2DInterp_ShowMembers, &HALcLcLPoly2DInterp_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::Poly2DInterp) );
      instance.SetDelete(&delete_HALcLcLPoly2DInterp);
      instance.SetDeleteArray(&deleteArray_HALcLcLPoly2DInterp);
      instance.SetDestructor(&destruct_HALcLcLPoly2DInterp);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::Poly2DInterp*)
   {
      return GenerateInitInstanceLocal((::HAL::Poly2DInterp*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::Poly2DInterp*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLPoly2DInterp_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::Poly2DInterp*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HALcLcLPythonAlgorithm_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HALcLcLPythonAlgorithm_Dictionary();
   static void *new_HALcLcLPythonAlgorithm(void *p = 0);
   static void *newArray_HALcLcLPythonAlgorithm(Long_t size, void *p);
   static void delete_HALcLcLPythonAlgorithm(void *p);
   static void deleteArray_HALcLcLPythonAlgorithm(void *p);
   static void destruct_HALcLcLPythonAlgorithm(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HAL::PythonAlgorithm*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::HAL::PythonAlgorithm) == sizeof(::ROOT::Shadow::HAL::PythonAlgorithm));
      ::HAL::PythonAlgorithm *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HAL::PythonAlgorithm),0);
      static ::ROOT::TGenericClassInfo 
         instance("HAL::PythonAlgorithm", "/lustre/users/jhetherl/src/HAL-ROOT/include/HAL/PythonAlgorithm.h", 15,
                  typeid(::HAL::PythonAlgorithm), DefineBehavior(ptr, ptr),
                  &HALcLcLPythonAlgorithm_ShowMembers, &HALcLcLPythonAlgorithm_Dictionary, isa_proxy, 4,
                  sizeof(::HAL::PythonAlgorithm) );
      instance.SetNew(&new_HALcLcLPythonAlgorithm);
      instance.SetNewArray(&newArray_HALcLcLPythonAlgorithm);
      instance.SetDelete(&delete_HALcLcLPythonAlgorithm);
      instance.SetDeleteArray(&deleteArray_HALcLcLPythonAlgorithm);
      instance.SetDestructor(&destruct_HALcLcLPythonAlgorithm);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HAL::PythonAlgorithm*)
   {
      return GenerateInitInstanceLocal((::HAL::PythonAlgorithm*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HAL::PythonAlgorithm*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HALcLcLPythonAlgorithm_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HAL::PythonAlgorithm*)0x0)->GetClass();
   }

} // end of namespace ROOT

      namespace HAL {
//______________________________________________________________________________
TClass *AnalysisData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *AnalysisData::Class_Name()
{
   return "HAL::AnalysisData";
}

//______________________________________________________________________________
const char *AnalysisData::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HAL::AnalysisData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AnalysisData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HAL::AnalysisData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AnalysisData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HAL::AnalysisData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AnalysisData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HAL::AnalysisData*)0x0)->GetClass();
   return fgIsA;
}

} // namespace HAL
      namespace HAL {
//______________________________________________________________________________
TClass *AnalysisTreeReader::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *AnalysisTreeReader::Class_Name()
{
   return "HAL::AnalysisTreeReader";
}

//______________________________________________________________________________
const char *AnalysisTreeReader::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HAL::AnalysisTreeReader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AnalysisTreeReader::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HAL::AnalysisTreeReader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AnalysisTreeReader::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HAL::AnalysisTreeReader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AnalysisTreeReader::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HAL::AnalysisTreeReader*)0x0)->GetClass();
   return fgIsA;
}

} // namespace HAL
      namespace HAL {
//______________________________________________________________________________
TClass *AnalysisTreeWriter::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *AnalysisTreeWriter::Class_Name()
{
   return "HAL::AnalysisTreeWriter";
}

//______________________________________________________________________________
const char *AnalysisTreeWriter::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HAL::AnalysisTreeWriter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AnalysisTreeWriter::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HAL::AnalysisTreeWriter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AnalysisTreeWriter::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HAL::AnalysisTreeWriter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AnalysisTreeWriter::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HAL::AnalysisTreeWriter*)0x0)->GetClass();
   return fgIsA;
}

} // namespace HAL
      namespace HAL {
//______________________________________________________________________________
TClass *Algorithm::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Algorithm::Class_Name()
{
   return "HAL::Algorithm";
}

//______________________________________________________________________________
const char *Algorithm::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HAL::Algorithm*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Algorithm::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HAL::Algorithm*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Algorithm::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HAL::Algorithm*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Algorithm::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HAL::Algorithm*)0x0)->GetClass();
   return fgIsA;
}

} // namespace HAL
      namespace HAL {
//______________________________________________________________________________
TClass *AnalysisSelector::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *AnalysisSelector::Class_Name()
{
   return "HAL::AnalysisSelector";
}

//______________________________________________________________________________
const char *AnalysisSelector::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HAL::AnalysisSelector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AnalysisSelector::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HAL::AnalysisSelector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AnalysisSelector::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HAL::AnalysisSelector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AnalysisSelector::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HAL::AnalysisSelector*)0x0)->GetClass();
   return fgIsA;
}

} // namespace HAL
      namespace HAL {
//______________________________________________________________________________
TClass *Analysis::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Analysis::Class_Name()
{
   return "HAL::Analysis";
}

//______________________________________________________________________________
const char *Analysis::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HAL::Analysis*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Analysis::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HAL::Analysis*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Analysis::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HAL::Analysis*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Analysis::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HAL::Analysis*)0x0)->GetClass();
   return fgIsA;
}

} // namespace HAL
      namespace HAL {
//______________________________________________________________________________
void AnalysisData::Streamer(TBuffer &R__b)
{
   // Stream an object of class HAL::AnalysisData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(HAL::AnalysisData::Class(),this);
   } else {
      R__b.WriteClassBuffer(HAL::AnalysisData::Class(),this);
   }
}

} // namespace HAL
//______________________________________________________________________________
      namespace HAL {
void AnalysisData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HAL::AnalysisData.
      TClass *R__cl = ::HAL::AnalysisData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBoolMap", (void*)&fBoolMap);
      R__insp.InspectMember("map<std::string,bool>", (void*)&fBoolMap, "fBoolMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDecimalMap", (void*)&fDecimalMap);
      R__insp.InspectMember("map<std::string,long double>", (void*)&fDecimalMap, "fDecimalMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIntegerMap", (void*)&fIntegerMap);
      R__insp.InspectMember("map<std::string,Long64_t>", (void*)&fIntegerMap, "fIntegerMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCountingMap", (void*)&fCountingMap);
      R__insp.InspectMember("map<std::string,ULong64_t>", (void*)&fCountingMap, "fCountingMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStringMap", (void*)&fStringMap);
      R__insp.InspectMember("map<std::string,std::string>", (void*)&fStringMap, "fStringMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTObjectMap", (void*)&fTObjectMap);
      R__insp.InspectMember("map<std::string,TObject*>", (void*)&fTObjectMap, "fTObjectMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBoolIntMap", (void*)&fBoolIntMap);
      R__insp.InspectMember("map<std::string,std::map<Long64_t,bool> >", (void*)&fBoolIntMap, "fBoolIntMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDecimalIntMap", (void*)&fDecimalIntMap);
      R__insp.InspectMember("map<std::string,std::map<Long64_t,long double> >", (void*)&fDecimalIntMap, "fDecimalIntMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIntegerIntMap", (void*)&fIntegerIntMap);
      R__insp.InspectMember("map<std::string,std::map<Long64_t,Long64_t> >", (void*)&fIntegerIntMap, "fIntegerIntMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCountingIntMap", (void*)&fCountingIntMap);
      R__insp.InspectMember("map<std::string,std::map<Long64_t,ULong64_t> >", (void*)&fCountingIntMap, "fCountingIntMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStringIntMap", (void*)&fStringIntMap);
      R__insp.InspectMember("map<std::string,std::map<Long64_t,std::string> >", (void*)&fStringIntMap, "fStringIntMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTObjectIntMap", (void*)&fTObjectIntMap);
      R__insp.InspectMember("map<std::string,std::map<Long64_t,TObject*> >", (void*)&fTObjectIntMap, "fTObjectIntMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBoolIntIntMap", (void*)&fBoolIntIntMap);
      R__insp.InspectMember("map<std::string,std::map<Long64_t,std::map<Long64_t,bool> > >", (void*)&fBoolIntIntMap, "fBoolIntIntMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDecimalIntIntMap", (void*)&fDecimalIntIntMap);
      R__insp.InspectMember("map<std::string,std::map<Long64_t,std::map<Long64_t,long double> > >", (void*)&fDecimalIntIntMap, "fDecimalIntIntMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIntegerIntIntMap", (void*)&fIntegerIntIntMap);
      R__insp.InspectMember("map<std::string,std::map<Long64_t,std::map<Long64_t,Long64_t> > >", (void*)&fIntegerIntIntMap, "fIntegerIntIntMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCountingIntIntMap", (void*)&fCountingIntIntMap);
      R__insp.InspectMember("map<std::string,std::map<Long64_t,std::map<Long64_t,ULong64_t> > >", (void*)&fCountingIntIntMap, "fCountingIntIntMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStringIntIntMap", (void*)&fStringIntIntMap);
      R__insp.InspectMember("map<std::string,std::map<Long64_t,std::map<Long64_t,std::string> > >", (void*)&fStringIntIntMap, "fStringIntIntMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTObjectIntIntMap", (void*)&fTObjectIntIntMap);
      R__insp.InspectMember("map<std::string,std::map<Long64_t,std::map<Long64_t,TObject*> > >", (void*)&fTObjectIntIntMap, "fTObjectIntIntMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameTypeMap", (void*)&fNameTypeMap);
      R__insp.InspectMember("map<std::string,StorageType>", (void*)&fNameTypeMap, "fNameTypeMap.", false);
      TNamed::ShowMembers(R__insp);
}

} // namespace HAL
namespace ROOT {
   // Wrappers around operator new
   static void *new_HALcLcLAnalysisData(void *p) {
      return  p ? new(p) ::HAL::AnalysisData : new ::HAL::AnalysisData;
   }
   static void *newArray_HALcLcLAnalysisData(Long_t nElements, void *p) {
      return p ? new(p) ::HAL::AnalysisData[nElements] : new ::HAL::AnalysisData[nElements];
   }
   // Wrapper around operator delete
   static void delete_HALcLcLAnalysisData(void *p) {
      delete ((::HAL::AnalysisData*)p);
   }
   static void deleteArray_HALcLcLAnalysisData(void *p) {
      delete [] ((::HAL::AnalysisData*)p);
   }
   static void destruct_HALcLcLAnalysisData(void *p) {
      typedef ::HAL::AnalysisData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::AnalysisData

      namespace HAL {
//______________________________________________________________________________
void AnalysisTreeReader::Streamer(TBuffer &R__b)
{
   // Stream an object of class HAL::AnalysisTreeReader.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(HAL::AnalysisTreeReader::Class(),this);
   } else {
      R__b.WriteClassBuffer(HAL::AnalysisTreeReader::Class(),this);
   }
}

} // namespace HAL
//______________________________________________________________________________
      namespace HAL {
void AnalysisTreeReader::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HAL::AnalysisTreeReader.
      TClass *R__cl = ::HAL::AnalysisTreeReader::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEntry", &fEntry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fScalar", &fScalar);
      R__insp.InspectMember(fScalar, "fScalar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVector", &fVector);
      R__insp.InspectMember(fVector, "fVector.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVector2D", &fVector2D);
      R__insp.InspectMember(fVector2D, "fVector2D.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fArray", &fArray);
      R__insp.InspectMember(fArray, "fArray.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fArray2D", &fArray2D);
      R__insp.InspectMember(fArray2D, "fArray2D.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBool", (void*)&fBool);
      R__insp.InspectMember("set<TString>", (void*)&fBool, "fBool.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInteger", (void*)&fInteger);
      R__insp.InspectMember("set<TString>", (void*)&fInteger, "fInteger.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fShort", (void*)&fShort);
      R__insp.InspectMember("set<TString>", (void*)&fShort, "fShort.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLong", (void*)&fLong);
      R__insp.InspectMember("set<TString>", (void*)&fLong, "fLong.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLLong", (void*)&fLLong);
      R__insp.InspectMember("set<TString>", (void*)&fLLong, "fLLong.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSChar", (void*)&fSChar);
      R__insp.InspectMember("set<TString>", (void*)&fSChar, "fSChar.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUInteger", (void*)&fUInteger);
      R__insp.InspectMember("set<TString>", (void*)&fUInteger, "fUInteger.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUShort", (void*)&fUShort);
      R__insp.InspectMember("set<TString>", (void*)&fUShort, "fUShort.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fULong", (void*)&fULong);
      R__insp.InspectMember("set<TString>", (void*)&fULong, "fULong.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fULLong", (void*)&fULLong);
      R__insp.InspectMember("set<TString>", (void*)&fULLong, "fULLong.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUChar", (void*)&fUChar);
      R__insp.InspectMember("set<TString>", (void*)&fUChar, "fUChar.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFloat", (void*)&fFloat);
      R__insp.InspectMember("set<TString>", (void*)&fFloat, "fFloat.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDouble", (void*)&fDouble);
      R__insp.InspectMember("set<TString>", (void*)&fDouble, "fDouble.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLDouble", (void*)&fLDouble);
      R__insp.InspectMember("set<TString>", (void*)&fLDouble, "fLDouble.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChar", (void*)&fChar);
      R__insp.InspectMember("set<TString>", (void*)&fChar, "fChar.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBranchMap", &fBranchMap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fB", (void*)&fB);
      R__insp.InspectMember("deque<bool>", (void*)&fB, "fB.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fD", (void*)&fD);
      R__insp.InspectMember("deque<long double>", (void*)&fD, "fD.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fI", (void*)&fI);
      R__insp.InspectMember("deque<Long64_t>", (void*)&fI, "fI.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fC", (void*)&fC);
      R__insp.InspectMember("deque<ULong64_t>", (void*)&fC, "fC.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fS", (void*)&fS);
      R__insp.InspectMember("deque<TString>", (void*)&fS, "fS.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOA", (void*)&fOA);
      R__insp.InspectMember("deque<TObjArray>", (void*)&fOA, "fOA.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCA", (void*)&fCA);
      R__insp.InspectMember("deque<TClonesArray>", (void*)&fCA, "fCA.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fR", (void*)&fR);
      R__insp.InspectMember("deque<TRef>", (void*)&fR, "fR.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRA", (void*)&fRA);
      R__insp.InspectMember("deque<TRefArray>", (void*)&fRA, "fRA.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fvB", (void*)&fvB);
      R__insp.InspectMember("deque<std::vector<bool> >", (void*)&fvB, "fvB.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fvD", (void*)&fvD);
      R__insp.InspectMember("deque<std::vector<long double> >", (void*)&fvD, "fvD.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fvI", (void*)&fvI);
      R__insp.InspectMember("deque<std::vector<Long64_t> >", (void*)&fvI, "fvI.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fvC", (void*)&fvC);
      R__insp.InspectMember("deque<std::vector<ULong64_t> >", (void*)&fvC, "fvC.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fvS", (void*)&fvS);
      R__insp.InspectMember("deque<std::vector<TString> >", (void*)&fvS, "fvS.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fvOA", (void*)&fvOA);
      R__insp.InspectMember("deque<std::vector<TObjArray> >", (void*)&fvOA, "fvOA.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fvCA", (void*)&fvCA);
      R__insp.InspectMember("deque<std::vector<TClonesArray> >", (void*)&fvCA, "fvCA.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fvR", (void*)&fvR);
      R__insp.InspectMember("deque<std::vector<TRef> >", (void*)&fvR, "fvR.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fvRA", (void*)&fvRA);
      R__insp.InspectMember("deque<std::vector<TRefArray> >", (void*)&fvRA, "fvRA.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fvvB", (void*)&fvvB);
      R__insp.InspectMember("deque<std::vector<std::vector<bool> > >", (void*)&fvvB, "fvvB.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fvvD", (void*)&fvvD);
      R__insp.InspectMember("deque<std::vector<std::vector<long double> > >", (void*)&fvvD, "fvvD.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fvvI", (void*)&fvvI);
      R__insp.InspectMember("deque<std::vector<std::vector<Long64_t> > >", (void*)&fvvI, "fvvI.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fvvC", (void*)&fvvC);
      R__insp.InspectMember("deque<std::vector<std::vector<ULong64_t> > >", (void*)&fvvC, "fvvC.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fvvS", (void*)&fvvS);
      R__insp.InspectMember("deque<std::vector<std::vector<TString> > >", (void*)&fvvS, "fvvS.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fvvR", (void*)&fvvR);
      R__insp.InspectMember("deque<std::vector<std::vector<TRef> > >", (void*)&fvvR, "fvvR.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBranchManagers", (void*)&fBranchManagers);
      R__insp.InspectMember("vector<BranchManager*>", (void*)&fBranchManagers, "fBranchManagers.", false);
      TNamed::ShowMembers(R__insp);
}

} // namespace HAL
namespace ROOT {
   // Wrappers around operator new
   static void *new_HALcLcLAnalysisTreeReader(void *p) {
      return  p ? new(p) ::HAL::AnalysisTreeReader : new ::HAL::AnalysisTreeReader;
   }
   static void *newArray_HALcLcLAnalysisTreeReader(Long_t nElements, void *p) {
      return p ? new(p) ::HAL::AnalysisTreeReader[nElements] : new ::HAL::AnalysisTreeReader[nElements];
   }
   // Wrapper around operator delete
   static void delete_HALcLcLAnalysisTreeReader(void *p) {
      delete ((::HAL::AnalysisTreeReader*)p);
   }
   static void deleteArray_HALcLcLAnalysisTreeReader(void *p) {
      delete [] ((::HAL::AnalysisTreeReader*)p);
   }
   static void destruct_HALcLcLAnalysisTreeReader(void *p) {
      typedef ::HAL::AnalysisTreeReader current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::AnalysisTreeReader

      namespace HAL {
//______________________________________________________________________________
void AnalysisTreeWriter::Streamer(TBuffer &R__b)
{
   // Stream an object of class HAL::AnalysisTreeWriter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(HAL::AnalysisTreeWriter::Class(),this);
   } else {
      R__b.WriteClassBuffer(HAL::AnalysisTreeWriter::Class(),this);
   }
}

} // namespace HAL
//______________________________________________________________________________
      namespace HAL {
void AnalysisTreeWriter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HAL::AnalysisTreeWriter.
      TClass *R__cl = ::HAL::AnalysisTreeWriter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCount", &fCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOutputFileName", &fOutputFileName);
      R__insp.InspectMember(fOutputFileName, "fOutputFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTreeName", &fTreeName);
      R__insp.InspectMember(fTreeName, "fTreeName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTreeDescription", &fTreeDescription);
      R__insp.InspectMember(fTreeDescription, "fTreeDescription.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBoolCount", (void*)&fBoolCount);
      R__insp.InspectMember("map<std::string,Long64_t>", (void*)&fBoolCount, "fBoolCount.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDecimalCount", (void*)&fDecimalCount);
      R__insp.InspectMember("map<std::string,Long64_t>", (void*)&fDecimalCount, "fDecimalCount.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIntegerCount", (void*)&fIntegerCount);
      R__insp.InspectMember("map<std::string,Long64_t>", (void*)&fIntegerCount, "fIntegerCount.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCountingCount", (void*)&fCountingCount);
      R__insp.InspectMember("map<std::string,Long64_t>", (void*)&fCountingCount, "fCountingCount.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBoolIntCount", (void*)&fBoolIntCount);
      R__insp.InspectMember("map<std::string,std::map<Long64_t,Long64_t> >", (void*)&fBoolIntCount, "fBoolIntCount.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDecimalIntCount", (void*)&fDecimalIntCount);
      R__insp.InspectMember("map<std::string,std::map<Long64_t,Long64_t> >", (void*)&fDecimalIntCount, "fDecimalIntCount.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIntegerIntCount", (void*)&fIntegerIntCount);
      R__insp.InspectMember("map<std::string,std::map<Long64_t,Long64_t> >", (void*)&fIntegerIntCount, "fIntegerIntCount.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCountingIntCount", (void*)&fCountingIntCount);
      R__insp.InspectMember("map<std::string,std::map<Long64_t,Long64_t> >", (void*)&fCountingIntCount, "fCountingIntCount.", false);
      //This works around a msvc bug and should be harmless on other platforms
      typedef HAL::AnalysisData baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace HAL
namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLAnalysisTreeWriter(void *p) {
      delete ((::HAL::AnalysisTreeWriter*)p);
   }
   static void deleteArray_HALcLcLAnalysisTreeWriter(void *p) {
      delete [] ((::HAL::AnalysisTreeWriter*)p);
   }
   static void destruct_HALcLcLAnalysisTreeWriter(void *p) {
      typedef ::HAL::AnalysisTreeWriter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::AnalysisTreeWriter

      namespace HAL {
//______________________________________________________________________________
void Algorithm::Streamer(TBuffer &R__b)
{
   // Stream an object of class HAL::Algorithm.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(HAL::Algorithm::Class(),this);
   } else {
      R__b.WriteClassBuffer(HAL::Algorithm::Class(),this);
   }
}

} // namespace HAL
//______________________________________________________________________________
      namespace HAL {
void Algorithm::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HAL::Algorithm.
      TClass *R__cl = ::HAL::Algorithm::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDataList", &fDataList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fName", &fName);
      R__insp.InspectMember(fName, "fName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTitle", &fTitle);
      R__insp.InspectMember(fTitle, "fTitle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOutputFileName", &fOutputFileName);
      R__insp.InspectMember(fOutputFileName, "fOutputFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAlgorithms", (void*)&fAlgorithms);
      R__insp.InspectMember("list<Algorithm*>", (void*)&fAlgorithms, "fAlgorithms.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOption", &fOption);
      R__insp.InspectMember(fOption, "fOption.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHasExecuted", &fHasExecuted);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAbort", &fAbort);
}

} // namespace HAL
namespace ROOT {
   // Wrappers around operator new
   static void *new_HALcLcLAlgorithm(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HAL::Algorithm : new ::HAL::Algorithm;
   }
   static void *newArray_HALcLcLAlgorithm(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HAL::Algorithm[nElements] : new ::HAL::Algorithm[nElements];
   }
   // Wrapper around operator delete
   static void delete_HALcLcLAlgorithm(void *p) {
      delete ((::HAL::Algorithm*)p);
   }
   static void deleteArray_HALcLcLAlgorithm(void *p) {
      delete [] ((::HAL::Algorithm*)p);
   }
   static void destruct_HALcLcLAlgorithm(void *p) {
      typedef ::HAL::Algorithm current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::Algorithm

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLCutAlgorithm_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::CutAlgorithm.
      typedef ::ROOT::Shadow::HAL::CutAlgorithm ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::CutAlgorithm*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNPassed", &sobj->fNPassed);
      sobj->HAL::Algorithm::ShowMembers(R__insp);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_HALcLcLCutAlgorithm(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HAL::CutAlgorithm : new ::HAL::CutAlgorithm;
   }
   static void *newArray_HALcLcLCutAlgorithm(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HAL::CutAlgorithm[nElements] : new ::HAL::CutAlgorithm[nElements];
   }
   // Wrapper around operator delete
   static void delete_HALcLcLCutAlgorithm(void *p) {
      delete ((::HAL::CutAlgorithm*)p);
   }
   static void deleteArray_HALcLcLCutAlgorithm(void *p) {
      delete [] ((::HAL::CutAlgorithm*)p);
   }
   static void destruct_HALcLcLCutAlgorithm(void *p) {
      typedef ::HAL::CutAlgorithm current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::CutAlgorithm

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLAnalysisTreeReadercLcLBranchManager_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::AnalysisTreeReader::BranchManager.
      typedef ::ROOT::Shadow::HAL::AnalysisTreeReader::BranchManager ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::AnalysisTreeReader::BranchManager*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStorageID", &sobj->fStorageID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStorageIndex", &sobj->fStorageIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fScalar", &sobj->fScalar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCArray1D", &sobj->fCArray1D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCArray2D", &sobj->fCArray2D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVec1D", &sobj->fVec1D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVec2D", &sobj->fVec2D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBranchName", &sobj->fBranchName);
      R__insp.InspectMember(sobj->fBranchName, "fBranchName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBranchTitle", &sobj->fBranchTitle);
      R__insp.InspectMember(sobj->fBranchTitle, "fBranchTitle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLeafTitle", &sobj->fLeafTitle);
      R__insp.InspectMember(sobj->fLeafTitle, "fLeafTitle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fType", &sobj->fType);
      R__insp.InspectMember(sobj->fType, "fType.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fScalarType", &sobj->fScalarType);
      R__insp.InspectMember(sobj->fScalarType, "fScalarType.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLeafNdata", &sobj->fLeafNdata);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBranch", &sobj->fBranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTreeReader", &sobj->fTreeReader);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_HALcLcLAnalysisTreeReadercLcLBranchManager(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HAL::AnalysisTreeReader::BranchManager : new ::HAL::AnalysisTreeReader::BranchManager;
   }
   static void *newArray_HALcLcLAnalysisTreeReadercLcLBranchManager(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HAL::AnalysisTreeReader::BranchManager[nElements] : new ::HAL::AnalysisTreeReader::BranchManager[nElements];
   }
   // Wrapper around operator delete
   static void delete_HALcLcLAnalysisTreeReadercLcLBranchManager(void *p) {
      delete ((::HAL::AnalysisTreeReader::BranchManager*)p);
   }
   static void deleteArray_HALcLcLAnalysisTreeReadercLcLBranchManager(void *p) {
      delete [] ((::HAL::AnalysisTreeReader::BranchManager*)p);
   }
   static void destruct_HALcLcLAnalysisTreeReadercLcLBranchManager(void *p) {
      typedef ::HAL::AnalysisTreeReader::BranchManager current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::AnalysisTreeReader::BranchManager

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLinternalcLcLImportTLVAlgo_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::internal::ImportTLVAlgo.
      typedef ::ROOT::Shadow::HAL::internal::ImportTLVAlgo ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::internal::ImportTLVAlgo*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      sobj->HAL::Algorithm::ShowMembers(R__insp);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLinternalcLcLImportTLVAlgo(void *p) {
      delete ((::HAL::internal::ImportTLVAlgo*)p);
   }
   static void deleteArray_HALcLcLinternalcLcLImportTLVAlgo(void *p) {
      delete [] ((::HAL::internal::ImportTLVAlgo*)p);
   }
   static void destruct_HALcLcLinternalcLcLImportTLVAlgo(void *p) {
      typedef ::HAL::internal::ImportTLVAlgo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::internal::ImportTLVAlgo

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLinternalcLcLNthElementAlgo_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::internal::NthElementAlgo.
      typedef ::ROOT::Shadow::HAL::internal::NthElementAlgo ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::internal::NthElementAlgo*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fN", &sobj->fN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInput", &sobj->fInput);
      R__insp.InspectMember(sobj->fInput, "fInput.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fElementName", &sobj->fElementName);
      R__insp.InspectMember(sobj->fElementName, "fElementName.");
      sobj->HAL::Algorithm::ShowMembers(R__insp);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLinternalcLcLNthElementAlgo(void *p) {
      delete ((::HAL::internal::NthElementAlgo*)p);
   }
   static void deleteArray_HALcLcLinternalcLcLNthElementAlgo(void *p) {
      delete [] ((::HAL::internal::NthElementAlgo*)p);
   }
   static void destruct_HALcLcLinternalcLcLNthElementAlgo(void *p) {
      typedef ::HAL::internal::NthElementAlgo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::internal::NthElementAlgo

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLinternalcLcLFilterTLVAlgo_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::internal::FilterTLVAlgo.
      typedef ::ROOT::Shadow::HAL::internal::FilterTLVAlgo ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::internal::FilterTLVAlgo*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInput", &sobj->fInput);
      R__insp.InspectMember(sobj->fInput, "fInput.");
      sobj->HAL::Algorithm::ShowMembers(R__insp);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLinternalcLcLFilterTLVAlgo(void *p) {
      delete ((::HAL::internal::FilterTLVAlgo*)p);
   }
   static void deleteArray_HALcLcLinternalcLcLFilterTLVAlgo(void *p) {
      delete [] ((::HAL::internal::FilterTLVAlgo*)p);
   }
   static void destruct_HALcLcLinternalcLcLFilterTLVAlgo(void *p) {
      typedef ::HAL::internal::FilterTLVAlgo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::internal::FilterTLVAlgo

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLinternalcLcLParticlesTLVCut_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::internal::ParticlesTLVCut.
      typedef ::ROOT::Shadow::HAL::internal::ParticlesTLVCut ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::internal::ParticlesTLVCut*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInput", &sobj->fInput);
      R__insp.InspectMember(sobj->fInput, "fInput.");
      R__insp.GenericShowMembers("HAL::CutAlgorithm", ( ::HAL::CutAlgorithm * )( (::HAL::internal::ParticlesTLVCut*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLinternalcLcLParticlesTLVCut(void *p) {
      delete ((::HAL::internal::ParticlesTLVCut*)p);
   }
   static void deleteArray_HALcLcLinternalcLcLParticlesTLVCut(void *p) {
      delete [] ((::HAL::internal::ParticlesTLVCut*)p);
   }
   static void destruct_HALcLcLinternalcLcLParticlesTLVCut(void *p) {
      typedef ::HAL::internal::ParticlesTLVCut current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::internal::ParticlesTLVCut

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLinternalcLcLSingleParticleTLVStore_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::internal::SingleParticleTLVStore.
      typedef ::ROOT::Shadow::HAL::internal::SingleParticleTLVStore ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::internal::SingleParticleTLVStore*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBranchName", &sobj->fBranchName);
      R__insp.InspectMember(sobj->fBranchName, "fBranchName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInput", &sobj->fInput);
      R__insp.InspectMember(sobj->fInput, "fInput.");
      sobj->HAL::Algorithm::ShowMembers(R__insp);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLinternalcLcLSingleParticleTLVStore(void *p) {
      delete ((::HAL::internal::SingleParticleTLVStore*)p);
   }
   static void deleteArray_HALcLcLinternalcLcLSingleParticleTLVStore(void *p) {
      delete [] ((::HAL::internal::SingleParticleTLVStore*)p);
   }
   static void destruct_HALcLcLinternalcLcLSingleParticleTLVStore(void *p) {
      typedef ::HAL::internal::SingleParticleTLVStore current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::internal::SingleParticleTLVStore

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLinternalcLcLParticlesTLVStore_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::internal::ParticlesTLVStore.
      typedef ::ROOT::Shadow::HAL::internal::ParticlesTLVStore ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::internal::ParticlesTLVStore*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBranchName", &sobj->fBranchName);
      R__insp.InspectMember(sobj->fBranchName, "fBranchName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInput", &sobj->fInput);
      R__insp.InspectMember(sobj->fInput, "fInput.");
      sobj->HAL::Algorithm::ShowMembers(R__insp);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLinternalcLcLParticlesTLVStore(void *p) {
      delete ((::HAL::internal::ParticlesTLVStore*)p);
   }
   static void deleteArray_HALcLcLinternalcLcLParticlesTLVStore(void *p) {
      delete [] ((::HAL::internal::ParticlesTLVStore*)p);
   }
   static void destruct_HALcLcLinternalcLcLParticlesTLVStore(void *p) {
      typedef ::HAL::internal::ParticlesTLVStore current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::internal::ParticlesTLVStore

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLIA0000_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::IA0000.
      typedef ::ROOT::Shadow::HAL::IA0000 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::IA0000*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("HAL::internal::ImportTLVAlgo", ( ::HAL::internal::ImportTLVAlgo * )( (::HAL::IA0000*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLIA0000(void *p) {
      delete ((::HAL::IA0000*)p);
   }
   static void deleteArray_HALcLcLIA0000(void *p) {
      delete [] ((::HAL::IA0000*)p);
   }
   static void destruct_HALcLcLIA0000(void *p) {
      typedef ::HAL::IA0000 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::IA0000

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLIA0001_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::IA0001.
      typedef ::ROOT::Shadow::HAL::IA0001 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::IA0001*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("HAL::internal::ImportTLVAlgo", ( ::HAL::internal::ImportTLVAlgo * )( (::HAL::IA0001*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLIA0001(void *p) {
      delete ((::HAL::IA0001*)p);
   }
   static void deleteArray_HALcLcLIA0001(void *p) {
      delete [] ((::HAL::IA0001*)p);
   }
   static void destruct_HALcLcLIA0001(void *p) {
      typedef ::HAL::IA0001 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::IA0001

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLIA0002_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::IA0002.
      typedef ::ROOT::Shadow::HAL::IA0002 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::IA0002*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNEntries", &sobj->fNEntries);
      R__insp.GenericShowMembers("HAL::internal::ImportTLVAlgo", ( ::HAL::internal::ImportTLVAlgo * )( (::HAL::IA0002*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLIA0002(void *p) {
      delete ((::HAL::IA0002*)p);
   }
   static void deleteArray_HALcLcLIA0002(void *p) {
      delete [] ((::HAL::IA0002*)p);
   }
   static void destruct_HALcLcLIA0002(void *p) {
      typedef ::HAL::IA0002 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::IA0002

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLIA0010_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::IA0010.
      typedef ::ROOT::Shadow::HAL::IA0010 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::IA0010*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("HAL::internal::ImportTLVAlgo", ( ::HAL::internal::ImportTLVAlgo * )( (::HAL::IA0010*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLIA0010(void *p) {
      delete ((::HAL::IA0010*)p);
   }
   static void deleteArray_HALcLcLIA0010(void *p) {
      delete [] ((::HAL::IA0010*)p);
   }
   static void destruct_HALcLcLIA0010(void *p) {
      typedef ::HAL::IA0010 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::IA0010

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLIA0011_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::IA0011.
      typedef ::ROOT::Shadow::HAL::IA0011 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::IA0011*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("HAL::internal::ImportTLVAlgo", ( ::HAL::internal::ImportTLVAlgo * )( (::HAL::IA0011*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLIA0011(void *p) {
      delete ((::HAL::IA0011*)p);
   }
   static void deleteArray_HALcLcLIA0011(void *p) {
      delete [] ((::HAL::IA0011*)p);
   }
   static void destruct_HALcLcLIA0011(void *p) {
      typedef ::HAL::IA0011 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::IA0011

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLIA0012_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::IA0012.
      typedef ::ROOT::Shadow::HAL::IA0012 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::IA0012*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNEntries", &sobj->fNEntries);
      R__insp.GenericShowMembers("HAL::internal::ImportTLVAlgo", ( ::HAL::internal::ImportTLVAlgo * )( (::HAL::IA0012*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLIA0012(void *p) {
      delete ((::HAL::IA0012*)p);
   }
   static void deleteArray_HALcLcLIA0012(void *p) {
      delete [] ((::HAL::IA0012*)p);
   }
   static void destruct_HALcLcLIA0012(void *p) {
      typedef ::HAL::IA0012 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::IA0012

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLIA0020_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::IA0020.
      typedef ::ROOT::Shadow::HAL::IA0020 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::IA0020*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("HAL::internal::ImportTLVAlgo", ( ::HAL::internal::ImportTLVAlgo * )( (::HAL::IA0020*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLIA0020(void *p) {
      delete ((::HAL::IA0020*)p);
   }
   static void deleteArray_HALcLcLIA0020(void *p) {
      delete [] ((::HAL::IA0020*)p);
   }
   static void destruct_HALcLcLIA0020(void *p) {
      typedef ::HAL::IA0020 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::IA0020

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLIA0021_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::IA0021.
      typedef ::ROOT::Shadow::HAL::IA0021 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::IA0021*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("HAL::internal::ImportTLVAlgo", ( ::HAL::internal::ImportTLVAlgo * )( (::HAL::IA0021*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLIA0021(void *p) {
      delete ((::HAL::IA0021*)p);
   }
   static void deleteArray_HALcLcLIA0021(void *p) {
      delete [] ((::HAL::IA0021*)p);
   }
   static void destruct_HALcLcLIA0021(void *p) {
      typedef ::HAL::IA0021 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::IA0021

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLIA0022_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::IA0022.
      typedef ::ROOT::Shadow::HAL::IA0022 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::IA0022*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNEntries", &sobj->fNEntries);
      R__insp.GenericShowMembers("HAL::internal::ImportTLVAlgo", ( ::HAL::internal::ImportTLVAlgo * )( (::HAL::IA0022*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLIA0022(void *p) {
      delete ((::HAL::IA0022*)p);
   }
   static void deleteArray_HALcLcLIA0022(void *p) {
      delete [] ((::HAL::IA0022*)p);
   }
   static void destruct_HALcLcLIA0022(void *p) {
      typedef ::HAL::IA0022 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::IA0022

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLRA0000_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::RA0000.
      typedef ::ROOT::Shadow::HAL::RA0000 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::RA0000*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParentNames", &sobj->fParentNames);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLength", &sobj->fLength);
      sobj->HAL::Algorithm::ShowMembers(R__insp);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLRA0000(void *p) {
      delete ((::HAL::RA0000*)p);
   }
   static void deleteArray_HALcLcLRA0000(void *p) {
      delete [] ((::HAL::RA0000*)p);
   }
   static void destruct_HALcLcLRA0000(void *p) {
      typedef ::HAL::RA0000 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::RA0000

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLFA0000_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::FA0000.
      typedef ::ROOT::Shadow::HAL::FA0000 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::FA0000*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("HAL::internal::NthElementAlgo", ( ::HAL::internal::NthElementAlgo * )( (::HAL::FA0000*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLFA0000(void *p) {
      delete ((::HAL::FA0000*)p);
   }
   static void deleteArray_HALcLcLFA0000(void *p) {
      delete [] ((::HAL::FA0000*)p);
   }
   static void destruct_HALcLcLFA0000(void *p) {
      typedef ::HAL::FA0000 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::FA0000

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLFA0100_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::FA0100.
      typedef ::ROOT::Shadow::HAL::FA0100 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::FA0100*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fValue", &sobj->fValue);
      R__insp.GenericShowMembers("HAL::internal::FilterTLVAlgo", ( ::HAL::internal::FilterTLVAlgo * )( (::HAL::FA0100*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLFA0100(void *p) {
      delete ((::HAL::FA0100*)p);
   }
   static void deleteArray_HALcLcLFA0100(void *p) {
      delete [] ((::HAL::FA0100*)p);
   }
   static void destruct_HALcLcLFA0100(void *p) {
      typedef ::HAL::FA0100 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::FA0100

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLFA0101_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::FA0101.
      typedef ::ROOT::Shadow::HAL::FA0101 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::FA0101*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fValue", &sobj->fValue);
      R__insp.GenericShowMembers("HAL::internal::FilterTLVAlgo", ( ::HAL::internal::FilterTLVAlgo * )( (::HAL::FA0101*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLFA0101(void *p) {
      delete ((::HAL::FA0101*)p);
   }
   static void deleteArray_HALcLcLFA0101(void *p) {
      delete [] ((::HAL::FA0101*)p);
   }
   static void destruct_HALcLcLFA0101(void *p) {
      typedef ::HAL::FA0101 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::FA0101

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLFA0102_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::FA0102.
      typedef ::ROOT::Shadow::HAL::FA0102 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::FA0102*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fValue", &sobj->fValue);
      R__insp.GenericShowMembers("HAL::internal::FilterTLVAlgo", ( ::HAL::internal::FilterTLVAlgo * )( (::HAL::FA0102*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLFA0102(void *p) {
      delete ((::HAL::FA0102*)p);
   }
   static void deleteArray_HALcLcLFA0102(void *p) {
      delete [] ((::HAL::FA0102*)p);
   }
   static void destruct_HALcLcLFA0102(void *p) {
      typedef ::HAL::FA0102 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::FA0102

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLFA0103_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::FA0103.
      typedef ::ROOT::Shadow::HAL::FA0103 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::FA0103*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fValue", &sobj->fValue);
      R__insp.GenericShowMembers("HAL::internal::FilterTLVAlgo", ( ::HAL::internal::FilterTLVAlgo * )( (::HAL::FA0103*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLFA0103(void *p) {
      delete ((::HAL::FA0103*)p);
   }
   static void deleteArray_HALcLcLFA0103(void *p) {
      delete [] ((::HAL::FA0103*)p);
   }
   static void destruct_HALcLcLFA0103(void *p) {
      typedef ::HAL::FA0103 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::FA0103

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLFA0104_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::FA0104.
      typedef ::ROOT::Shadow::HAL::FA0104 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::FA0104*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fValue", &sobj->fValue);
      R__insp.GenericShowMembers("HAL::internal::FilterTLVAlgo", ( ::HAL::internal::FilterTLVAlgo * )( (::HAL::FA0104*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLFA0104(void *p) {
      delete ((::HAL::FA0104*)p);
   }
   static void deleteArray_HALcLcLFA0104(void *p) {
      delete [] ((::HAL::FA0104*)p);
   }
   static void destruct_HALcLcLFA0104(void *p) {
      typedef ::HAL::FA0104 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::FA0104

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLFA0110_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::FA0110.
      typedef ::ROOT::Shadow::HAL::FA0110 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::FA0110*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fValue", &sobj->fValue);
      R__insp.GenericShowMembers("HAL::internal::FilterTLVAlgo", ( ::HAL::internal::FilterTLVAlgo * )( (::HAL::FA0110*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLFA0110(void *p) {
      delete ((::HAL::FA0110*)p);
   }
   static void deleteArray_HALcLcLFA0110(void *p) {
      delete [] ((::HAL::FA0110*)p);
   }
   static void destruct_HALcLcLFA0110(void *p) {
      typedef ::HAL::FA0110 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::FA0110

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLFA0111_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::FA0111.
      typedef ::ROOT::Shadow::HAL::FA0111 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::FA0111*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fValue", &sobj->fValue);
      R__insp.GenericShowMembers("HAL::internal::FilterTLVAlgo", ( ::HAL::internal::FilterTLVAlgo * )( (::HAL::FA0111*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLFA0111(void *p) {
      delete ((::HAL::FA0111*)p);
   }
   static void deleteArray_HALcLcLFA0111(void *p) {
      delete [] ((::HAL::FA0111*)p);
   }
   static void destruct_HALcLcLFA0111(void *p) {
      typedef ::HAL::FA0111 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::FA0111

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLFA0112_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::FA0112.
      typedef ::ROOT::Shadow::HAL::FA0112 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::FA0112*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fValue", &sobj->fValue);
      R__insp.GenericShowMembers("HAL::internal::FilterTLVAlgo", ( ::HAL::internal::FilterTLVAlgo * )( (::HAL::FA0112*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLFA0112(void *p) {
      delete ((::HAL::FA0112*)p);
   }
   static void deleteArray_HALcLcLFA0112(void *p) {
      delete [] ((::HAL::FA0112*)p);
   }
   static void destruct_HALcLcLFA0112(void *p) {
      typedef ::HAL::FA0112 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::FA0112

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLFA0113_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::FA0113.
      typedef ::ROOT::Shadow::HAL::FA0113 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::FA0113*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fValue", &sobj->fValue);
      R__insp.GenericShowMembers("HAL::internal::FilterTLVAlgo", ( ::HAL::internal::FilterTLVAlgo * )( (::HAL::FA0113*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLFA0113(void *p) {
      delete ((::HAL::FA0113*)p);
   }
   static void deleteArray_HALcLcLFA0113(void *p) {
      delete [] ((::HAL::FA0113*)p);
   }
   static void destruct_HALcLcLFA0113(void *p) {
      typedef ::HAL::FA0113 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::FA0113

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLFA0114_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::FA0114.
      typedef ::ROOT::Shadow::HAL::FA0114 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::FA0114*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fValue", &sobj->fValue);
      R__insp.GenericShowMembers("HAL::internal::FilterTLVAlgo", ( ::HAL::internal::FilterTLVAlgo * )( (::HAL::FA0114*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLFA0114(void *p) {
      delete ((::HAL::FA0114*)p);
   }
   static void deleteArray_HALcLcLFA0114(void *p) {
      delete [] ((::HAL::FA0114*)p);
   }
   static void destruct_HALcLcLFA0114(void *p) {
      typedef ::HAL::FA0114 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::FA0114

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLFA0120_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::FA0120.
      typedef ::ROOT::Shadow::HAL::FA0120 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::FA0120*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLow", &sobj->fLow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHigh", &sobj->fHigh);
      R__insp.GenericShowMembers("HAL::internal::FilterTLVAlgo", ( ::HAL::internal::FilterTLVAlgo * )( (::HAL::FA0120*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLFA0120(void *p) {
      delete ((::HAL::FA0120*)p);
   }
   static void deleteArray_HALcLcLFA0120(void *p) {
      delete [] ((::HAL::FA0120*)p);
   }
   static void destruct_HALcLcLFA0120(void *p) {
      typedef ::HAL::FA0120 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::FA0120

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLFA0121_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::FA0121.
      typedef ::ROOT::Shadow::HAL::FA0121 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::FA0121*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLow", &sobj->fLow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHigh", &sobj->fHigh);
      R__insp.GenericShowMembers("HAL::internal::FilterTLVAlgo", ( ::HAL::internal::FilterTLVAlgo * )( (::HAL::FA0121*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLFA0121(void *p) {
      delete ((::HAL::FA0121*)p);
   }
   static void deleteArray_HALcLcLFA0121(void *p) {
      delete [] ((::HAL::FA0121*)p);
   }
   static void destruct_HALcLcLFA0121(void *p) {
      typedef ::HAL::FA0121 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::FA0121

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLFA0122_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::FA0122.
      typedef ::ROOT::Shadow::HAL::FA0122 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::FA0122*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLow", &sobj->fLow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHigh", &sobj->fHigh);
      R__insp.GenericShowMembers("HAL::internal::FilterTLVAlgo", ( ::HAL::internal::FilterTLVAlgo * )( (::HAL::FA0122*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLFA0122(void *p) {
      delete ((::HAL::FA0122*)p);
   }
   static void deleteArray_HALcLcLFA0122(void *p) {
      delete [] ((::HAL::FA0122*)p);
   }
   static void destruct_HALcLcLFA0122(void *p) {
      typedef ::HAL::FA0122 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::FA0122

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLFA0123_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::FA0123.
      typedef ::ROOT::Shadow::HAL::FA0123 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::FA0123*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLow", &sobj->fLow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHigh", &sobj->fHigh);
      R__insp.GenericShowMembers("HAL::internal::FilterTLVAlgo", ( ::HAL::internal::FilterTLVAlgo * )( (::HAL::FA0123*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLFA0123(void *p) {
      delete ((::HAL::FA0123*)p);
   }
   static void deleteArray_HALcLcLFA0123(void *p) {
      delete [] ((::HAL::FA0123*)p);
   }
   static void destruct_HALcLcLFA0123(void *p) {
      typedef ::HAL::FA0123 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::FA0123

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLFA0124_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::FA0124.
      typedef ::ROOT::Shadow::HAL::FA0124 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::FA0124*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLow", &sobj->fLow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHigh", &sobj->fHigh);
      R__insp.GenericShowMembers("HAL::internal::FilterTLVAlgo", ( ::HAL::internal::FilterTLVAlgo * )( (::HAL::FA0124*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLFA0124(void *p) {
      delete ((::HAL::FA0124*)p);
   }
   static void deleteArray_HALcLcLFA0124(void *p) {
      delete [] ((::HAL::FA0124*)p);
   }
   static void destruct_HALcLcLFA0124(void *p) {
      typedef ::HAL::FA0124 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::FA0124

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLCA0000_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::CA0000.
      typedef ::ROOT::Shadow::HAL::CA0000 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::CA0000*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCutValue", &sobj->fCutValue);
      R__insp.GenericShowMembers("HAL::internal::ParticlesTLVCut", ( ::HAL::internal::ParticlesTLVCut * )( (::HAL::CA0000*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLCA0000(void *p) {
      delete ((::HAL::CA0000*)p);
   }
   static void deleteArray_HALcLcLCA0000(void *p) {
      delete [] ((::HAL::CA0000*)p);
   }
   static void destruct_HALcLcLCA0000(void *p) {
      typedef ::HAL::CA0000 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::CA0000

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLCA0003_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::CA0003.
      typedef ::ROOT::Shadow::HAL::CA0003 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::CA0003*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCutValue", &sobj->fCutValue);
      R__insp.GenericShowMembers("HAL::internal::ParticlesTLVCut", ( ::HAL::internal::ParticlesTLVCut * )( (::HAL::CA0003*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLCA0003(void *p) {
      delete ((::HAL::CA0003*)p);
   }
   static void deleteArray_HALcLcLCA0003(void *p) {
      delete [] ((::HAL::CA0003*)p);
   }
   static void destruct_HALcLcLCA0003(void *p) {
      typedef ::HAL::CA0003 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::CA0003

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLCA0100_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::CA0100.
      typedef ::ROOT::Shadow::HAL::CA0100 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::CA0100*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLength", &sobj->fLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParticleNames", &sobj->fParticleNames);
      R__insp.GenericShowMembers("HAL::CutAlgorithm", ( ::HAL::CutAlgorithm * )( (::HAL::CA0100*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLCA0100(void *p) {
      delete ((::HAL::CA0100*)p);
   }
   static void deleteArray_HALcLcLCA0100(void *p) {
      delete [] ((::HAL::CA0100*)p);
   }
   static void destruct_HALcLcLCA0100(void *p) {
      typedef ::HAL::CA0100 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::CA0100

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLCA0101_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::CA0101.
      typedef ::ROOT::Shadow::HAL::CA0101 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::CA0101*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLength", &sobj->fLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParticleNames", &sobj->fParticleNames);
      R__insp.GenericShowMembers("HAL::CutAlgorithm", ( ::HAL::CutAlgorithm * )( (::HAL::CA0101*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLCA0101(void *p) {
      delete ((::HAL::CA0101*)p);
   }
   static void deleteArray_HALcLcLCA0101(void *p) {
      delete [] ((::HAL::CA0101*)p);
   }
   static void destruct_HALcLcLCA0101(void *p) {
      typedef ::HAL::CA0101 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::CA0101

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLEA0000_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::EA0000.
      typedef ::ROOT::Shadow::HAL::EA0000 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::EA0000*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("HAL::internal::SingleParticleTLVStore", ( ::HAL::internal::SingleParticleTLVStore * )( (::HAL::EA0000*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLEA0000(void *p) {
      delete ((::HAL::EA0000*)p);
   }
   static void deleteArray_HALcLcLEA0000(void *p) {
      delete [] ((::HAL::EA0000*)p);
   }
   static void destruct_HALcLcLEA0000(void *p) {
      typedef ::HAL::EA0000 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::EA0000

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLEA0001_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::EA0001.
      typedef ::ROOT::Shadow::HAL::EA0001 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::EA0001*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("HAL::internal::SingleParticleTLVStore", ( ::HAL::internal::SingleParticleTLVStore * )( (::HAL::EA0001*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLEA0001(void *p) {
      delete ((::HAL::EA0001*)p);
   }
   static void deleteArray_HALcLcLEA0001(void *p) {
      delete [] ((::HAL::EA0001*)p);
   }
   static void destruct_HALcLcLEA0001(void *p) {
      typedef ::HAL::EA0001 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::EA0001

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLEA0002_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::EA0002.
      typedef ::ROOT::Shadow::HAL::EA0002 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::EA0002*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("HAL::internal::SingleParticleTLVStore", ( ::HAL::internal::SingleParticleTLVStore * )( (::HAL::EA0002*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLEA0002(void *p) {
      delete ((::HAL::EA0002*)p);
   }
   static void deleteArray_HALcLcLEA0002(void *p) {
      delete [] ((::HAL::EA0002*)p);
   }
   static void destruct_HALcLcLEA0002(void *p) {
      typedef ::HAL::EA0002 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::EA0002

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLEA0003_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::EA0003.
      typedef ::ROOT::Shadow::HAL::EA0003 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::EA0003*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("HAL::internal::SingleParticleTLVStore", ( ::HAL::internal::SingleParticleTLVStore * )( (::HAL::EA0003*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLEA0003(void *p) {
      delete ((::HAL::EA0003*)p);
   }
   static void deleteArray_HALcLcLEA0003(void *p) {
      delete [] ((::HAL::EA0003*)p);
   }
   static void destruct_HALcLcLEA0003(void *p) {
      typedef ::HAL::EA0003 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::EA0003

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLEA0004_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::EA0004.
      typedef ::ROOT::Shadow::HAL::EA0004 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::EA0004*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("HAL::internal::SingleParticleTLVStore", ( ::HAL::internal::SingleParticleTLVStore * )( (::HAL::EA0004*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLEA0004(void *p) {
      delete ((::HAL::EA0004*)p);
   }
   static void deleteArray_HALcLcLEA0004(void *p) {
      delete [] ((::HAL::EA0004*)p);
   }
   static void destruct_HALcLcLEA0004(void *p) {
      typedef ::HAL::EA0004 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::EA0004

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLEA0010_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::EA0010.
      typedef ::ROOT::Shadow::HAL::EA0010 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::EA0010*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("HAL::internal::ParticlesTLVStore", ( ::HAL::internal::ParticlesTLVStore * )( (::HAL::EA0010*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLEA0010(void *p) {
      delete ((::HAL::EA0010*)p);
   }
   static void deleteArray_HALcLcLEA0010(void *p) {
      delete [] ((::HAL::EA0010*)p);
   }
   static void destruct_HALcLcLEA0010(void *p) {
      typedef ::HAL::EA0010 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::EA0010

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLEA0011_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::EA0011.
      typedef ::ROOT::Shadow::HAL::EA0011 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::EA0011*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("HAL::internal::ParticlesTLVStore", ( ::HAL::internal::ParticlesTLVStore * )( (::HAL::EA0011*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLEA0011(void *p) {
      delete ((::HAL::EA0011*)p);
   }
   static void deleteArray_HALcLcLEA0011(void *p) {
      delete [] ((::HAL::EA0011*)p);
   }
   static void destruct_HALcLcLEA0011(void *p) {
      typedef ::HAL::EA0011 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::EA0011

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLEA0012_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::EA0012.
      typedef ::ROOT::Shadow::HAL::EA0012 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::EA0012*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("HAL::internal::ParticlesTLVStore", ( ::HAL::internal::ParticlesTLVStore * )( (::HAL::EA0012*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLEA0012(void *p) {
      delete ((::HAL::EA0012*)p);
   }
   static void deleteArray_HALcLcLEA0012(void *p) {
      delete [] ((::HAL::EA0012*)p);
   }
   static void destruct_HALcLcLEA0012(void *p) {
      typedef ::HAL::EA0012 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::EA0012

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLEA0013_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::EA0013.
      typedef ::ROOT::Shadow::HAL::EA0013 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::EA0013*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("HAL::internal::ParticlesTLVStore", ( ::HAL::internal::ParticlesTLVStore * )( (::HAL::EA0013*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLEA0013(void *p) {
      delete ((::HAL::EA0013*)p);
   }
   static void deleteArray_HALcLcLEA0013(void *p) {
      delete [] ((::HAL::EA0013*)p);
   }
   static void destruct_HALcLcLEA0013(void *p) {
      typedef ::HAL::EA0013 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::EA0013

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLEA0014_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::EA0014.
      typedef ::ROOT::Shadow::HAL::EA0014 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::EA0014*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("HAL::internal::ParticlesTLVStore", ( ::HAL::internal::ParticlesTLVStore * )( (::HAL::EA0014*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLEA0014(void *p) {
      delete ((::HAL::EA0014*)p);
   }
   static void deleteArray_HALcLcLEA0014(void *p) {
      delete [] ((::HAL::EA0014*)p);
   }
   static void destruct_HALcLcLEA0014(void *p) {
      typedef ::HAL::EA0014 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::EA0014

      namespace HAL {
//______________________________________________________________________________
void AnalysisSelector::Streamer(TBuffer &R__b)
{
   // Stream an object of class HAL::AnalysisSelector.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(HAL::AnalysisSelector::Class(),this);
   } else {
      R__b.WriteClassBuffer(HAL::AnalysisSelector::Class(),this);
   }
}

} // namespace HAL
//______________________________________________________________________________
      namespace HAL {
void AnalysisSelector::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HAL::AnalysisSelector.
      TClass *R__cl = ::HAL::AnalysisSelector::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAnalysisFlow", &fAnalysisFlow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBranchMap", &fBranchMap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOutputFileName", &fOutputFileName);
      R__insp.InspectMember(fOutputFileName, "fOutputFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOutputTreeName", &fOutputTreeName);
      R__insp.InspectMember(fOutputTreeName, "fOutputTreeName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOutputTreeDescription", &fOutputTreeDescription);
      R__insp.InspectMember(fOutputTreeDescription, "fOutputTreeDescription.");
      TSelector::ShowMembers(R__insp);
}

} // namespace HAL
namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLAnalysisSelector(void *p) {
      delete ((::HAL::AnalysisSelector*)p);
   }
   static void deleteArray_HALcLcLAnalysisSelector(void *p) {
      delete [] ((::HAL::AnalysisSelector*)p);
   }
   static void destruct_HALcLcLAnalysisSelector(void *p) {
      typedef ::HAL::AnalysisSelector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::AnalysisSelector

      namespace HAL {
//______________________________________________________________________________
void Analysis::Streamer(TBuffer &R__b)
{
   // Stream an object of class HAL::Analysis.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(HAL::Analysis::Class(),this);
   } else {
      R__b.WriteClassBuffer(HAL::Analysis::Class(),this);
   }
}

} // namespace HAL
//______________________________________________________________________________
      namespace HAL {
void Analysis::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HAL::Analysis.
      TClass *R__cl = ::HAL::Analysis::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAnalysisFlow", &fAnalysisFlow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAnalizer", &fAnalizer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBranchMap", &fBranchMap);
}

} // namespace HAL
namespace ROOT {
   // Wrappers around operator new
   static void *new_HALcLcLAnalysis(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HAL::Analysis : new ::HAL::Analysis;
   }
   static void *newArray_HALcLcLAnalysis(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HAL::Analysis[nElements] : new ::HAL::Analysis[nElements];
   }
   // Wrapper around operator delete
   static void delete_HALcLcLAnalysis(void *p) {
      delete ((::HAL::Analysis*)p);
   }
   static void deleteArray_HALcLcLAnalysis(void *p) {
      delete [] ((::HAL::Analysis*)p);
   }
   static void destruct_HALcLcLAnalysis(void *p) {
      typedef ::HAL::Analysis current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::Analysis

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLCutOptimizer_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::CutOptimizer.
      typedef ::ROOT::Shadow::HAL::CutOptimizer ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::CutOptimizer*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*f", &sobj->f);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_HALcLcLCutOptimizer(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HAL::CutOptimizer : new ::HAL::CutOptimizer;
   }
   static void *newArray_HALcLcLCutOptimizer(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HAL::CutOptimizer[nElements] : new ::HAL::CutOptimizer[nElements];
   }
   // Wrapper around operator delete
   static void delete_HALcLcLCutOptimizer(void *p) {
      delete ((::HAL::CutOptimizer*)p);
   }
   static void deleteArray_HALcLcLCutOptimizer(void *p) {
      delete [] ((::HAL::CutOptimizer*)p);
   }
   static void destruct_HALcLcLCutOptimizer(void *p) {
      typedef ::HAL::CutOptimizer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::CutOptimizer

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLIntegrator_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::Integrator.
      typedef ::ROOT::Shadow::HAL::Integrator ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::Integrator*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TOL", &sobj->TOL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "toler", &sobj->toler);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "terminate", &sobj->terminate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "out_of_tolerance", &sobj->out_of_tolerance);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_HALcLcLIntegrator(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HAL::Integrator : new ::HAL::Integrator;
   }
   static void *newArray_HALcLcLIntegrator(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HAL::Integrator[nElements] : new ::HAL::Integrator[nElements];
   }
   // Wrapper around operator delete
   static void delete_HALcLcLIntegrator(void *p) {
      delete ((::HAL::Integrator*)p);
   }
   static void deleteArray_HALcLcLIntegrator(void *p) {
      delete [] ((::HAL::Integrator*)p);
   }
   static void destruct_HALcLcLIntegrator(void *p) {
      typedef ::HAL::Integrator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::Integrator

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLInterpBase_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::InterpBase.
      typedef ::ROOT::Shadow::HAL::InterpBase ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::InterpBase*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "n", &sobj->n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mm", &sobj->mm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cor", &sobj->cor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jsav", &sobj->jsav);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dj", &sobj->dj);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*xx", &sobj->xx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*yy", &sobj->yy);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLInterpBase(void *p) {
      delete ((::HAL::InterpBase*)p);
   }
   static void deleteArray_HALcLcLInterpBase(void *p) {
      delete [] ((::HAL::InterpBase*)p);
   }
   static void destruct_HALcLcLInterpBase(void *p) {
      typedef ::HAL::InterpBase current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::InterpBase

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLPolyInterp_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::PolyInterp.
      typedef ::ROOT::Shadow::HAL::PolyInterp ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::PolyInterp*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dy", &sobj->dy);
      R__insp.GenericShowMembers("HAL::InterpBase", ( ::HAL::InterpBase * )( (::HAL::PolyInterp*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLPolyInterp(void *p) {
      delete ((::HAL::PolyInterp*)p);
   }
   static void deleteArray_HALcLcLPolyInterp(void *p) {
      delete [] ((::HAL::PolyInterp*)p);
   }
   static void destruct_HALcLcLPolyInterp(void *p) {
      typedef ::HAL::PolyInterp current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::PolyInterp

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLPoly2DInterp_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::Poly2DInterp.
      typedef ::ROOT::Shadow::HAL::Poly2DInterp ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::Poly2DInterp*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*y", &sobj->y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mm", &sobj->mm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nn", &sobj->nn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x1terp", (void*)&sobj->x1terp);
      R__insp.InspectMember("HAL::PolyInterp", (void*)&sobj->x1terp, "x1terp.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x2terp", (void*)&sobj->x2terp);
      R__insp.InspectMember("HAL::PolyInterp", (void*)&sobj->x2terp, "x2terp.", false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HALcLcLPoly2DInterp(void *p) {
      delete ((::HAL::Poly2DInterp*)p);
   }
   static void deleteArray_HALcLcLPoly2DInterp(void *p) {
      delete [] ((::HAL::Poly2DInterp*)p);
   }
   static void destruct_HALcLcLPoly2DInterp(void *p) {
      typedef ::HAL::Poly2DInterp current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::Poly2DInterp

//______________________________________________________________________________
namespace ROOT {
   void HALcLcLPythonAlgorithm_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class HAL::PythonAlgorithm.
      typedef ::ROOT::Shadow::HAL::PythonAlgorithm ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::HAL::PythonAlgorithm*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPyPath", &sobj->fPyPath);
      R__insp.InspectMember(sobj->fPyPath, "fPyPath.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPyFile", &sobj->fPyFile);
      R__insp.InspectMember(sobj->fPyFile, "fPyFile.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPyClass", &sobj->fPyClass);
      R__insp.InspectMember(sobj->fPyClass, "fPyClass.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPySelf", &sobj->fPySelf);
      sobj->HAL::Algorithm::ShowMembers(R__insp);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_HALcLcLPythonAlgorithm(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HAL::PythonAlgorithm : new ::HAL::PythonAlgorithm;
   }
   static void *newArray_HALcLcLPythonAlgorithm(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HAL::PythonAlgorithm[nElements] : new ::HAL::PythonAlgorithm[nElements];
   }
   // Wrapper around operator delete
   static void delete_HALcLcLPythonAlgorithm(void *p) {
      delete ((::HAL::PythonAlgorithm*)p);
   }
   static void deleteArray_HALcLcLPythonAlgorithm(void *p) {
      delete [] ((::HAL::PythonAlgorithm*)p);
   }
   static void destruct_HALcLcLPythonAlgorithm(void *p) {
      typedef ::HAL::PythonAlgorithm current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HAL::PythonAlgorithm

namespace ROOT {
   void vectorlEboolgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEboolgR_Dictionary();
   static void *new_vectorlEboolgR(void *p = 0);
   static void *newArray_vectorlEboolgR(Long_t size, void *p);
   static void delete_vectorlEboolgR(void *p);
   static void deleteArray_vectorlEboolgR(void *p);
   static void destruct_vectorlEboolgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<bool>*)
   {
      vector<bool> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<bool>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<bool>", -2, "vectorbool.dll", 0,
                  typeid(vector<bool>), DefineBehavior(ptr, ptr),
                  0, &vectorlEboolgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<bool>) );
      instance.SetNew(&new_vectorlEboolgR);
      instance.SetNewArray(&newArray_vectorlEboolgR);
      instance.SetDelete(&delete_vectorlEboolgR);
      instance.SetDeleteArray(&deleteArray_vectorlEboolgR);
      instance.SetDestructor(&destruct_vectorlEboolgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<bool> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<bool>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEboolgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<bool>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEboolgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bool> : new vector<bool>;
   }
   static void *newArray_vectorlEboolgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bool>[nElements] : new vector<bool>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEboolgR(void *p) {
      delete ((vector<bool>*)p);
   }
   static void deleteArray_vectorlEboolgR(void *p) {
      delete [] ((vector<bool>*)p);
   }
   static void destruct_vectorlEboolgR(void *p) {
      typedef vector<bool> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<bool>

namespace ROOT {
   void vectorlElongsPdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlElongsPdoublegR_Dictionary();
   static void *new_vectorlElongsPdoublegR(void *p = 0);
   static void *newArray_vectorlElongsPdoublegR(Long_t size, void *p);
   static void delete_vectorlElongsPdoublegR(void *p);
   static void deleteArray_vectorlElongsPdoublegR(void *p);
   static void destruct_vectorlElongsPdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<long double>*)
   {
      vector<long double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<long double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<long double>", -2, "/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.18-x86_64-slc5-gcc4.3/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<long double>), DefineBehavior(ptr, ptr),
                  0, &vectorlElongsPdoublegR_Dictionary, isa_proxy, 4,
                  sizeof(vector<long double>) );
      instance.SetNew(&new_vectorlElongsPdoublegR);
      instance.SetNewArray(&newArray_vectorlElongsPdoublegR);
      instance.SetDelete(&delete_vectorlElongsPdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlElongsPdoublegR);
      instance.SetDestructor(&destruct_vectorlElongsPdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<long double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<long double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlElongsPdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<long double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlElongsPdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<long double> : new vector<long double>;
   }
   static void *newArray_vectorlElongsPdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<long double>[nElements] : new vector<long double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlElongsPdoublegR(void *p) {
      delete ((vector<long double>*)p);
   }
   static void deleteArray_vectorlElongsPdoublegR(void *p) {
      delete [] ((vector<long double>*)p);
   }
   static void destruct_vectorlElongsPdoublegR(void *p) {
      typedef vector<long double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<long double>

namespace ROOT {
   void vectorlELong64_tgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlELong64_tgR_Dictionary();
   static void *new_vectorlELong64_tgR(void *p = 0);
   static void *newArray_vectorlELong64_tgR(Long_t size, void *p);
   static void delete_vectorlELong64_tgR(void *p);
   static void deleteArray_vectorlELong64_tgR(void *p);
   static void destruct_vectorlELong64_tgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<Long64_t>*)
   {
      vector<Long64_t> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Long64_t>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Long64_t>", -2, "vector.dll", 0,
                  typeid(vector<Long64_t>), DefineBehavior(ptr, ptr),
                  0, &vectorlELong64_tgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<Long64_t>) );
      instance.SetNew(&new_vectorlELong64_tgR);
      instance.SetNewArray(&newArray_vectorlELong64_tgR);
      instance.SetDelete(&delete_vectorlELong64_tgR);
      instance.SetDeleteArray(&deleteArray_vectorlELong64_tgR);
      instance.SetDestructor(&destruct_vectorlELong64_tgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<Long64_t> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Long64_t>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlELong64_tgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<Long64_t>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlELong64_tgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Long64_t> : new vector<Long64_t>;
   }
   static void *newArray_vectorlELong64_tgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Long64_t>[nElements] : new vector<Long64_t>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlELong64_tgR(void *p) {
      delete ((vector<Long64_t>*)p);
   }
   static void deleteArray_vectorlELong64_tgR(void *p) {
      delete [] ((vector<Long64_t>*)p);
   }
   static void destruct_vectorlELong64_tgR(void *p) {
      typedef vector<Long64_t> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<Long64_t>

namespace ROOT {
   void vectorlEULong64_tgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEULong64_tgR_Dictionary();
   static void *new_vectorlEULong64_tgR(void *p = 0);
   static void *newArray_vectorlEULong64_tgR(Long_t size, void *p);
   static void delete_vectorlEULong64_tgR(void *p);
   static void deleteArray_vectorlEULong64_tgR(void *p);
   static void destruct_vectorlEULong64_tgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<ULong64_t>*)
   {
      vector<ULong64_t> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<ULong64_t>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<ULong64_t>", -2, "vector.dll", 0,
                  typeid(vector<ULong64_t>), DefineBehavior(ptr, ptr),
                  0, &vectorlEULong64_tgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<ULong64_t>) );
      instance.SetNew(&new_vectorlEULong64_tgR);
      instance.SetNewArray(&newArray_vectorlEULong64_tgR);
      instance.SetDelete(&delete_vectorlEULong64_tgR);
      instance.SetDeleteArray(&deleteArray_vectorlEULong64_tgR);
      instance.SetDestructor(&destruct_vectorlEULong64_tgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<ULong64_t> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<ULong64_t>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEULong64_tgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<ULong64_t>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEULong64_tgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<ULong64_t> : new vector<ULong64_t>;
   }
   static void *newArray_vectorlEULong64_tgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<ULong64_t>[nElements] : new vector<ULong64_t>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEULong64_tgR(void *p) {
      delete ((vector<ULong64_t>*)p);
   }
   static void deleteArray_vectorlEULong64_tgR(void *p) {
      delete [] ((vector<ULong64_t>*)p);
   }
   static void destruct_vectorlEULong64_tgR(void *p) {
      typedef vector<ULong64_t> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<ULong64_t>

namespace ROOT {
   void vectorlEvectorlEboolgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEboolgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEboolgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEboolgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEboolgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEboolgRsPgR(void *p);
   static void destruct_vectorlEvectorlEboolgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<bool> >*)
   {
      vector<vector<bool> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<bool> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<bool> >", -2, "/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.18-x86_64-slc5-gcc4.3/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<bool> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEboolgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<bool> >) );
      instance.SetNew(&new_vectorlEvectorlEboolgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEboolgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEboolgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEboolgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEboolgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<bool> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<bool> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEboolgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<bool> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEboolgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<bool> > : new vector<vector<bool> >;
   }
   static void *newArray_vectorlEvectorlEboolgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<bool> >[nElements] : new vector<vector<bool> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEboolgRsPgR(void *p) {
      delete ((vector<vector<bool> >*)p);
   }
   static void deleteArray_vectorlEvectorlEboolgRsPgR(void *p) {
      delete [] ((vector<vector<bool> >*)p);
   }
   static void destruct_vectorlEvectorlEboolgRsPgR(void *p) {
      typedef vector<vector<bool> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<bool> >

namespace ROOT {
   void vectorlEvectorlElongsPdoublegRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlElongsPdoublegRsPgR_Dictionary();
   static void *new_vectorlEvectorlElongsPdoublegRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlElongsPdoublegRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlElongsPdoublegRsPgR(void *p);
   static void deleteArray_vectorlEvectorlElongsPdoublegRsPgR(void *p);
   static void destruct_vectorlEvectorlElongsPdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<long double> >*)
   {
      vector<vector<long double> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<long double> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<long double> >", -2, "/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.18-x86_64-slc5-gcc4.3/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<long double> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlElongsPdoublegRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<long double> >) );
      instance.SetNew(&new_vectorlEvectorlElongsPdoublegRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlElongsPdoublegRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlElongsPdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlElongsPdoublegRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlElongsPdoublegRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<long double> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<long double> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlElongsPdoublegRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<long double> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlElongsPdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<long double> > : new vector<vector<long double> >;
   }
   static void *newArray_vectorlEvectorlElongsPdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<long double> >[nElements] : new vector<vector<long double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlElongsPdoublegRsPgR(void *p) {
      delete ((vector<vector<long double> >*)p);
   }
   static void deleteArray_vectorlEvectorlElongsPdoublegRsPgR(void *p) {
      delete [] ((vector<vector<long double> >*)p);
   }
   static void destruct_vectorlEvectorlElongsPdoublegRsPgR(void *p) {
      typedef vector<vector<long double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<long double> >

namespace ROOT {
   void vectorlEvectorlELong64_tgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlELong64_tgRsPgR_Dictionary();
   static void *new_vectorlEvectorlELong64_tgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlELong64_tgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlELong64_tgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlELong64_tgRsPgR(void *p);
   static void destruct_vectorlEvectorlELong64_tgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<Long64_t> >*)
   {
      vector<vector<Long64_t> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<Long64_t> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<Long64_t> >", -2, "/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.18-x86_64-slc5-gcc4.3/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<Long64_t> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlELong64_tgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<Long64_t> >) );
      instance.SetNew(&new_vectorlEvectorlELong64_tgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlELong64_tgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlELong64_tgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlELong64_tgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlELong64_tgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<Long64_t> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<Long64_t> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlELong64_tgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<Long64_t> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlELong64_tgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<Long64_t> > : new vector<vector<Long64_t> >;
   }
   static void *newArray_vectorlEvectorlELong64_tgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<Long64_t> >[nElements] : new vector<vector<Long64_t> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlELong64_tgRsPgR(void *p) {
      delete ((vector<vector<Long64_t> >*)p);
   }
   static void deleteArray_vectorlEvectorlELong64_tgRsPgR(void *p) {
      delete [] ((vector<vector<Long64_t> >*)p);
   }
   static void destruct_vectorlEvectorlELong64_tgRsPgR(void *p) {
      typedef vector<vector<Long64_t> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<Long64_t> >

namespace ROOT {
   void vectorlEvectorlEULong64_tgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEULong64_tgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEULong64_tgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEULong64_tgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEULong64_tgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEULong64_tgRsPgR(void *p);
   static void destruct_vectorlEvectorlEULong64_tgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<ULong64_t> >*)
   {
      vector<vector<ULong64_t> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<ULong64_t> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<ULong64_t> >", -2, "/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.18-x86_64-slc5-gcc4.3/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<ULong64_t> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEULong64_tgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<ULong64_t> >) );
      instance.SetNew(&new_vectorlEvectorlEULong64_tgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEULong64_tgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEULong64_tgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEULong64_tgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEULong64_tgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<ULong64_t> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<ULong64_t> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEULong64_tgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<ULong64_t> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEULong64_tgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<ULong64_t> > : new vector<vector<ULong64_t> >;
   }
   static void *newArray_vectorlEvectorlEULong64_tgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<ULong64_t> >[nElements] : new vector<vector<ULong64_t> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEULong64_tgRsPgR(void *p) {
      delete ((vector<vector<ULong64_t> >*)p);
   }
   static void deleteArray_vectorlEvectorlEULong64_tgRsPgR(void *p) {
      delete [] ((vector<vector<ULong64_t> >*)p);
   }
   static void destruct_vectorlEvectorlEULong64_tgRsPgR(void *p) {
      typedef vector<vector<ULong64_t> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<ULong64_t> >

/********************************************************
* /lustre/users/jhetherl/src/HAL-ROOT/src/HAL_dict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableHAL_dict();

extern "C" void G__set_cpp_environmentHAL_dict() {
  G__cpp_reset_tagtableHAL_dict();
}
#include <new>
extern "C" int G__cpp_dllrevHAL_dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* HAL */
static int G__HAL_dict_539_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HAL::makeTLVFromPtEtaPhiE((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_539_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HAL::makeTLVFromPtEtaPhiM((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_539_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HAL::getTH1FromFileName(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_539_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) HAL::getNextCombination((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TArrayI*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) HAL::getNextCombination((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_539_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      G__letint(result7, 85, (long) HAL::buildTH1D(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), *((TString*) G__int(libp->para[5]))
, *((TString*) G__int(libp->para[6]))));
      break;
   case 6:
      G__letint(result7, 85, (long) HAL::buildTH1D(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), *((TString*) G__int(libp->para[5]))));
      break;
   case 5:
      G__letint(result7, 85, (long) HAL::buildTH1D(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) HAL::buildTH1D(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) HAL::buildTH1D(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) HAL::buildTH1D(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 85, (long) HAL::buildTH1D(*((TString*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_539_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      G__letint(result7, 85, (long) HAL::buildTH1F(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), *((TString*) G__int(libp->para[5]))
, *((TString*) G__int(libp->para[6]))));
      break;
   case 6:
      G__letint(result7, 85, (long) HAL::buildTH1F(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), *((TString*) G__int(libp->para[5]))));
      break;
   case 5:
      G__letint(result7, 85, (long) HAL::buildTH1F(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) HAL::buildTH1F(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) HAL::buildTH1F(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) HAL::buildTH1F(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 85, (long) HAL::buildTH1F(*((TString*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_539_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      G__letint(result7, 85, (long) HAL::buildTH1I(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), *((TString*) G__int(libp->para[5]))
, *((TString*) G__int(libp->para[6]))));
      break;
   case 6:
      G__letint(result7, 85, (long) HAL::buildTH1I(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), *((TString*) G__int(libp->para[5]))));
      break;
   case 5:
      G__letint(result7, 85, (long) HAL::buildTH1I(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) HAL::buildTH1I(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) HAL::buildTH1I(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) HAL::buildTH1I(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 85, (long) HAL::buildTH1I(*((TString*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_539_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      G__letint(result7, 85, (long) HAL::buildTH1C(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), *((TString*) G__int(libp->para[5]))
, *((TString*) G__int(libp->para[6]))));
      break;
   case 6:
      G__letint(result7, 85, (long) HAL::buildTH1C(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), *((TString*) G__int(libp->para[5]))));
      break;
   case 5:
      G__letint(result7, 85, (long) HAL::buildTH1C(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) HAL::buildTH1C(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) HAL::buildTH1C(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) HAL::buildTH1C(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 85, (long) HAL::buildTH1C(*((TString*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_539_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      G__letint(result7, 85, (long) HAL::buildTH1S(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), *((TString*) G__int(libp->para[5]))
, *((TString*) G__int(libp->para[6]))));
      break;
   case 6:
      G__letint(result7, 85, (long) HAL::buildTH1S(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), *((TString*) G__int(libp->para[5]))));
      break;
   case 5:
      G__letint(result7, 85, (long) HAL::buildTH1S(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) HAL::buildTH1S(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) HAL::buildTH1S(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) HAL::buildTH1S(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 85, (long) HAL::buildTH1S(*((TString*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_539_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 11:
      G__letint(result7, 85, (long) HAL::buildTH2D(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, *((TString*) G__int(libp->para[8])), *((TString*) G__int(libp->para[9]))
, *((TString*) G__int(libp->para[10]))));
      break;
   case 10:
      G__letint(result7, 85, (long) HAL::buildTH2D(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, *((TString*) G__int(libp->para[8])), *((TString*) G__int(libp->para[9]))));
      break;
   case 9:
      G__letint(result7, 85, (long) HAL::buildTH2D(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, *((TString*) G__int(libp->para[8]))));
      break;
   case 8:
      G__letint(result7, 85, (long) HAL::buildTH2D(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 85, (long) HAL::buildTH2D(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 85, (long) HAL::buildTH2D(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) HAL::buildTH2D(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) HAL::buildTH2D(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) HAL::buildTH2D(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) HAL::buildTH2D(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 85, (long) HAL::buildTH2D(*((TString*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_539_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 11:
      G__letint(result7, 85, (long) HAL::buildTH2F(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, *((TString*) G__int(libp->para[8])), *((TString*) G__int(libp->para[9]))
, *((TString*) G__int(libp->para[10]))));
      break;
   case 10:
      G__letint(result7, 85, (long) HAL::buildTH2F(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, *((TString*) G__int(libp->para[8])), *((TString*) G__int(libp->para[9]))));
      break;
   case 9:
      G__letint(result7, 85, (long) HAL::buildTH2F(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, *((TString*) G__int(libp->para[8]))));
      break;
   case 8:
      G__letint(result7, 85, (long) HAL::buildTH2F(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 85, (long) HAL::buildTH2F(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 85, (long) HAL::buildTH2F(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) HAL::buildTH2F(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) HAL::buildTH2F(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) HAL::buildTH2F(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) HAL::buildTH2F(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 85, (long) HAL::buildTH2F(*((TString*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_539_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 11:
      G__letint(result7, 85, (long) HAL::buildTH2C(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, *((TString*) G__int(libp->para[8])), *((TString*) G__int(libp->para[9]))
, *((TString*) G__int(libp->para[10]))));
      break;
   case 10:
      G__letint(result7, 85, (long) HAL::buildTH2C(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, *((TString*) G__int(libp->para[8])), *((TString*) G__int(libp->para[9]))));
      break;
   case 9:
      G__letint(result7, 85, (long) HAL::buildTH2C(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, *((TString*) G__int(libp->para[8]))));
      break;
   case 8:
      G__letint(result7, 85, (long) HAL::buildTH2C(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 85, (long) HAL::buildTH2C(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 85, (long) HAL::buildTH2C(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) HAL::buildTH2C(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) HAL::buildTH2C(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) HAL::buildTH2C(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) HAL::buildTH2C(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 85, (long) HAL::buildTH2C(*((TString*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_539_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 11:
      G__letint(result7, 85, (long) HAL::buildTH2I(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, *((TString*) G__int(libp->para[8])), *((TString*) G__int(libp->para[9]))
, *((TString*) G__int(libp->para[10]))));
      break;
   case 10:
      G__letint(result7, 85, (long) HAL::buildTH2I(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, *((TString*) G__int(libp->para[8])), *((TString*) G__int(libp->para[9]))));
      break;
   case 9:
      G__letint(result7, 85, (long) HAL::buildTH2I(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, *((TString*) G__int(libp->para[8]))));
      break;
   case 8:
      G__letint(result7, 85, (long) HAL::buildTH2I(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 85, (long) HAL::buildTH2I(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 85, (long) HAL::buildTH2I(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) HAL::buildTH2I(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) HAL::buildTH2I(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) HAL::buildTH2I(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) HAL::buildTH2I(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 85, (long) HAL::buildTH2I(*((TString*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_539_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 11:
      G__letint(result7, 85, (long) HAL::buildTH2S(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, *((TString*) G__int(libp->para[8])), *((TString*) G__int(libp->para[9]))
, *((TString*) G__int(libp->para[10]))));
      break;
   case 10:
      G__letint(result7, 85, (long) HAL::buildTH2S(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, *((TString*) G__int(libp->para[8])), *((TString*) G__int(libp->para[9]))));
      break;
   case 9:
      G__letint(result7, 85, (long) HAL::buildTH2S(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, *((TString*) G__int(libp->para[8]))));
      break;
   case 8:
      G__letint(result7, 85, (long) HAL::buildTH2S(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 85, (long) HAL::buildTH2S(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 85, (long) HAL::buildTH2S(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) HAL::buildTH2S(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) HAL::buildTH2S(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) HAL::buildTH2S(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) HAL::buildTH2S(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 85, (long) HAL::buildTH2S(*((TString*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_539_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 14:
      G__letint(result7, 85, (long) HAL::buildTH3D(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), *((TString*) G__int(libp->para[11]))
, *((TString*) G__int(libp->para[12])), *((TString*) G__int(libp->para[13]))));
      break;
   case 13:
      G__letint(result7, 85, (long) HAL::buildTH3D(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), *((TString*) G__int(libp->para[11]))
, *((TString*) G__int(libp->para[12]))));
      break;
   case 12:
      G__letint(result7, 85, (long) HAL::buildTH3D(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), *((TString*) G__int(libp->para[11]))));
      break;
   case 11:
      G__letint(result7, 85, (long) HAL::buildTH3D(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10])));
      break;
   case 10:
      G__letint(result7, 85, (long) HAL::buildTH3D(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Double_t) G__double(libp->para[9])));
      break;
   case 9:
      G__letint(result7, 85, (long) HAL::buildTH3D(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8])));
      break;
   case 8:
      G__letint(result7, 85, (long) HAL::buildTH3D(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 85, (long) HAL::buildTH3D(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 85, (long) HAL::buildTH3D(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) HAL::buildTH3D(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) HAL::buildTH3D(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) HAL::buildTH3D(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) HAL::buildTH3D(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 85, (long) HAL::buildTH3D(*((TString*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_539_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 14:
      G__letint(result7, 85, (long) HAL::buildTH3F(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), *((TString*) G__int(libp->para[11]))
, *((TString*) G__int(libp->para[12])), *((TString*) G__int(libp->para[13]))));
      break;
   case 13:
      G__letint(result7, 85, (long) HAL::buildTH3F(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), *((TString*) G__int(libp->para[11]))
, *((TString*) G__int(libp->para[12]))));
      break;
   case 12:
      G__letint(result7, 85, (long) HAL::buildTH3F(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), *((TString*) G__int(libp->para[11]))));
      break;
   case 11:
      G__letint(result7, 85, (long) HAL::buildTH3F(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10])));
      break;
   case 10:
      G__letint(result7, 85, (long) HAL::buildTH3F(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Double_t) G__double(libp->para[9])));
      break;
   case 9:
      G__letint(result7, 85, (long) HAL::buildTH3F(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8])));
      break;
   case 8:
      G__letint(result7, 85, (long) HAL::buildTH3F(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 85, (long) HAL::buildTH3F(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 85, (long) HAL::buildTH3F(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) HAL::buildTH3F(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) HAL::buildTH3F(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) HAL::buildTH3F(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) HAL::buildTH3F(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 85, (long) HAL::buildTH3F(*((TString*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_539_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 14:
      G__letint(result7, 85, (long) HAL::buildTH3C(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), *((TString*) G__int(libp->para[11]))
, *((TString*) G__int(libp->para[12])), *((TString*) G__int(libp->para[13]))));
      break;
   case 13:
      G__letint(result7, 85, (long) HAL::buildTH3C(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), *((TString*) G__int(libp->para[11]))
, *((TString*) G__int(libp->para[12]))));
      break;
   case 12:
      G__letint(result7, 85, (long) HAL::buildTH3C(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), *((TString*) G__int(libp->para[11]))));
      break;
   case 11:
      G__letint(result7, 85, (long) HAL::buildTH3C(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10])));
      break;
   case 10:
      G__letint(result7, 85, (long) HAL::buildTH3C(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Double_t) G__double(libp->para[9])));
      break;
   case 9:
      G__letint(result7, 85, (long) HAL::buildTH3C(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8])));
      break;
   case 8:
      G__letint(result7, 85, (long) HAL::buildTH3C(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 85, (long) HAL::buildTH3C(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 85, (long) HAL::buildTH3C(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) HAL::buildTH3C(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) HAL::buildTH3C(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) HAL::buildTH3C(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) HAL::buildTH3C(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 85, (long) HAL::buildTH3C(*((TString*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_539_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 14:
      G__letint(result7, 85, (long) HAL::buildTH3I(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), *((TString*) G__int(libp->para[11]))
, *((TString*) G__int(libp->para[12])), *((TString*) G__int(libp->para[13]))));
      break;
   case 13:
      G__letint(result7, 85, (long) HAL::buildTH3I(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), *((TString*) G__int(libp->para[11]))
, *((TString*) G__int(libp->para[12]))));
      break;
   case 12:
      G__letint(result7, 85, (long) HAL::buildTH3I(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), *((TString*) G__int(libp->para[11]))));
      break;
   case 11:
      G__letint(result7, 85, (long) HAL::buildTH3I(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10])));
      break;
   case 10:
      G__letint(result7, 85, (long) HAL::buildTH3I(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Double_t) G__double(libp->para[9])));
      break;
   case 9:
      G__letint(result7, 85, (long) HAL::buildTH3I(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8])));
      break;
   case 8:
      G__letint(result7, 85, (long) HAL::buildTH3I(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 85, (long) HAL::buildTH3I(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 85, (long) HAL::buildTH3I(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) HAL::buildTH3I(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) HAL::buildTH3I(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) HAL::buildTH3I(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) HAL::buildTH3I(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 85, (long) HAL::buildTH3I(*((TString*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_539_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 14:
      G__letint(result7, 85, (long) HAL::buildTH3S(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), *((TString*) G__int(libp->para[11]))
, *((TString*) G__int(libp->para[12])), *((TString*) G__int(libp->para[13]))));
      break;
   case 13:
      G__letint(result7, 85, (long) HAL::buildTH3S(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), *((TString*) G__int(libp->para[11]))
, *((TString*) G__int(libp->para[12]))));
      break;
   case 12:
      G__letint(result7, 85, (long) HAL::buildTH3S(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), *((TString*) G__int(libp->para[11]))));
      break;
   case 11:
      G__letint(result7, 85, (long) HAL::buildTH3S(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10])));
      break;
   case 10:
      G__letint(result7, 85, (long) HAL::buildTH3S(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Double_t) G__double(libp->para[9])));
      break;
   case 9:
      G__letint(result7, 85, (long) HAL::buildTH3S(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8])));
      break;
   case 8:
      G__letint(result7, 85, (long) HAL::buildTH3S(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 85, (long) HAL::buildTH3S(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 85, (long) HAL::buildTH3S(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) HAL::buildTH3S(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) HAL::buildTH3S(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) HAL::buildTH3S(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) HAL::buildTH3S(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 85, (long) HAL::buildTH3S(*((TString*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_539_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      HAL::standardLegendFormat((TLegend*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Color_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      HAL::standardLegendFormat((TLegend*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Color_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      HAL::standardLegendFormat((TLegend*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      HAL::standardLegendFormat((TLegend*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_539_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      HAL::standardHistogramStackFormat(
(THStack*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      HAL::standardHistogramStackFormat((THStack*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      HAL::standardHistogramStackFormat((THStack*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::AnalysisData */
static int G__HAL_dict_633_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (long double) G__Longdouble(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (float) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (long long) G__Longlong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (short) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (long) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (char) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (unsigned long long) G__ULonglong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (unsigned short) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (unsigned long) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (unsigned int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (unsigned char) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (TObject*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1])
, (long long) G__Longlong(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (long double) G__Longdouble(libp->para[1])
, (long long) G__Longlong(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (long long) G__Longlong(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (float) G__double(libp->para[1])
, (long long) G__Longlong(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (long long) G__Longlong(libp->para[1])
, (long long) G__Longlong(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (short) G__int(libp->para[1])
, (long long) G__Longlong(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (long) G__int(libp->para[1])
, (long long) G__Longlong(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (long long) G__Longlong(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (char) G__int(libp->para[1])
, (long long) G__Longlong(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (unsigned long long) G__ULonglong(libp->para[1])
, (long long) G__Longlong(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (unsigned short) G__int(libp->para[1])
, (long long) G__Longlong(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (unsigned long) G__int(libp->para[1])
, (long long) G__Longlong(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (unsigned int) G__int(libp->para[1])
, (long long) G__Longlong(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (unsigned char) G__int(libp->para[1])
, (long long) G__Longlong(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (long long) G__Longlong(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (long long) G__Longlong(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (TObject*) G__int(libp->para[1])
, (long long) G__Longlong(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1])
, (long long) G__Longlong(libp->para[2]), (long long) G__Longlong(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (long double) G__Longdouble(libp->para[1])
, (long long) G__Longlong(libp->para[2]), (long long) G__Longlong(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (long long) G__Longlong(libp->para[2]), (long long) G__Longlong(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (float) G__double(libp->para[1])
, (long long) G__Longlong(libp->para[2]), (long long) G__Longlong(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (long long) G__Longlong(libp->para[1])
, (long long) G__Longlong(libp->para[2]), (long long) G__Longlong(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (short) G__int(libp->para[1])
, (long long) G__Longlong(libp->para[2]), (long long) G__Longlong(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (long) G__int(libp->para[1])
, (long long) G__Longlong(libp->para[2]), (long long) G__Longlong(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (long long) G__Longlong(libp->para[2]), (long long) G__Longlong(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (char) G__int(libp->para[1])
, (long long) G__Longlong(libp->para[2]), (long long) G__Longlong(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (unsigned long long) G__ULonglong(libp->para[1])
, (long long) G__Longlong(libp->para[2]), (long long) G__Longlong(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (unsigned short) G__int(libp->para[1])
, (long long) G__Longlong(libp->para[2]), (long long) G__Longlong(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (unsigned long) G__int(libp->para[1])
, (long long) G__Longlong(libp->para[2]), (long long) G__Longlong(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (unsigned int) G__int(libp->para[1])
, (long long) G__Longlong(libp->para[2]), (long long) G__Longlong(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (unsigned char) G__int(libp->para[1])
, (long long) G__Longlong(libp->para[2]), (long long) G__Longlong(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (long long) G__Longlong(libp->para[2]), (long long) G__Longlong(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (long long) G__Longlong(libp->para[2]), (long long) G__Longlong(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SetValue(*((string*) G__int(libp->para[0])), (TObject*) G__int(libp->para[1])
, (long long) G__Longlong(libp->para[2]), (long long) G__Longlong(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((HAL::AnalysisData*) G__getstructoffset())->GetBool(*((string*) G__int(libp->para[0])), (long long) G__Longlong(libp->para[1])
, (long long) G__Longlong(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((HAL::AnalysisData*) G__getstructoffset())->GetBool(*((string*) G__int(libp->para[0])), (long long) G__Longlong(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((HAL::AnalysisData*) G__getstructoffset())->GetBool(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letLongdouble(result7, 113, (long double) ((HAL::AnalysisData*) G__getstructoffset())->GetDecimal(*((string*) G__int(libp->para[0])), (long long) G__Longlong(libp->para[1])
, (long long) G__Longlong(libp->para[2])));
      break;
   case 2:
      G__letLongdouble(result7, 113, (long double) ((HAL::AnalysisData*) G__getstructoffset())->GetDecimal(*((string*) G__int(libp->para[0])), (long long) G__Longlong(libp->para[1])));
      break;
   case 1:
      G__letLongdouble(result7, 113, (long double) ((HAL::AnalysisData*) G__getstructoffset())->GetDecimal(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letLonglong(result7, 110, (G__int64) ((HAL::AnalysisData*) G__getstructoffset())->GetInteger(*((string*) G__int(libp->para[0])), (long long) G__Longlong(libp->para[1])
, (long long) G__Longlong(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7, 110, (G__int64) ((HAL::AnalysisData*) G__getstructoffset())->GetInteger(*((string*) G__int(libp->para[0])), (long long) G__Longlong(libp->para[1])));
      break;
   case 1:
      G__letLonglong(result7, 110, (G__int64) ((HAL::AnalysisData*) G__getstructoffset())->GetInteger(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letULonglong(result7, 109, (G__uint64) ((HAL::AnalysisData*) G__getstructoffset())->GetCounting(*((string*) G__int(libp->para[0])), (long long) G__Longlong(libp->para[1])
, (long long) G__Longlong(libp->para[2])));
      break;
   case 2:
      G__letULonglong(result7, 109, (G__uint64) ((HAL::AnalysisData*) G__getstructoffset())->GetCounting(*((string*) G__int(libp->para[0])), (long long) G__Longlong(libp->para[1])));
      break;
   case 1:
      G__letULonglong(result7, 109, (G__uint64) ((HAL::AnalysisData*) G__getstructoffset())->GetCounting(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         string* pobj;
         string xobj = ((HAL::AnalysisData*) G__getstructoffset())->GetString(*((string*) G__int(libp->para[0])), (long long) G__Longlong(libp->para[1])
, (long long) G__Longlong(libp->para[2]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         string* pobj;
         string xobj = ((HAL::AnalysisData*) G__getstructoffset())->GetString(*((string*) G__int(libp->para[0])), (long long) G__Longlong(libp->para[1]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         string* pobj;
         string xobj = ((HAL::AnalysisData*) G__getstructoffset())->GetString(*((string*) G__int(libp->para[0])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((HAL::AnalysisData*) G__getstructoffset())->GetTObject(*((string*) G__int(libp->para[0])), (long long) G__Longlong(libp->para[1])
, (long long) G__Longlong(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((HAL::AnalysisData*) G__getstructoffset())->GetTObject(*((string*) G__int(libp->para[0])), (long long) G__Longlong(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((HAL::AnalysisData*) G__getstructoffset())->GetTObject(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((HAL::AnalysisData*) G__getstructoffset())->Exists(*((string*) G__int(libp->para[0])), (long long) G__Longlong(libp->para[1])
, (long long) G__Longlong(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((HAL::AnalysisData*) G__getstructoffset())->Exists(*((string*) G__int(libp->para[0])), (long long) G__Longlong(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((HAL::AnalysisData*) G__getstructoffset())->Exists(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((HAL::AnalysisData*) G__getstructoffset())->TypeDim(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<std::string>* pobj;
         vector<std::string> xobj = ((HAL::AnalysisData*) G__getstructoffset())->GetSimilarNames(*((string*) G__int(libp->para[0])), (unsigned int) G__int(libp->para[1]));
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->CopyValues(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->SwapValues(*((string*) G__int(libp->para[0])), (long long) G__Longlong(libp->para[1])
, (long long) G__Longlong(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->RemoveNameAndData(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->RemoveData(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->RemoveAllAssociatedData(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HAL::AnalysisData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HAL::AnalysisData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HAL::AnalysisData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HAL::AnalysisData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HAL::AnalysisData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HAL::AnalysisData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HAL::AnalysisData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_633_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HAL::AnalysisData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__HAL_dict_633_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::AnalysisData *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HAL::AnalysisData[n];
     } else {
       p = new((void*) gvp) HAL::AnalysisData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HAL::AnalysisData;
     } else {
       p = new((void*) gvp) HAL::AnalysisData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_633_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::AnalysisData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::AnalysisData(*(HAL::AnalysisData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::AnalysisData G__THALcLcLAnalysisData;
static int G__HAL_dict_633_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::AnalysisData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::AnalysisData*) (soff+(sizeof(HAL::AnalysisData)*i)))->~G__THALcLcLAnalysisData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::AnalysisData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::AnalysisData*) (soff))->~G__THALcLcLAnalysisData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_633_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::AnalysisData* dest = (HAL::AnalysisData*) G__getstructoffset();
   *dest = *(HAL::AnalysisData*) libp->para[0].ref;
   const HAL::AnalysisData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::AnalysisTreeReader */
static int G__HAL_dict_634_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::AnalysisTreeReader* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HAL::AnalysisTreeReader((TTree*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HAL::AnalysisTreeReader((TTree*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HAL::AnalysisTreeReader[n];
       } else {
         p = new((void*) gvp) HAL::AnalysisTreeReader[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HAL::AnalysisTreeReader;
       } else {
         p = new((void*) gvp) HAL::AnalysisTreeReader;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_634_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisTreeReader*) G__getstructoffset())->SetTree((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_634_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisTreeReader*) G__getstructoffset())->SetEntry((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_634_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HAL::AnalysisTreeReader*) G__getstructoffset())->GetTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_634_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisTreeReader*) G__getstructoffset())->SetBranchMap((TMap*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_634_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 104, (long) ((HAL::AnalysisTreeReader*) G__getstructoffset())->GetDim(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 104, (long) ((HAL::AnalysisTreeReader*) G__getstructoffset())->GetDim(*((TString*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_634_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((HAL::AnalysisTreeReader*) G__getstructoffset())->GetBool(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((HAL::AnalysisTreeReader*) G__getstructoffset())->GetBool(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((HAL::AnalysisTreeReader*) G__getstructoffset())->GetBool(*((TString*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_634_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letLonglong(result7, 110, (G__int64) ((HAL::AnalysisTreeReader*) G__getstructoffset())->GetInteger(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7, 110, (G__int64) ((HAL::AnalysisTreeReader*) G__getstructoffset())->GetInteger(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letLonglong(result7, 110, (G__int64) ((HAL::AnalysisTreeReader*) G__getstructoffset())->GetInteger(*((TString*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_634_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letULonglong(result7, 109, (G__uint64) ((HAL::AnalysisTreeReader*) G__getstructoffset())->GetCounting(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letULonglong(result7, 109, (G__uint64) ((HAL::AnalysisTreeReader*) G__getstructoffset())->GetCounting(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letULonglong(result7, 109, (G__uint64) ((HAL::AnalysisTreeReader*) G__getstructoffset())->GetCounting(*((TString*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_634_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letLongdouble(result7, 113, (long double) ((HAL::AnalysisTreeReader*) G__getstructoffset())->GetDecimal(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letLongdouble(result7, 113, (long double) ((HAL::AnalysisTreeReader*) G__getstructoffset())->GetDecimal(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letLongdouble(result7, 113, (long double) ((HAL::AnalysisTreeReader*) G__getstructoffset())->GetDecimal(*((TString*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_634_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         TString* pobj;
         TString xobj = ((HAL::AnalysisTreeReader*) G__getstructoffset())->GetString(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         TString* pobj;
         TString xobj = ((HAL::AnalysisTreeReader*) G__getstructoffset())->GetString(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         TString* pobj;
         TString xobj = ((HAL::AnalysisTreeReader*) G__getstructoffset())->GetString(*((TString*) G__int(libp->para[0])));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_634_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         const TObjArray& obj = ((HAL::AnalysisTreeReader*) G__getstructoffset())->GetObjArray(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 1:
      {
         const TObjArray& obj = ((HAL::AnalysisTreeReader*) G__getstructoffset())->GetObjArray(*((TString*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_634_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         const TClonesArray& obj = ((HAL::AnalysisTreeReader*) G__getstructoffset())->GetClonesArray(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 1:
      {
         const TClonesArray& obj = ((HAL::AnalysisTreeReader*) G__getstructoffset())->GetClonesArray(*((TString*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_634_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         const TRef& obj = ((HAL::AnalysisTreeReader*) G__getstructoffset())->GetRef(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 2:
      {
         const TRef& obj = ((HAL::AnalysisTreeReader*) G__getstructoffset())->GetRef(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 1:
      {
         const TRef& obj = ((HAL::AnalysisTreeReader*) G__getstructoffset())->GetRef(*((TString*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_634_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         const TRefArray& obj = ((HAL::AnalysisTreeReader*) G__getstructoffset())->GetRefArray(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 1:
      {
         const TRefArray& obj = ((HAL::AnalysisTreeReader*) G__getstructoffset())->GetRefArray(*((TString*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_634_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HAL::AnalysisTreeReader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_634_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HAL::AnalysisTreeReader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_634_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HAL::AnalysisTreeReader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_634_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HAL::AnalysisTreeReader::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_634_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisTreeReader*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_634_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HAL::AnalysisTreeReader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_634_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HAL::AnalysisTreeReader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_634_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HAL::AnalysisTreeReader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_634_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HAL::AnalysisTreeReader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_634_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::AnalysisTreeReader* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::AnalysisTreeReader(*(HAL::AnalysisTreeReader*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReader));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::AnalysisTreeReader G__THALcLcLAnalysisTreeReader;
static int G__HAL_dict_634_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::AnalysisTreeReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::AnalysisTreeReader*) (soff+(sizeof(HAL::AnalysisTreeReader)*i)))->~G__THALcLcLAnalysisTreeReader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::AnalysisTreeReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::AnalysisTreeReader*) (soff))->~G__THALcLcLAnalysisTreeReader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_634_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::AnalysisTreeReader* dest = (HAL::AnalysisTreeReader*) G__getstructoffset();
   *dest = *(HAL::AnalysisTreeReader*) libp->para[0].ref;
   const HAL::AnalysisTreeReader& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::AnalysisTreeWriter */
static int G__HAL_dict_635_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::AnalysisTreeWriter* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::AnalysisTreeWriter(*((TString*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) HAL::AnalysisTreeWriter(*((TString*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeWriter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_635_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisTreeWriter*) G__getstructoffset())->SetTreeName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_635_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisTreeWriter*) G__getstructoffset())->SetTreeDescription(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_635_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisTreeWriter*) G__getstructoffset())->IncrementCount();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_635_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisTreeWriter*) G__getstructoffset())->WriteData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_635_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HAL::AnalysisTreeWriter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_635_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HAL::AnalysisTreeWriter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_635_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HAL::AnalysisTreeWriter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_635_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HAL::AnalysisTreeWriter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_635_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisTreeWriter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_635_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HAL::AnalysisTreeWriter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_635_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HAL::AnalysisTreeWriter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_635_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HAL::AnalysisTreeWriter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_635_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HAL::AnalysisTreeWriter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_635_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::AnalysisTreeWriter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::AnalysisTreeWriter(*(HAL::AnalysisTreeWriter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeWriter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::AnalysisTreeWriter G__THALcLcLAnalysisTreeWriter;
static int G__HAL_dict_635_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::AnalysisTreeWriter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::AnalysisTreeWriter*) (soff+(sizeof(HAL::AnalysisTreeWriter)*i)))->~G__THALcLcLAnalysisTreeWriter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::AnalysisTreeWriter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::AnalysisTreeWriter*) (soff))->~G__THALcLcLAnalysisTreeWriter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_635_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::AnalysisTreeWriter* dest = (HAL::AnalysisTreeWriter*) G__getstructoffset();
   *dest = *(HAL::AnalysisTreeWriter*) libp->para[0].ref;
   const HAL::AnalysisTreeWriter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::Algorithm */
static int G__HAL_dict_636_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::Algorithm* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HAL::Algorithm(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) HAL::Algorithm(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HAL::Algorithm(*((TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) HAL::Algorithm(*((TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HAL::Algorithm[n];
       } else {
         p = new((void*) gvp) HAL::Algorithm[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HAL::Algorithm;
       } else {
         p = new((void*) gvp) HAL::Algorithm;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::Algorithm* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::Algorithm(*(HAL::Algorithm*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) HAL::Algorithm(*(HAL::Algorithm*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::Algorithm*) G__getstructoffset())->Add((HAL::Algorithm*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::Algorithm*) G__getstructoffset())->ls();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::Algorithm*) G__getstructoffset())->DeleteAlgos();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::Algorithm*) G__getstructoffset())->SetName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::Algorithm*) G__getstructoffset())->SetTitle(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::Algorithm*) G__getstructoffset())->SetOutputFileName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::Algorithm*) G__getstructoffset())->Abort();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::Algorithm*) G__getstructoffset())->CleanAlgos();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HAL::Algorithm*) G__getstructoffset())->ExecuteAlgo((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HAL::Algorithm*) G__getstructoffset())->ExecuteAlgo();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::Algorithm*) G__getstructoffset())->ExecuteAlgos((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::Algorithm*) G__getstructoffset())->InitializeAlgo((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::Algorithm*) G__getstructoffset())->BeginAlgo((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::Algorithm*) G__getstructoffset())->SlaveBeginAlgo((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::Algorithm*) G__getstructoffset())->SlaveTerminateAlgo((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::Algorithm*) G__getstructoffset())->TerminateAlgo((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::Algorithm*) G__getstructoffset())->AddData(*((TString*) G__int(libp->para[0])), (TObject*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HAL::Algorithm*) G__getstructoffset())->GetData(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HAL::Algorithm*) G__getstructoffset())->CheckData(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::Algorithm*) G__getstructoffset())->DeleteData(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::Algorithm*) G__getstructoffset())->AssignDataList((TList*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((HAL::Algorithm*) G__getstructoffset())->GetName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((HAL::Algorithm*) G__getstructoffset())->GetTitle();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((HAL::Algorithm*) G__getstructoffset())->GetOutputFileName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HAL::Algorithm*) G__getstructoffset())->GetRawData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HAL::Algorithm*) G__getstructoffset())->GetUserData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HAL::Algorithm*) G__getstructoffset())->GetUserOutput());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HAL::Algorithm::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HAL::Algorithm::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HAL::Algorithm::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HAL::Algorithm::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const HAL::Algorithm*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::Algorithm*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::Algorithm*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::Algorithm*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HAL::Algorithm::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HAL::Algorithm::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HAL::Algorithm::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_636_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HAL::Algorithm::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::Algorithm G__THALcLcLAlgorithm;
static int G__HAL_dict_636_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::Algorithm*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::Algorithm*) (soff+(sizeof(HAL::Algorithm)*i)))->~G__THALcLcLAlgorithm();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::Algorithm*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::Algorithm*) (soff))->~G__THALcLcLAlgorithm();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_636_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::Algorithm* dest = (HAL::Algorithm*) G__getstructoffset();
   *dest = *(HAL::Algorithm*) libp->para[0].ref;
   const HAL::Algorithm& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::CutAlgorithm */
static int G__HAL_dict_641_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::CutAlgorithm* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HAL::CutAlgorithm(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) HAL::CutAlgorithm(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HAL::CutAlgorithm(*((TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) HAL::CutAlgorithm(*((TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HAL::CutAlgorithm[n];
       } else {
         p = new((void*) gvp) HAL::CutAlgorithm[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HAL::CutAlgorithm;
       } else {
         p = new((void*) gvp) HAL::CutAlgorithm;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCutAlgorithm));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_641_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((HAL::CutAlgorithm*) G__getstructoffset())->GetNumberPassed());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_641_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::CutAlgorithm* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::CutAlgorithm(*(HAL::CutAlgorithm*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCutAlgorithm));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::CutAlgorithm G__THALcLcLCutAlgorithm;
static int G__HAL_dict_641_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::CutAlgorithm*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::CutAlgorithm*) (soff+(sizeof(HAL::CutAlgorithm)*i)))->~G__THALcLcLCutAlgorithm();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::CutAlgorithm*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::CutAlgorithm*) (soff))->~G__THALcLcLCutAlgorithm();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_641_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::CutAlgorithm* dest = (HAL::CutAlgorithm*) G__getstructoffset();
   *dest = *(HAL::CutAlgorithm*) libp->para[0].ref;
   const HAL::CutAlgorithm& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<long double,allocator<long double> > */
static int G__HAL_dict_982_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<long double,allocator<long double> >::reference obj = ((vector<long double,allocator<long double> >*) G__getstructoffset())->at((vector<long double,allocator<long double> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'q', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_982_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long double,allocator<long double> >::const_reference obj = ((const vector<long double,allocator<long double> >*) G__getstructoffset())->at((vector<long double,allocator<long double> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'q', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_982_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long double,allocator<long double> >::iterator* pobj;
         vector<long double,allocator<long double> >::iterator xobj = ((vector<long double,allocator<long double> >*) G__getstructoffset())->begin();
         pobj = new vector<long double,allocator<long double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_982_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long double,allocator<long double> >::iterator* pobj;
         vector<long double,allocator<long double> >::iterator xobj = ((vector<long double,allocator<long double> >*) G__getstructoffset())->end();
         pobj = new vector<long double,allocator<long double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_982_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long double,allocator<long double> >::reverse_iterator* pobj;
         vector<long double,allocator<long double> >::reverse_iterator xobj = ((vector<long double,allocator<long double> >*) G__getstructoffset())->rbegin();
         pobj = new vector<long double,allocator<long double> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_982_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long double,allocator<long double> >::reverse_iterator* pobj;
         vector<long double,allocator<long double> >::reverse_iterator xobj = ((vector<long double,allocator<long double> >*) G__getstructoffset())->rend();
         pobj = new vector<long double,allocator<long double> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_982_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<long double,allocator<long double> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_982_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<long double,allocator<long double> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_982_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<long double,allocator<long double> >*) G__getstructoffset())->resize((vector<long double,allocator<long double> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_982_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<long double,allocator<long double> >*) G__getstructoffset())->resize((vector<long double,allocator<long double> >::size_type) G__int(libp->para[0]), (long double) G__Longdouble(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_982_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<long double,allocator<long double> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_982_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<long double,allocator<long double> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_982_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<long double,allocator<long double> >::reference obj = ((vector<long double,allocator<long double> >*) G__getstructoffset())->operator[]((vector<long double,allocator<long double> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'q', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_982_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long double,allocator<long double> >::const_reference obj = ((const vector<long double,allocator<long double> >*) G__getstructoffset())->operator[]((vector<long double,allocator<long double> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'q', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_982_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<long double,allocator<long double> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<long double,allocator<long double> >[n];
     } else {
       p = new((void*) gvp) vector<long double,allocator<long double> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<long double,allocator<long double> >;
     } else {
       p = new((void*) gvp) vector<long double,allocator<long double> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_982_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<long double,allocator<long double> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<long double,allocator<long double> >((vector<long double,allocator<long double> >::size_type) G__int(libp->para[0]), *(long double*) G__Longdoubleref(&libp->para[1]));
     } else {
       p = new((void*) gvp) vector<long double,allocator<long double> >((vector<long double,allocator<long double> >::size_type) G__int(libp->para[0]), *(long double*) G__Longdoubleref(&libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<long double,allocator<long double> >((vector<long double,allocator<long double> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<long double,allocator<long double> >((vector<long double,allocator<long double> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_982_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<long double,allocator<long double> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<long double,allocator<long double> >(*(vector<long double,allocator<long double> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<long double,allocator<long double> >(*(vector<long double,allocator<long double> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_982_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<long double,allocator<long double> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<long double,allocator<long double> >(*((vector<long double,allocator<long double> >::const_iterator*) G__int(libp->para[0])), *((vector<long double,allocator<long double> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<long double,allocator<long double> >(*((vector<long double,allocator<long double> >::const_iterator*) G__int(libp->para[0])), *((vector<long double,allocator<long double> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_982_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<long double,allocator<long double> >& obj = ((vector<long double,allocator<long double> >*) G__getstructoffset())->operator=(*(vector<long double,allocator<long double> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_982_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<long double,allocator<long double> >*) G__getstructoffset())->reserve((vector<long double,allocator<long double> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_982_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const long double& obj = ((vector<long double,allocator<long double> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'q', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_982_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const long double& obj = ((vector<long double,allocator<long double> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'q', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_982_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<long double,allocator<long double> >*) G__getstructoffset())->push_back(*(long double*) G__Longdoubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_982_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<long double,allocator<long double> >*) G__getstructoffset())->swap(*(vector<long double,allocator<long double> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_982_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<long double,allocator<long double> >::iterator* pobj;
         vector<long double,allocator<long double> >::iterator xobj = ((vector<long double,allocator<long double> >*) G__getstructoffset())->insert(*((vector<long double,allocator<long double> >::iterator*) G__int(libp->para[0])), *(long double*) G__Longdoubleref(&libp->para[1]));
         pobj = new vector<long double,allocator<long double> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_982_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<long double,allocator<long double> >*) G__getstructoffset())->insert(*((vector<long double,allocator<long double> >::iterator*) G__int(libp->para[0])), *((vector<long double,allocator<long double> >::const_iterator*) G__int(libp->para[1]))
, *((vector<long double,allocator<long double> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_982_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<long double,allocator<long double> >*) G__getstructoffset())->insert(*((vector<long double,allocator<long double> >::iterator*) G__int(libp->para[0])), (vector<long double,allocator<long double> >::size_type) G__int(libp->para[1])
, *(long double*) G__Longdoubleref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_982_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<long double,allocator<long double> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_982_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<long double,allocator<long double> >*) G__getstructoffset())->erase(*((vector<long double,allocator<long double> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_982_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<long double,allocator<long double> >*) G__getstructoffset())->erase(*((vector<long double,allocator<long double> >::iterator*) G__int(libp->para[0])), *((vector<long double,allocator<long double> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_982_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<long double,allocator<long double> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<long double,allocator<long double> > G__TvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR;
static int G__HAL_dict_982_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<long double,allocator<long double> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<long double,allocator<long double> >*) (soff+(sizeof(vector<long double,allocator<long double> >)*i)))->~G__TvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<long double,allocator<long double> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<long double,allocator<long double> >*) (soff))->~G__TvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > > */
static int G__HAL_dict_1032_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::reference obj = ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->at((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1032_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::const_reference obj = ((const vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->at((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1032_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator* pobj;
         vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator xobj = ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1032_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator* pobj;
         vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator xobj = ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1032_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::reverse_iterator* pobj;
         vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::reverse_iterator xobj = ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1032_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::reverse_iterator* pobj;
         vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::reverse_iterator xobj = ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1032_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1032_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1032_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->resize((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1032_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->resize((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type) G__int(libp->para[0]), *((vector<bool,allocator<bool> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1032_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1032_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1032_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::reference obj = ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->operator[]((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1032_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::const_reference obj = ((const vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->operator[]((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1032_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >;
     } else {
       p = new((void*) gvp) vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1032_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type) G__int(libp->para[0]), *(vector<bool,allocator<bool> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type) G__int(libp->para[0]), *(vector<bool,allocator<bool> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1032_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >(*(vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >(*(vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1032_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >(*((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >(*((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1032_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >& obj = ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->operator=(*(vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1032_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->reserve((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1032_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<bool,allocator<bool> >& obj = ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1032_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<bool,allocator<bool> >& obj = ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1032_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->push_back(*(vector<bool,allocator<bool> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1032_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->swap(*(vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1032_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator* pobj;
         vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator xobj = ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->insert(*((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator*) G__int(libp->para[0])), *(vector<bool,allocator<bool> >*) libp->para[1].ref);
         pobj = new vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1032_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->insert(*((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1032_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->insert(*((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator*) G__int(libp->para[0])), (vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type) G__int(libp->para[1])
, *(vector<bool,allocator<bool> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1032_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1032_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->erase(*((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1032_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->erase(*((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1032_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > > G__TvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR;
static int G__HAL_dict_1032_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) (soff+(sizeof(vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >)*i)))->~G__TvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*) (soff))->~G__TvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > > */
static int G__HAL_dict_1039_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::reference obj = ((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*) G__getstructoffset())->at((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1039_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::const_reference obj = ((const vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*) G__getstructoffset())->at((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1039_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::iterator* pobj;
         vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::iterator xobj = ((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1039_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::iterator* pobj;
         vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::iterator xobj = ((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1039_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::reverse_iterator* pobj;
         vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::reverse_iterator xobj = ((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1039_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::reverse_iterator* pobj;
         vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::reverse_iterator xobj = ((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1039_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1039_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1039_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*) G__getstructoffset())->resize((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1039_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*) G__getstructoffset())->resize((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::size_type) G__int(libp->para[0]), *((vector<long double,allocator<long double> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1039_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1039_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1039_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::reference obj = ((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*) G__getstructoffset())->operator[]((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1039_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::const_reference obj = ((const vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*) G__getstructoffset())->operator[]((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1039_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >;
     } else {
       p = new((void*) gvp) vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1039_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::size_type) G__int(libp->para[0]), *(vector<long double,allocator<long double> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::size_type) G__int(libp->para[0]), *(vector<long double,allocator<long double> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1039_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >(*(vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >(*(vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1039_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >(*((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >(*((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1039_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >& obj = ((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*) G__getstructoffset())->operator=(*(vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1039_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*) G__getstructoffset())->reserve((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1039_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<long double,allocator<long double> >& obj = ((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1039_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<long double,allocator<long double> >& obj = ((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1039_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*) G__getstructoffset())->push_back(*(vector<long double,allocator<long double> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1039_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*) G__getstructoffset())->swap(*(vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1039_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::iterator* pobj;
         vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::iterator xobj = ((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*) G__getstructoffset())->insert(*((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::iterator*) G__int(libp->para[0])), *(vector<long double,allocator<long double> >*) libp->para[1].ref);
         pobj = new vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1039_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*) G__getstructoffset())->insert(*((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1039_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*) G__getstructoffset())->insert(*((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::iterator*) G__int(libp->para[0])), (vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::size_type) G__int(libp->para[1])
, *(vector<long double,allocator<long double> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1039_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1039_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*) G__getstructoffset())->erase(*((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1039_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*) G__getstructoffset())->erase(*((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1039_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > > G__TvectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR;
static int G__HAL_dict_1039_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*) (soff+(sizeof(vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >)*i)))->~G__TvectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*) (soff))->~G__TvectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > > */
static int G__HAL_dict_1046_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::reference obj = ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->at((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1046_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::const_reference obj = ((const vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->at((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1046_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator* pobj;
         vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator xobj = ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1046_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator* pobj;
         vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator xobj = ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1046_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::reverse_iterator* pobj;
         vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::reverse_iterator xobj = ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1046_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::reverse_iterator* pobj;
         vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::reverse_iterator xobj = ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1046_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1046_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1046_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->resize((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1046_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->resize((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type) G__int(libp->para[0]), *((vector<long long,allocator<long long> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1046_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1046_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1046_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::reference obj = ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->operator[]((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1046_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::const_reference obj = ((const vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->operator[]((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1046_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >;
     } else {
       p = new((void*) gvp) vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1046_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type) G__int(libp->para[0]), *(vector<long long,allocator<long long> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type) G__int(libp->para[0]), *(vector<long long,allocator<long long> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1046_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >(*(vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >(*(vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1046_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >(*((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >(*((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1046_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >& obj = ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->operator=(*(vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1046_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->reserve((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1046_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<long long,allocator<long long> >& obj = ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1046_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<long long,allocator<long long> >& obj = ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1046_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->push_back(*(vector<long long,allocator<long long> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1046_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->swap(*(vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1046_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator* pobj;
         vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator xobj = ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->insert(*((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator*) G__int(libp->para[0])), *(vector<long long,allocator<long long> >*) libp->para[1].ref);
         pobj = new vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1046_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->insert(*((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1046_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->insert(*((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator*) G__int(libp->para[0])), (vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type) G__int(libp->para[1])
, *(vector<long long,allocator<long long> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1046_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1046_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->erase(*((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1046_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->erase(*((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1046_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > > G__TvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR;
static int G__HAL_dict_1046_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) (soff+(sizeof(vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >)*i)))->~G__TvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*) (soff))->~G__TvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > > */
static int G__HAL_dict_1053_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::reference obj = ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->at((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1053_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::const_reference obj = ((const vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->at((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1053_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator* pobj;
         vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator xobj = ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1053_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator* pobj;
         vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator xobj = ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1053_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::reverse_iterator* pobj;
         vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::reverse_iterator xobj = ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1053_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::reverse_iterator* pobj;
         vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::reverse_iterator xobj = ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1053_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1053_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1053_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->resize((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1053_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->resize((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type) G__int(libp->para[0]), *((vector<unsigned long long,allocator<unsigned long long> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1053_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1053_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1053_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::reference obj = ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->operator[]((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1053_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::const_reference obj = ((const vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->operator[]((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1053_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >;
     } else {
       p = new((void*) gvp) vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1053_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type) G__int(libp->para[0]), *(vector<unsigned long long,allocator<unsigned long long> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type) G__int(libp->para[0]), *(vector<unsigned long long,allocator<unsigned long long> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1053_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >(*(vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >(*(vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1053_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >(*((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >(*((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1053_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >& obj = ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->operator=(*(vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1053_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->reserve((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1053_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned long long,allocator<unsigned long long> >& obj = ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1053_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<unsigned long long,allocator<unsigned long long> >& obj = ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1053_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->push_back(*(vector<unsigned long long,allocator<unsigned long long> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1053_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->swap(*(vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1053_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator* pobj;
         vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator xobj = ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->insert(*((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator*) G__int(libp->para[0])), *(vector<unsigned long long,allocator<unsigned long long> >*) libp->para[1].ref);
         pobj = new vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1053_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->insert(*((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1053_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->insert(*((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator*) G__int(libp->para[0])), (vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type) G__int(libp->para[1])
, *(vector<unsigned long long,allocator<unsigned long long> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1053_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1053_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->erase(*((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1053_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->erase(*((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1053_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > > G__TvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR;
static int G__HAL_dict_1053_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) (soff+(sizeof(vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >)*i)))->~G__TvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*) (soff))->~G__TvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::AnalysisTreeReader::BranchManager */
static int G__HAL_dict_1074_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::AnalysisTreeReader::BranchManager* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HAL::AnalysisTreeReader::BranchManager((HAL::AnalysisTreeReader*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HAL::AnalysisTreeReader::BranchManager((HAL::AnalysisTreeReader*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HAL::AnalysisTreeReader::BranchManager[n];
       } else {
         p = new((void*) gvp) HAL::AnalysisTreeReader::BranchManager[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HAL::AnalysisTreeReader::BranchManager;
       } else {
         p = new((void*) gvp) HAL::AnalysisTreeReader::BranchManager;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLBranchManager));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1074_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((HAL::AnalysisTreeReader::BranchManager*) G__getstructoffset())->GetName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1074_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((HAL::AnalysisTreeReader::BranchManager*) G__getstructoffset())->GetFullType();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1074_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((HAL::AnalysisTreeReader::BranchManager*) G__getstructoffset())->GetScalarType();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1074_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HAL::AnalysisTreeReader::BranchManager*) G__getstructoffset())->IsScalar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1074_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HAL::AnalysisTreeReader::BranchManager*) G__getstructoffset())->IsCArray1D());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1074_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HAL::AnalysisTreeReader::BranchManager*) G__getstructoffset())->IsCArray2D());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1074_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HAL::AnalysisTreeReader::BranchManager*) G__getstructoffset())->IsVec1D());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1074_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HAL::AnalysisTreeReader::BranchManager*) G__getstructoffset())->IsVec2D());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1074_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HAL::AnalysisTreeReader::BranchManager*) G__getstructoffset())->Create(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1074_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisTreeReader::BranchManager*) G__getstructoffset())->SetEntry((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1074_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HAL::AnalysisTreeReader::BranchManager*) G__getstructoffset())->GetStorageType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1074_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HAL::AnalysisTreeReader::BranchManager*) G__getstructoffset())->GetStorageIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1074_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::AnalysisTreeReader::BranchManager* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::AnalysisTreeReader::BranchManager(*(HAL::AnalysisTreeReader::BranchManager*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLBranchManager));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::AnalysisTreeReader::BranchManager G__THALcLcLAnalysisTreeReadercLcLBranchManager;
static int G__HAL_dict_1074_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::AnalysisTreeReader::BranchManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::AnalysisTreeReader::BranchManager*) (soff+(sizeof(HAL::AnalysisTreeReader::BranchManager)*i)))->~G__THALcLcLAnalysisTreeReadercLcLBranchManager();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::AnalysisTreeReader::BranchManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::AnalysisTreeReader::BranchManager*) (soff))->~G__THALcLcLAnalysisTreeReadercLcLBranchManager();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1074_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::AnalysisTreeReader::BranchManager* dest = (HAL::AnalysisTreeReader::BranchManager*) G__getstructoffset();
   *dest = *(HAL::AnalysisTreeReader::BranchManager*) libp->para[0].ref;
   const HAL::AnalysisTreeReader::BranchManager& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::internal */
static int G__HAL_dict_1079_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) HAL::internal::determineAccessProtocol((HAL::AnalysisData*) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, *(TString*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::internal::ImportTLVAlgo */
// automatic destructor
typedef HAL::internal::ImportTLVAlgo G__THALcLcLinternalcLcLImportTLVAlgo;
static int G__HAL_dict_1080_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::internal::ImportTLVAlgo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::internal::ImportTLVAlgo*) (soff+(sizeof(HAL::internal::ImportTLVAlgo)*i)))->~G__THALcLcLinternalcLcLImportTLVAlgo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::internal::ImportTLVAlgo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::internal::ImportTLVAlgo*) (soff))->~G__THALcLcLinternalcLcLImportTLVAlgo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1080_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::internal::ImportTLVAlgo* dest = (HAL::internal::ImportTLVAlgo*) G__getstructoffset();
   *dest = *(HAL::internal::ImportTLVAlgo*) libp->para[0].ref;
   const HAL::internal::ImportTLVAlgo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::internal::NthElementAlgo */
static int G__HAL_dict_1081_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((HAL::internal::NthElementAlgo*) G__getstructoffset())->SortTag();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1081_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HAL::internal::NthElementAlgo*) G__getstructoffset())->operator()((long long) G__Longlong(libp->para[0]), (long long) G__Longlong(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1081_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::internal::NthElementAlgo*) G__getstructoffset())->Sort(*(vector<long long>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::internal::NthElementAlgo G__THALcLcLinternalcLcLNthElementAlgo;
static int G__HAL_dict_1081_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::internal::NthElementAlgo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::internal::NthElementAlgo*) (soff+(sizeof(HAL::internal::NthElementAlgo)*i)))->~G__THALcLcLinternalcLcLNthElementAlgo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::internal::NthElementAlgo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::internal::NthElementAlgo*) (soff))->~G__THALcLcLinternalcLcLNthElementAlgo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1081_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::internal::NthElementAlgo* dest = (HAL::internal::NthElementAlgo*) G__getstructoffset();
   *dest = *(HAL::internal::NthElementAlgo*) libp->para[0].ref;
   const HAL::internal::NthElementAlgo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::internal::FilterTLVAlgo */
static int G__HAL_dict_1082_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HAL::internal::FilterTLVAlgo*) G__getstructoffset())->FilterPredicate((TLorentzVector*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::internal::FilterTLVAlgo G__THALcLcLinternalcLcLFilterTLVAlgo;
static int G__HAL_dict_1082_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::internal::FilterTLVAlgo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::internal::FilterTLVAlgo*) (soff+(sizeof(HAL::internal::FilterTLVAlgo)*i)))->~G__THALcLcLinternalcLcLFilterTLVAlgo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::internal::FilterTLVAlgo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::internal::FilterTLVAlgo*) (soff))->~G__THALcLcLinternalcLcLFilterTLVAlgo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1082_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::internal::FilterTLVAlgo* dest = (HAL::internal::FilterTLVAlgo*) G__getstructoffset();
   *dest = *(HAL::internal::FilterTLVAlgo*) libp->para[0].ref;
   const HAL::internal::FilterTLVAlgo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::internal::ParticlesTLVCut */
static int G__HAL_dict_1083_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HAL::internal::ParticlesTLVCut*) G__getstructoffset())->CutPredicate((TLorentzVector*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::internal::ParticlesTLVCut G__THALcLcLinternalcLcLParticlesTLVCut;
static int G__HAL_dict_1083_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::internal::ParticlesTLVCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::internal::ParticlesTLVCut*) (soff+(sizeof(HAL::internal::ParticlesTLVCut)*i)))->~G__THALcLcLinternalcLcLParticlesTLVCut();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::internal::ParticlesTLVCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::internal::ParticlesTLVCut*) (soff))->~G__THALcLcLinternalcLcLParticlesTLVCut();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1083_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::internal::ParticlesTLVCut* dest = (HAL::internal::ParticlesTLVCut*) G__getstructoffset();
   *dest = *(HAL::internal::ParticlesTLVCut*) libp->para[0].ref;
   const HAL::internal::ParticlesTLVCut& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::internal::SingleParticleTLVStore */
// automatic destructor
typedef HAL::internal::SingleParticleTLVStore G__THALcLcLinternalcLcLSingleParticleTLVStore;
static int G__HAL_dict_1084_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::internal::SingleParticleTLVStore*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::internal::SingleParticleTLVStore*) (soff+(sizeof(HAL::internal::SingleParticleTLVStore)*i)))->~G__THALcLcLinternalcLcLSingleParticleTLVStore();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::internal::SingleParticleTLVStore*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::internal::SingleParticleTLVStore*) (soff))->~G__THALcLcLinternalcLcLSingleParticleTLVStore();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1084_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::internal::SingleParticleTLVStore* dest = (HAL::internal::SingleParticleTLVStore*) G__getstructoffset();
   *dest = *(HAL::internal::SingleParticleTLVStore*) libp->para[0].ref;
   const HAL::internal::SingleParticleTLVStore& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::internal::ParticlesTLVStore */
// automatic destructor
typedef HAL::internal::ParticlesTLVStore G__THALcLcLinternalcLcLParticlesTLVStore;
static int G__HAL_dict_1085_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::internal::ParticlesTLVStore*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::internal::ParticlesTLVStore*) (soff+(sizeof(HAL::internal::ParticlesTLVStore)*i)))->~G__THALcLcLinternalcLcLParticlesTLVStore();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::internal::ParticlesTLVStore*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::internal::ParticlesTLVStore*) (soff))->~G__THALcLcLinternalcLcLParticlesTLVStore();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1085_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::internal::ParticlesTLVStore* dest = (HAL::internal::ParticlesTLVStore*) G__getstructoffset();
   *dest = *(HAL::internal::ParticlesTLVStore*) libp->para[0].ref;
   const HAL::internal::ParticlesTLVStore& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::IA0000 */
static int G__HAL_dict_1086_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::IA0000* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::IA0000(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) HAL::IA0000(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0000));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1086_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::IA0000* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::IA0000(*(HAL::IA0000*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0000));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::IA0000 G__THALcLcLIA0000;
static int G__HAL_dict_1086_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::IA0000*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::IA0000*) (soff+(sizeof(HAL::IA0000)*i)))->~G__THALcLcLIA0000();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::IA0000*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::IA0000*) (soff))->~G__THALcLcLIA0000();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1086_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::IA0000* dest = (HAL::IA0000*) G__getstructoffset();
   *dest = *(HAL::IA0000*) libp->para[0].ref;
   const HAL::IA0000& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::IA0001 */
static int G__HAL_dict_1087_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::IA0001* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::IA0001(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) HAL::IA0001(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0001));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1087_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::IA0001* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::IA0001(*(HAL::IA0001*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0001));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::IA0001 G__THALcLcLIA0001;
static int G__HAL_dict_1087_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::IA0001*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::IA0001*) (soff+(sizeof(HAL::IA0001)*i)))->~G__THALcLcLIA0001();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::IA0001*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::IA0001*) (soff))->~G__THALcLcLIA0001();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1087_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::IA0001* dest = (HAL::IA0001*) G__getstructoffset();
   *dest = *(HAL::IA0001*) libp->para[0].ref;
   const HAL::IA0001& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::IA0002 */
static int G__HAL_dict_1088_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::IA0002* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::IA0002(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (unsigned int) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) HAL::IA0002(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (unsigned int) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0002));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1088_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::IA0002* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::IA0002(*(HAL::IA0002*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0002));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::IA0002 G__THALcLcLIA0002;
static int G__HAL_dict_1088_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::IA0002*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::IA0002*) (soff+(sizeof(HAL::IA0002)*i)))->~G__THALcLcLIA0002();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::IA0002*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::IA0002*) (soff))->~G__THALcLcLIA0002();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1088_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::IA0002* dest = (HAL::IA0002*) G__getstructoffset();
   *dest = *(HAL::IA0002*) libp->para[0].ref;
   const HAL::IA0002& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::IA0010 */
static int G__HAL_dict_1089_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::IA0010* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::IA0010(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) HAL::IA0010(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0010));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1089_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::IA0010* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::IA0010(*(HAL::IA0010*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0010));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::IA0010 G__THALcLcLIA0010;
static int G__HAL_dict_1089_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::IA0010*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::IA0010*) (soff+(sizeof(HAL::IA0010)*i)))->~G__THALcLcLIA0010();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::IA0010*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::IA0010*) (soff))->~G__THALcLcLIA0010();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1089_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::IA0010* dest = (HAL::IA0010*) G__getstructoffset();
   *dest = *(HAL::IA0010*) libp->para[0].ref;
   const HAL::IA0010& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::IA0011 */
static int G__HAL_dict_1090_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::IA0011* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::IA0011(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) HAL::IA0011(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0011));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1090_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::IA0011* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::IA0011(*(HAL::IA0011*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0011));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::IA0011 G__THALcLcLIA0011;
static int G__HAL_dict_1090_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::IA0011*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::IA0011*) (soff+(sizeof(HAL::IA0011)*i)))->~G__THALcLcLIA0011();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::IA0011*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::IA0011*) (soff))->~G__THALcLcLIA0011();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1090_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::IA0011* dest = (HAL::IA0011*) G__getstructoffset();
   *dest = *(HAL::IA0011*) libp->para[0].ref;
   const HAL::IA0011& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::IA0012 */
static int G__HAL_dict_1091_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::IA0012* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::IA0012(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (unsigned int) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) HAL::IA0012(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (unsigned int) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0012));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1091_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::IA0012* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::IA0012(*(HAL::IA0012*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0012));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::IA0012 G__THALcLcLIA0012;
static int G__HAL_dict_1091_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::IA0012*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::IA0012*) (soff+(sizeof(HAL::IA0012)*i)))->~G__THALcLcLIA0012();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::IA0012*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::IA0012*) (soff))->~G__THALcLcLIA0012();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1091_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::IA0012* dest = (HAL::IA0012*) G__getstructoffset();
   *dest = *(HAL::IA0012*) libp->para[0].ref;
   const HAL::IA0012& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::IA0020 */
static int G__HAL_dict_1092_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::IA0020* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::IA0020(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) HAL::IA0020(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0020));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1092_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::IA0020* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::IA0020(*(HAL::IA0020*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0020));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::IA0020 G__THALcLcLIA0020;
static int G__HAL_dict_1092_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::IA0020*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::IA0020*) (soff+(sizeof(HAL::IA0020)*i)))->~G__THALcLcLIA0020();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::IA0020*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::IA0020*) (soff))->~G__THALcLcLIA0020();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1092_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::IA0020* dest = (HAL::IA0020*) G__getstructoffset();
   *dest = *(HAL::IA0020*) libp->para[0].ref;
   const HAL::IA0020& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::IA0021 */
static int G__HAL_dict_1093_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::IA0021* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::IA0021(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) HAL::IA0021(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0021));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1093_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::IA0021* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::IA0021(*(HAL::IA0021*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0021));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::IA0021 G__THALcLcLIA0021;
static int G__HAL_dict_1093_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::IA0021*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::IA0021*) (soff+(sizeof(HAL::IA0021)*i)))->~G__THALcLcLIA0021();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::IA0021*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::IA0021*) (soff))->~G__THALcLcLIA0021();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1093_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::IA0021* dest = (HAL::IA0021*) G__getstructoffset();
   *dest = *(HAL::IA0021*) libp->para[0].ref;
   const HAL::IA0021& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::IA0022 */
static int G__HAL_dict_1094_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::IA0022* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::IA0022(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (unsigned int) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) HAL::IA0022(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (unsigned int) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0022));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1094_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::IA0022* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::IA0022(*(HAL::IA0022*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0022));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::IA0022 G__THALcLcLIA0022;
static int G__HAL_dict_1094_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::IA0022*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::IA0022*) (soff+(sizeof(HAL::IA0022)*i)))->~G__THALcLcLIA0022();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::IA0022*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::IA0022*) (soff))->~G__THALcLcLIA0022();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1094_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::IA0022* dest = (HAL::IA0022*) G__getstructoffset();
   *dest = *(HAL::IA0022*) libp->para[0].ref;
   const HAL::IA0022& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::RA0000 */
static int G__HAL_dict_1095_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::RA0000* p = NULL;
   const int imax = 6, dmax = 8, umax = 50;
   int objsize, type, i, icnt = 0, dcnt = 0, ucnt = 0;
   G__value *pval;
   G__int64 lval[imax] = {0};
   double dval[dmax] = {0};
   union { G__int64 lval; double dval; } u[umax] = {{0}};
   lval[icnt] = G__getstructoffset(); icnt++; // this pointer
   for (i = 0; i < libp->paran; i++) {
      type = G__value_get_type(&libp->para[i]);
      pval = &libp->para[i];
      if (isupper(type))
         objsize = G__LONGALLOC;
      else
         objsize = G__sizeof(pval);
      switch (type) {
         case 'c': case 'b': case 's': case 'r': objsize = sizeof(int); break;
         case 'f': objsize = sizeof(double); break;
      }
#ifdef G__VAARG_PASS_BY_REFERENCE
      if (objsize > G__VAARG_PASS_BY_REFERENCE) {
         if (pval->ref > 0x1000) {
            if (icnt < imax) {
               lval[icnt] = pval->ref; icnt++;
            } else {
               u[ucnt].lval = pval->ref; ucnt++;
            }
         } else {
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            }
         }
         type = 'z';
      }
#endif
      switch (type) {
         case 'n': case 'm':
            if (icnt < imax) {
               lval[icnt] = (G__int64)G__Longlong(*pval); icnt++;
            } else {
               u[ucnt].lval = (G__int64)G__Longlong(*pval); ucnt++;
            } break;
         case 'f': case 'd':
            if (dcnt < dmax) {
               dval[dcnt] = G__double(*pval); dcnt++;
            } else {
               u[ucnt].dval = G__double(*pval); ucnt++;
            } break;
         case 'z': break;
         case 'u':
            if (objsize >= 16) {
               memcpy(&u[ucnt].lval, (void*)pval->obj.i, objsize);
               ucnt += objsize/8;
               break;
            }
            // objsize < 16 -> fall through
         case 'g': case 'c': case 'b': case 'r': case 's': case 'h': case 'i':
         case 'k': case 'l':
         default:
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            } break;
      }
      if (ucnt >= 50) printf("HAL::RA0000: more than 56 var args\n");
   }
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::RA0000(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (long long) G__Longlong(libp->para[2]), dval[0], dval[1], dval[2], dval[3], dval[4], dval[5], dval[6], dval[7], lval[3], lval[4], lval[5], u[0].lval, u[1].lval, u[2].lval, u[3].lval, u[4].lval, u[5].lval, u[6].lval, u[7].lval, u[8].lval, u[9].lval, u[10].lval, u[11].lval, u[12].lval, u[13].lval, u[14].lval, u[15].lval, u[16].lval, u[17].lval, u[18].lval, u[19].lval, u[20].lval, u[21].lval, u[22].lval, u[23].lval, u[24].lval, u[25].lval, u[26].lval, u[27].lval, u[28].lval, u[29].lval, u[30].lval, u[31].lval, u[32].lval, u[33].lval, u[34].lval, u[35].lval, u[36].lval, u[37].lval, u[38].lval, u[39].lval, u[40].lval, u[41].lval, u[42].lval, u[43].lval, u[44].lval, u[45].lval, u[46].lval, u[47].lval, u[48].lval, u[49].lval);
   } else {
     p = new((void*) gvp) HAL::RA0000(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (long long) G__Longlong(libp->para[2]), dval[0], dval[1], dval[2], dval[3], dval[4], dval[5], dval[6], dval[7], u[0].lval, u[1].lval, u[2].lval, u[3].lval, u[4].lval, u[5].lval, u[6].lval, u[7].lval, u[8].lval, u[9].lval, u[10].lval, u[11].lval, u[12].lval, u[13].lval, u[14].lval, u[15].lval, u[16].lval, u[17].lval, u[18].lval, u[19].lval, u[20].lval, u[21].lval, u[22].lval, u[23].lval, u[24].lval, u[25].lval, u[26].lval, u[27].lval, u[28].lval, u[29].lval, u[30].lval, u[31].lval, u[32].lval, u[33].lval, u[34].lval, u[35].lval, u[36].lval, u[37].lval, u[38].lval, u[39].lval, u[40].lval, u[41].lval, u[42].lval, u[43].lval, u[44].lval, u[45].lval, u[46].lval, u[47].lval, u[48].lval, u[49].lval);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLRA0000));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1095_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::RA0000* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::RA0000(*(HAL::RA0000*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLRA0000));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::RA0000 G__THALcLcLRA0000;
static int G__HAL_dict_1095_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::RA0000*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::RA0000*) (soff+(sizeof(HAL::RA0000)*i)))->~G__THALcLcLRA0000();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::RA0000*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::RA0000*) (soff))->~G__THALcLcLRA0000();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::FA0000 */
static int G__HAL_dict_1096_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::FA0000* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::FA0000(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (unsigned int) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) HAL::FA0000(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (unsigned int) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0000));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1096_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::FA0000* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::FA0000(*(HAL::FA0000*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0000));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::FA0000 G__THALcLcLFA0000;
static int G__HAL_dict_1096_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::FA0000*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::FA0000*) (soff+(sizeof(HAL::FA0000)*i)))->~G__THALcLcLFA0000();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::FA0000*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::FA0000*) (soff))->~G__THALcLcLFA0000();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1096_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::FA0000* dest = (HAL::FA0000*) G__getstructoffset();
   *dest = *(HAL::FA0000*) libp->para[0].ref;
   const HAL::FA0000& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::FA0100 */
static int G__HAL_dict_1097_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::FA0100* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::FA0100(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (double) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) HAL::FA0100(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (double) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0100));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1097_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::FA0100* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::FA0100(*(HAL::FA0100*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0100));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::FA0100 G__THALcLcLFA0100;
static int G__HAL_dict_1097_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::FA0100*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::FA0100*) (soff+(sizeof(HAL::FA0100)*i)))->~G__THALcLcLFA0100();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::FA0100*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::FA0100*) (soff))->~G__THALcLcLFA0100();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1097_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::FA0100* dest = (HAL::FA0100*) G__getstructoffset();
   *dest = *(HAL::FA0100*) libp->para[0].ref;
   const HAL::FA0100& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::FA0101 */
static int G__HAL_dict_1098_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::FA0101* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::FA0101(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (double) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) HAL::FA0101(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (double) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0101));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1098_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::FA0101* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::FA0101(*(HAL::FA0101*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0101));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::FA0101 G__THALcLcLFA0101;
static int G__HAL_dict_1098_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::FA0101*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::FA0101*) (soff+(sizeof(HAL::FA0101)*i)))->~G__THALcLcLFA0101();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::FA0101*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::FA0101*) (soff))->~G__THALcLcLFA0101();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1098_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::FA0101* dest = (HAL::FA0101*) G__getstructoffset();
   *dest = *(HAL::FA0101*) libp->para[0].ref;
   const HAL::FA0101& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::FA0102 */
static int G__HAL_dict_1099_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::FA0102* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::FA0102(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (double) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) HAL::FA0102(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (double) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0102));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1099_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::FA0102* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::FA0102(*(HAL::FA0102*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0102));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::FA0102 G__THALcLcLFA0102;
static int G__HAL_dict_1099_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::FA0102*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::FA0102*) (soff+(sizeof(HAL::FA0102)*i)))->~G__THALcLcLFA0102();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::FA0102*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::FA0102*) (soff))->~G__THALcLcLFA0102();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1099_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::FA0102* dest = (HAL::FA0102*) G__getstructoffset();
   *dest = *(HAL::FA0102*) libp->para[0].ref;
   const HAL::FA0102& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::FA0103 */
static int G__HAL_dict_1100_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::FA0103* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::FA0103(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (double) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) HAL::FA0103(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (double) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0103));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1100_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::FA0103* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::FA0103(*(HAL::FA0103*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0103));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::FA0103 G__THALcLcLFA0103;
static int G__HAL_dict_1100_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::FA0103*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::FA0103*) (soff+(sizeof(HAL::FA0103)*i)))->~G__THALcLcLFA0103();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::FA0103*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::FA0103*) (soff))->~G__THALcLcLFA0103();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1100_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::FA0103* dest = (HAL::FA0103*) G__getstructoffset();
   *dest = *(HAL::FA0103*) libp->para[0].ref;
   const HAL::FA0103& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::FA0104 */
static int G__HAL_dict_1101_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::FA0104* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::FA0104(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (double) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) HAL::FA0104(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (double) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0104));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1101_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::FA0104* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::FA0104(*(HAL::FA0104*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0104));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::FA0104 G__THALcLcLFA0104;
static int G__HAL_dict_1101_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::FA0104*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::FA0104*) (soff+(sizeof(HAL::FA0104)*i)))->~G__THALcLcLFA0104();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::FA0104*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::FA0104*) (soff))->~G__THALcLcLFA0104();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1101_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::FA0104* dest = (HAL::FA0104*) G__getstructoffset();
   *dest = *(HAL::FA0104*) libp->para[0].ref;
   const HAL::FA0104& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::FA0110 */
static int G__HAL_dict_1102_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::FA0110* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::FA0110(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (double) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) HAL::FA0110(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (double) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0110));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1102_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::FA0110* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::FA0110(*(HAL::FA0110*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0110));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::FA0110 G__THALcLcLFA0110;
static int G__HAL_dict_1102_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::FA0110*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::FA0110*) (soff+(sizeof(HAL::FA0110)*i)))->~G__THALcLcLFA0110();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::FA0110*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::FA0110*) (soff))->~G__THALcLcLFA0110();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1102_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::FA0110* dest = (HAL::FA0110*) G__getstructoffset();
   *dest = *(HAL::FA0110*) libp->para[0].ref;
   const HAL::FA0110& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::FA0111 */
static int G__HAL_dict_1103_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::FA0111* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::FA0111(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (double) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) HAL::FA0111(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (double) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0111));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1103_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::FA0111* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::FA0111(*(HAL::FA0111*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0111));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::FA0111 G__THALcLcLFA0111;
static int G__HAL_dict_1103_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::FA0111*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::FA0111*) (soff+(sizeof(HAL::FA0111)*i)))->~G__THALcLcLFA0111();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::FA0111*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::FA0111*) (soff))->~G__THALcLcLFA0111();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1103_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::FA0111* dest = (HAL::FA0111*) G__getstructoffset();
   *dest = *(HAL::FA0111*) libp->para[0].ref;
   const HAL::FA0111& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::FA0112 */
static int G__HAL_dict_1104_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::FA0112* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::FA0112(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (double) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) HAL::FA0112(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (double) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0112));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1104_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::FA0112* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::FA0112(*(HAL::FA0112*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0112));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::FA0112 G__THALcLcLFA0112;
static int G__HAL_dict_1104_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::FA0112*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::FA0112*) (soff+(sizeof(HAL::FA0112)*i)))->~G__THALcLcLFA0112();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::FA0112*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::FA0112*) (soff))->~G__THALcLcLFA0112();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1104_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::FA0112* dest = (HAL::FA0112*) G__getstructoffset();
   *dest = *(HAL::FA0112*) libp->para[0].ref;
   const HAL::FA0112& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::FA0113 */
static int G__HAL_dict_1105_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::FA0113* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::FA0113(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (double) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) HAL::FA0113(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (double) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0113));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1105_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::FA0113* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::FA0113(*(HAL::FA0113*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0113));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::FA0113 G__THALcLcLFA0113;
static int G__HAL_dict_1105_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::FA0113*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::FA0113*) (soff+(sizeof(HAL::FA0113)*i)))->~G__THALcLcLFA0113();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::FA0113*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::FA0113*) (soff))->~G__THALcLcLFA0113();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1105_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::FA0113* dest = (HAL::FA0113*) G__getstructoffset();
   *dest = *(HAL::FA0113*) libp->para[0].ref;
   const HAL::FA0113& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::FA0114 */
static int G__HAL_dict_1106_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::FA0114* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::FA0114(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (double) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) HAL::FA0114(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (double) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0114));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1106_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::FA0114* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::FA0114(*(HAL::FA0114*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0114));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::FA0114 G__THALcLcLFA0114;
static int G__HAL_dict_1106_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::FA0114*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::FA0114*) (soff+(sizeof(HAL::FA0114)*i)))->~G__THALcLcLFA0114();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::FA0114*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::FA0114*) (soff))->~G__THALcLcLFA0114();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1106_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::FA0114* dest = (HAL::FA0114*) G__getstructoffset();
   *dest = *(HAL::FA0114*) libp->para[0].ref;
   const HAL::FA0114& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::FA0120 */
static int G__HAL_dict_1107_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::FA0120* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::FA0120(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
   } else {
     p = new((void*) gvp) HAL::FA0120(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0120));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1107_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::FA0120* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::FA0120(*(HAL::FA0120*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0120));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::FA0120 G__THALcLcLFA0120;
static int G__HAL_dict_1107_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::FA0120*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::FA0120*) (soff+(sizeof(HAL::FA0120)*i)))->~G__THALcLcLFA0120();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::FA0120*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::FA0120*) (soff))->~G__THALcLcLFA0120();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1107_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::FA0120* dest = (HAL::FA0120*) G__getstructoffset();
   *dest = *(HAL::FA0120*) libp->para[0].ref;
   const HAL::FA0120& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::FA0121 */
static int G__HAL_dict_1108_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::FA0121* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::FA0121(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
   } else {
     p = new((void*) gvp) HAL::FA0121(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0121));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1108_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::FA0121* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::FA0121(*(HAL::FA0121*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0121));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::FA0121 G__THALcLcLFA0121;
static int G__HAL_dict_1108_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::FA0121*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::FA0121*) (soff+(sizeof(HAL::FA0121)*i)))->~G__THALcLcLFA0121();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::FA0121*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::FA0121*) (soff))->~G__THALcLcLFA0121();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1108_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::FA0121* dest = (HAL::FA0121*) G__getstructoffset();
   *dest = *(HAL::FA0121*) libp->para[0].ref;
   const HAL::FA0121& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::FA0122 */
static int G__HAL_dict_1109_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::FA0122* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::FA0122(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
   } else {
     p = new((void*) gvp) HAL::FA0122(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0122));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1109_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::FA0122* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::FA0122(*(HAL::FA0122*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0122));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::FA0122 G__THALcLcLFA0122;
static int G__HAL_dict_1109_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::FA0122*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::FA0122*) (soff+(sizeof(HAL::FA0122)*i)))->~G__THALcLcLFA0122();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::FA0122*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::FA0122*) (soff))->~G__THALcLcLFA0122();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1109_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::FA0122* dest = (HAL::FA0122*) G__getstructoffset();
   *dest = *(HAL::FA0122*) libp->para[0].ref;
   const HAL::FA0122& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::FA0123 */
static int G__HAL_dict_1110_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::FA0123* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::FA0123(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
   } else {
     p = new((void*) gvp) HAL::FA0123(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0123));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1110_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::FA0123* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::FA0123(*(HAL::FA0123*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0123));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::FA0123 G__THALcLcLFA0123;
static int G__HAL_dict_1110_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::FA0123*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::FA0123*) (soff+(sizeof(HAL::FA0123)*i)))->~G__THALcLcLFA0123();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::FA0123*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::FA0123*) (soff))->~G__THALcLcLFA0123();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1110_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::FA0123* dest = (HAL::FA0123*) G__getstructoffset();
   *dest = *(HAL::FA0123*) libp->para[0].ref;
   const HAL::FA0123& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::FA0124 */
static int G__HAL_dict_1111_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::FA0124* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::FA0124(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
   } else {
     p = new((void*) gvp) HAL::FA0124(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0124));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1111_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::FA0124* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::FA0124(*(HAL::FA0124*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0124));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::FA0124 G__THALcLcLFA0124;
static int G__HAL_dict_1111_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::FA0124*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::FA0124*) (soff+(sizeof(HAL::FA0124)*i)))->~G__THALcLcLFA0124();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::FA0124*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::FA0124*) (soff))->~G__THALcLcLFA0124();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1111_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::FA0124* dest = (HAL::FA0124*) G__getstructoffset();
   *dest = *(HAL::FA0124*) libp->para[0].ref;
   const HAL::FA0124& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::CA0000 */
static int G__HAL_dict_1112_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::CA0000* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::CA0000(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (double) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) HAL::CA0000(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (double) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0000));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1112_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::CA0000* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::CA0000(*(HAL::CA0000*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0000));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::CA0000 G__THALcLcLCA0000;
static int G__HAL_dict_1112_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::CA0000*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::CA0000*) (soff+(sizeof(HAL::CA0000)*i)))->~G__THALcLcLCA0000();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::CA0000*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::CA0000*) (soff))->~G__THALcLcLCA0000();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1112_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::CA0000* dest = (HAL::CA0000*) G__getstructoffset();
   *dest = *(HAL::CA0000*) libp->para[0].ref;
   const HAL::CA0000& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::CA0003 */
static int G__HAL_dict_1113_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::CA0003* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::CA0003(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (double) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) HAL::CA0003(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (double) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0003));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1113_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::CA0003* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::CA0003(*(HAL::CA0003*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0003));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::CA0003 G__THALcLcLCA0003;
static int G__HAL_dict_1113_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::CA0003*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::CA0003*) (soff+(sizeof(HAL::CA0003)*i)))->~G__THALcLcLCA0003();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::CA0003*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::CA0003*) (soff))->~G__THALcLcLCA0003();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1113_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::CA0003* dest = (HAL::CA0003*) G__getstructoffset();
   *dest = *(HAL::CA0003*) libp->para[0].ref;
   const HAL::CA0003& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::CA0100 */
static int G__HAL_dict_1114_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::CA0100* p = NULL;
   const int imax = 6, dmax = 8, umax = 50;
   int objsize, type, i, icnt = 0, dcnt = 0, ucnt = 0;
   G__value *pval;
   G__int64 lval[imax] = {0};
   double dval[dmax] = {0};
   union { G__int64 lval; double dval; } u[umax] = {{0}};
   lval[icnt] = G__getstructoffset(); icnt++; // this pointer
   for (i = 0; i < libp->paran; i++) {
      type = G__value_get_type(&libp->para[i]);
      pval = &libp->para[i];
      if (isupper(type))
         objsize = G__LONGALLOC;
      else
         objsize = G__sizeof(pval);
      switch (type) {
         case 'c': case 'b': case 's': case 'r': objsize = sizeof(int); break;
         case 'f': objsize = sizeof(double); break;
      }
#ifdef G__VAARG_PASS_BY_REFERENCE
      if (objsize > G__VAARG_PASS_BY_REFERENCE) {
         if (pval->ref > 0x1000) {
            if (icnt < imax) {
               lval[icnt] = pval->ref; icnt++;
            } else {
               u[ucnt].lval = pval->ref; ucnt++;
            }
         } else {
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            }
         }
         type = 'z';
      }
#endif
      switch (type) {
         case 'n': case 'm':
            if (icnt < imax) {
               lval[icnt] = (G__int64)G__Longlong(*pval); icnt++;
            } else {
               u[ucnt].lval = (G__int64)G__Longlong(*pval); ucnt++;
            } break;
         case 'f': case 'd':
            if (dcnt < dmax) {
               dval[dcnt] = G__double(*pval); dcnt++;
            } else {
               u[ucnt].dval = G__double(*pval); ucnt++;
            } break;
         case 'z': break;
         case 'u':
            if (objsize >= 16) {
               memcpy(&u[ucnt].lval, (void*)pval->obj.i, objsize);
               ucnt += objsize/8;
               break;
            }
            // objsize < 16 -> fall through
         case 'g': case 'c': case 'b': case 'r': case 's': case 'h': case 'i':
         case 'k': case 'l':
         default:
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            } break;
      }
      if (ucnt >= 50) printf("HAL::CA0100: more than 56 var args\n");
   }
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::CA0100(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (long long) G__Longlong(libp->para[2]), dval[0], dval[1], dval[2], dval[3], dval[4], dval[5], dval[6], dval[7], lval[3], lval[4], lval[5], u[0].lval, u[1].lval, u[2].lval, u[3].lval, u[4].lval, u[5].lval, u[6].lval, u[7].lval, u[8].lval, u[9].lval, u[10].lval, u[11].lval, u[12].lval, u[13].lval, u[14].lval, u[15].lval, u[16].lval, u[17].lval, u[18].lval, u[19].lval, u[20].lval, u[21].lval, u[22].lval, u[23].lval, u[24].lval, u[25].lval, u[26].lval, u[27].lval, u[28].lval, u[29].lval, u[30].lval, u[31].lval, u[32].lval, u[33].lval, u[34].lval, u[35].lval, u[36].lval, u[37].lval, u[38].lval, u[39].lval, u[40].lval, u[41].lval, u[42].lval, u[43].lval, u[44].lval, u[45].lval, u[46].lval, u[47].lval, u[48].lval, u[49].lval);
   } else {
     p = new((void*) gvp) HAL::CA0100(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (long long) G__Longlong(libp->para[2]), dval[0], dval[1], dval[2], dval[3], dval[4], dval[5], dval[6], dval[7], u[0].lval, u[1].lval, u[2].lval, u[3].lval, u[4].lval, u[5].lval, u[6].lval, u[7].lval, u[8].lval, u[9].lval, u[10].lval, u[11].lval, u[12].lval, u[13].lval, u[14].lval, u[15].lval, u[16].lval, u[17].lval, u[18].lval, u[19].lval, u[20].lval, u[21].lval, u[22].lval, u[23].lval, u[24].lval, u[25].lval, u[26].lval, u[27].lval, u[28].lval, u[29].lval, u[30].lval, u[31].lval, u[32].lval, u[33].lval, u[34].lval, u[35].lval, u[36].lval, u[37].lval, u[38].lval, u[39].lval, u[40].lval, u[41].lval, u[42].lval, u[43].lval, u[44].lval, u[45].lval, u[46].lval, u[47].lval, u[48].lval, u[49].lval);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0100));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1114_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::CA0100* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::CA0100(*(HAL::CA0100*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0100));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::CA0100 G__THALcLcLCA0100;
static int G__HAL_dict_1114_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::CA0100*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::CA0100*) (soff+(sizeof(HAL::CA0100)*i)))->~G__THALcLcLCA0100();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::CA0100*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::CA0100*) (soff))->~G__THALcLcLCA0100();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::CA0101 */
static int G__HAL_dict_1115_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::CA0101* p = NULL;
   const int imax = 6, dmax = 8, umax = 50;
   int objsize, type, i, icnt = 0, dcnt = 0, ucnt = 0;
   G__value *pval;
   G__int64 lval[imax] = {0};
   double dval[dmax] = {0};
   union { G__int64 lval; double dval; } u[umax] = {{0}};
   lval[icnt] = G__getstructoffset(); icnt++; // this pointer
   for (i = 0; i < libp->paran; i++) {
      type = G__value_get_type(&libp->para[i]);
      pval = &libp->para[i];
      if (isupper(type))
         objsize = G__LONGALLOC;
      else
         objsize = G__sizeof(pval);
      switch (type) {
         case 'c': case 'b': case 's': case 'r': objsize = sizeof(int); break;
         case 'f': objsize = sizeof(double); break;
      }
#ifdef G__VAARG_PASS_BY_REFERENCE
      if (objsize > G__VAARG_PASS_BY_REFERENCE) {
         if (pval->ref > 0x1000) {
            if (icnt < imax) {
               lval[icnt] = pval->ref; icnt++;
            } else {
               u[ucnt].lval = pval->ref; ucnt++;
            }
         } else {
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            }
         }
         type = 'z';
      }
#endif
      switch (type) {
         case 'n': case 'm':
            if (icnt < imax) {
               lval[icnt] = (G__int64)G__Longlong(*pval); icnt++;
            } else {
               u[ucnt].lval = (G__int64)G__Longlong(*pval); ucnt++;
            } break;
         case 'f': case 'd':
            if (dcnt < dmax) {
               dval[dcnt] = G__double(*pval); dcnt++;
            } else {
               u[ucnt].dval = G__double(*pval); ucnt++;
            } break;
         case 'z': break;
         case 'u':
            if (objsize >= 16) {
               memcpy(&u[ucnt].lval, (void*)pval->obj.i, objsize);
               ucnt += objsize/8;
               break;
            }
            // objsize < 16 -> fall through
         case 'g': case 'c': case 'b': case 'r': case 's': case 'h': case 'i':
         case 'k': case 'l':
         default:
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            } break;
      }
      if (ucnt >= 50) printf("HAL::CA0101: more than 56 var args\n");
   }
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::CA0101(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (long long) G__Longlong(libp->para[2]), dval[0], dval[1], dval[2], dval[3], dval[4], dval[5], dval[6], dval[7], lval[3], lval[4], lval[5], u[0].lval, u[1].lval, u[2].lval, u[3].lval, u[4].lval, u[5].lval, u[6].lval, u[7].lval, u[8].lval, u[9].lval, u[10].lval, u[11].lval, u[12].lval, u[13].lval, u[14].lval, u[15].lval, u[16].lval, u[17].lval, u[18].lval, u[19].lval, u[20].lval, u[21].lval, u[22].lval, u[23].lval, u[24].lval, u[25].lval, u[26].lval, u[27].lval, u[28].lval, u[29].lval, u[30].lval, u[31].lval, u[32].lval, u[33].lval, u[34].lval, u[35].lval, u[36].lval, u[37].lval, u[38].lval, u[39].lval, u[40].lval, u[41].lval, u[42].lval, u[43].lval, u[44].lval, u[45].lval, u[46].lval, u[47].lval, u[48].lval, u[49].lval);
   } else {
     p = new((void*) gvp) HAL::CA0101(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (long long) G__Longlong(libp->para[2]), dval[0], dval[1], dval[2], dval[3], dval[4], dval[5], dval[6], dval[7], u[0].lval, u[1].lval, u[2].lval, u[3].lval, u[4].lval, u[5].lval, u[6].lval, u[7].lval, u[8].lval, u[9].lval, u[10].lval, u[11].lval, u[12].lval, u[13].lval, u[14].lval, u[15].lval, u[16].lval, u[17].lval, u[18].lval, u[19].lval, u[20].lval, u[21].lval, u[22].lval, u[23].lval, u[24].lval, u[25].lval, u[26].lval, u[27].lval, u[28].lval, u[29].lval, u[30].lval, u[31].lval, u[32].lval, u[33].lval, u[34].lval, u[35].lval, u[36].lval, u[37].lval, u[38].lval, u[39].lval, u[40].lval, u[41].lval, u[42].lval, u[43].lval, u[44].lval, u[45].lval, u[46].lval, u[47].lval, u[48].lval, u[49].lval);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0101));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1115_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::CA0101* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::CA0101(*(HAL::CA0101*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0101));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::CA0101 G__THALcLcLCA0101;
static int G__HAL_dict_1115_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::CA0101*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::CA0101*) (soff+(sizeof(HAL::CA0101)*i)))->~G__THALcLcLCA0101();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::CA0101*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::CA0101*) (soff))->~G__THALcLcLCA0101();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::EA0000 */
static int G__HAL_dict_1116_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::EA0000* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::EA0000(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3])));
   } else {
     p = new((void*) gvp) HAL::EA0000(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0000));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1116_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::EA0000* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::EA0000(*(HAL::EA0000*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0000));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::EA0000 G__THALcLcLEA0000;
static int G__HAL_dict_1116_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::EA0000*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::EA0000*) (soff+(sizeof(HAL::EA0000)*i)))->~G__THALcLcLEA0000();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::EA0000*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::EA0000*) (soff))->~G__THALcLcLEA0000();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1116_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::EA0000* dest = (HAL::EA0000*) G__getstructoffset();
   *dest = *(HAL::EA0000*) libp->para[0].ref;
   const HAL::EA0000& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::EA0001 */
static int G__HAL_dict_1117_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::EA0001* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::EA0001(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3])));
   } else {
     p = new((void*) gvp) HAL::EA0001(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0001));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1117_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::EA0001* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::EA0001(*(HAL::EA0001*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0001));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::EA0001 G__THALcLcLEA0001;
static int G__HAL_dict_1117_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::EA0001*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::EA0001*) (soff+(sizeof(HAL::EA0001)*i)))->~G__THALcLcLEA0001();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::EA0001*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::EA0001*) (soff))->~G__THALcLcLEA0001();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1117_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::EA0001* dest = (HAL::EA0001*) G__getstructoffset();
   *dest = *(HAL::EA0001*) libp->para[0].ref;
   const HAL::EA0001& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::EA0002 */
static int G__HAL_dict_1118_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::EA0002* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::EA0002(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3])));
   } else {
     p = new((void*) gvp) HAL::EA0002(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0002));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1118_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::EA0002* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::EA0002(*(HAL::EA0002*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0002));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::EA0002 G__THALcLcLEA0002;
static int G__HAL_dict_1118_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::EA0002*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::EA0002*) (soff+(sizeof(HAL::EA0002)*i)))->~G__THALcLcLEA0002();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::EA0002*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::EA0002*) (soff))->~G__THALcLcLEA0002();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1118_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::EA0002* dest = (HAL::EA0002*) G__getstructoffset();
   *dest = *(HAL::EA0002*) libp->para[0].ref;
   const HAL::EA0002& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::EA0003 */
static int G__HAL_dict_1119_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::EA0003* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::EA0003(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3])));
   } else {
     p = new((void*) gvp) HAL::EA0003(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0003));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1119_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::EA0003* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::EA0003(*(HAL::EA0003*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0003));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::EA0003 G__THALcLcLEA0003;
static int G__HAL_dict_1119_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::EA0003*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::EA0003*) (soff+(sizeof(HAL::EA0003)*i)))->~G__THALcLcLEA0003();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::EA0003*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::EA0003*) (soff))->~G__THALcLcLEA0003();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1119_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::EA0003* dest = (HAL::EA0003*) G__getstructoffset();
   *dest = *(HAL::EA0003*) libp->para[0].ref;
   const HAL::EA0003& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::EA0004 */
static int G__HAL_dict_1120_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::EA0004* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::EA0004(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3])));
   } else {
     p = new((void*) gvp) HAL::EA0004(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0004));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1120_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::EA0004* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::EA0004(*(HAL::EA0004*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0004));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::EA0004 G__THALcLcLEA0004;
static int G__HAL_dict_1120_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::EA0004*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::EA0004*) (soff+(sizeof(HAL::EA0004)*i)))->~G__THALcLcLEA0004();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::EA0004*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::EA0004*) (soff))->~G__THALcLcLEA0004();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1120_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::EA0004* dest = (HAL::EA0004*) G__getstructoffset();
   *dest = *(HAL::EA0004*) libp->para[0].ref;
   const HAL::EA0004& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::EA0010 */
static int G__HAL_dict_1121_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::EA0010* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::EA0010(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3])));
   } else {
     p = new((void*) gvp) HAL::EA0010(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0010));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1121_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::EA0010* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::EA0010(*(HAL::EA0010*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0010));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::EA0010 G__THALcLcLEA0010;
static int G__HAL_dict_1121_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::EA0010*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::EA0010*) (soff+(sizeof(HAL::EA0010)*i)))->~G__THALcLcLEA0010();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::EA0010*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::EA0010*) (soff))->~G__THALcLcLEA0010();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1121_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::EA0010* dest = (HAL::EA0010*) G__getstructoffset();
   *dest = *(HAL::EA0010*) libp->para[0].ref;
   const HAL::EA0010& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::EA0011 */
static int G__HAL_dict_1122_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::EA0011* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::EA0011(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3])));
   } else {
     p = new((void*) gvp) HAL::EA0011(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0011));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1122_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::EA0011* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::EA0011(*(HAL::EA0011*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0011));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::EA0011 G__THALcLcLEA0011;
static int G__HAL_dict_1122_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::EA0011*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::EA0011*) (soff+(sizeof(HAL::EA0011)*i)))->~G__THALcLcLEA0011();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::EA0011*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::EA0011*) (soff))->~G__THALcLcLEA0011();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1122_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::EA0011* dest = (HAL::EA0011*) G__getstructoffset();
   *dest = *(HAL::EA0011*) libp->para[0].ref;
   const HAL::EA0011& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::EA0012 */
static int G__HAL_dict_1123_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::EA0012* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::EA0012(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3])));
   } else {
     p = new((void*) gvp) HAL::EA0012(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0012));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1123_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::EA0012* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::EA0012(*(HAL::EA0012*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0012));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::EA0012 G__THALcLcLEA0012;
static int G__HAL_dict_1123_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::EA0012*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::EA0012*) (soff+(sizeof(HAL::EA0012)*i)))->~G__THALcLcLEA0012();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::EA0012*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::EA0012*) (soff))->~G__THALcLcLEA0012();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1123_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::EA0012* dest = (HAL::EA0012*) G__getstructoffset();
   *dest = *(HAL::EA0012*) libp->para[0].ref;
   const HAL::EA0012& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::EA0013 */
static int G__HAL_dict_1124_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::EA0013* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::EA0013(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3])));
   } else {
     p = new((void*) gvp) HAL::EA0013(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0013));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1124_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::EA0013* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::EA0013(*(HAL::EA0013*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0013));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::EA0013 G__THALcLcLEA0013;
static int G__HAL_dict_1124_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::EA0013*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::EA0013*) (soff+(sizeof(HAL::EA0013)*i)))->~G__THALcLcLEA0013();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::EA0013*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::EA0013*) (soff))->~G__THALcLcLEA0013();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1124_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::EA0013* dest = (HAL::EA0013*) G__getstructoffset();
   *dest = *(HAL::EA0013*) libp->para[0].ref;
   const HAL::EA0013& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::EA0014 */
static int G__HAL_dict_1125_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::EA0014* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::EA0014(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3])));
   } else {
     p = new((void*) gvp) HAL::EA0014(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0014));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1125_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::EA0014* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::EA0014(*(HAL::EA0014*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0014));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::EA0014 G__THALcLcLEA0014;
static int G__HAL_dict_1125_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::EA0014*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::EA0014*) (soff+(sizeof(HAL::EA0014)*i)))->~G__THALcLcLEA0014();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::EA0014*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::EA0014*) (soff))->~G__THALcLcLEA0014();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1125_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::EA0014* dest = (HAL::EA0014*) G__getstructoffset();
   *dest = *(HAL::EA0014*) libp->para[0].ref;
   const HAL::EA0014& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::AnalysisSelector */
static int G__HAL_dict_1130_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::AnalysisSelector* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HAL::AnalysisSelector((HAL::Algorithm*) G__int(libp->para[0]), (TTree*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HAL::AnalysisSelector((HAL::Algorithm*) G__int(libp->para[0]), (TTree*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HAL::AnalysisSelector((HAL::Algorithm*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HAL::AnalysisSelector((HAL::Algorithm*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisSelector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1130_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisSelector*) G__getstructoffset())->SetOutputFileName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1130_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisSelector*) G__getstructoffset())->SetOutputTreeName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1130_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisSelector*) G__getstructoffset())->SetOutputTreeDescription(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1130_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HAL::AnalysisSelector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1130_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HAL::AnalysisSelector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1130_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HAL::AnalysisSelector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1130_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HAL::AnalysisSelector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1130_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::AnalysisSelector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1130_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HAL::AnalysisSelector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1130_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HAL::AnalysisSelector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1130_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HAL::AnalysisSelector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1130_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HAL::AnalysisSelector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::AnalysisSelector G__THALcLcLAnalysisSelector;
static int G__HAL_dict_1130_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::AnalysisSelector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::AnalysisSelector*) (soff+(sizeof(HAL::AnalysisSelector)*i)))->~G__THALcLcLAnalysisSelector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::AnalysisSelector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::AnalysisSelector*) (soff))->~G__THALcLcLAnalysisSelector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::Analysis */
static int G__HAL_dict_1131_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::Analysis* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HAL::Analysis(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])));
     } else {
       p = new((void*) gvp) HAL::Analysis(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HAL::Analysis(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) HAL::Analysis(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HAL::Analysis(*((TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) HAL::Analysis(*((TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HAL::Analysis[n];
       } else {
         p = new((void*) gvp) HAL::Analysis[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HAL::Analysis;
       } else {
         p = new((void*) gvp) HAL::Analysis;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysis));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1131_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::Analysis*) G__getstructoffset())->AddAlgo((HAL::Algorithm*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1131_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::Analysis*) G__getstructoffset())->PrintAnalysisFlow();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1131_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::Analysis*) G__getstructoffset())->SetTreeObjectName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1131_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::Analysis*) G__getstructoffset())->SetAnalysisName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1131_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::Analysis*) G__getstructoffset())->SetAnalysisTitle(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1131_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((HAL::Analysis*) G__getstructoffset())->AddFiles(*((TString*) G__int(libp->para[0])), (Long64_t) G__Longlong(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((HAL::Analysis*) G__getstructoffset())->AddFiles(*((TString*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1131_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HAL::Analysis*) G__getstructoffset())->AddFiles((TChain*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1131_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::Analysis*) G__getstructoffset())->SetOutputFileName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1131_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::Analysis*) G__getstructoffset())->SetOutputTreeName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1131_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::Analysis*) G__getstructoffset())->SetOutputTreeDescription(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1131_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HAL::Analysis*) G__getstructoffset())->PrintTree((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HAL::Analysis*) G__getstructoffset())->PrintTree();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1131_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((HAL::Analysis*) G__getstructoffset())->GetLeafType(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1131_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((HAL::Analysis*) G__getstructoffset())->GetLeafType(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1131_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::Analysis*) G__getstructoffset())->MapBranch(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1131_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letLonglong(result7, 110, (G__int64) ((HAL::Analysis*) G__getstructoffset())->Process((Option_t*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Long64_t) G__Longlong(libp->para[2])));
      break;
   case 2:
      G__letLonglong(result7, 110, (G__int64) ((HAL::Analysis*) G__getstructoffset())->Process((Option_t*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])));
      break;
   case 1:
      G__letLonglong(result7, 110, (G__int64) ((HAL::Analysis*) G__getstructoffset())->Process((Option_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letLonglong(result7, 110, (G__int64) ((HAL::Analysis*) G__getstructoffset())->Process());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1131_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HAL::Analysis::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1131_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HAL::Analysis::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1131_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HAL::Analysis::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1131_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HAL::Analysis::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1131_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const HAL::Analysis*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1131_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::Analysis*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1131_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::Analysis*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1131_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HAL::Analysis*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1131_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HAL::Analysis::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1131_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HAL::Analysis::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1131_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HAL::Analysis::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1131_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HAL::Analysis::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1131_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::Analysis* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::Analysis(*(HAL::Analysis*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysis));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::Analysis G__THALcLcLAnalysis;
static int G__HAL_dict_1131_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::Analysis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::Analysis*) (soff+(sizeof(HAL::Analysis)*i)))->~G__THALcLcLAnalysis();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::Analysis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::Analysis*) (soff))->~G__THALcLcLAnalysis();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1131_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::Analysis* dest = (HAL::Analysis*) G__getstructoffset();
   *dest = *(HAL::Analysis*) libp->para[0].ref;
   const HAL::Analysis& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::CutOptimizer */
static int G__HAL_dict_1168_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::CutOptimizer* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HAL::CutOptimizer((TF2*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HAL::CutOptimizer((TF2*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HAL::CutOptimizer[n];
       } else {
         p = new((void*) gvp) HAL::CutOptimizer[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HAL::CutOptimizer;
       } else {
         p = new((void*) gvp) HAL::CutOptimizer;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCutOptimizer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1168_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HAL::CutOptimizer*) G__getstructoffset())->SetFitnessFunction((TF2*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HAL::CutOptimizer*) G__getstructoffset())->SetFitnessFunction();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1168_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HAL::CutOptimizer*) G__getstructoffset())->GetFitnessFunction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1168_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      G__letint(result7, 85, (long) ((HAL::CutOptimizer*) G__getstructoffset())->Optimize(
(TH1*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), *((TString*) G__int(libp->para[3]))
, (Int_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 85, (long) ((HAL::CutOptimizer*) G__getstructoffset())->Optimize((TH1*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), *((TString*) G__int(libp->para[3]))
, (Int_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) ((HAL::CutOptimizer*) G__getstructoffset())->Optimize((TH1*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), *((TString*) G__int(libp->para[3]))
, (Int_t) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) ((HAL::CutOptimizer*) G__getstructoffset())->Optimize((TH1*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), *((TString*) G__int(libp->para[3]))));
      break;
   case 3:
      G__letint(result7, 85, (long) ((HAL::CutOptimizer*) G__getstructoffset())->Optimize((TH1*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1168_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::CutOptimizer* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::CutOptimizer(*(HAL::CutOptimizer*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCutOptimizer));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::CutOptimizer G__THALcLcLCutOptimizer;
static int G__HAL_dict_1168_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::CutOptimizer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::CutOptimizer*) (soff+(sizeof(HAL::CutOptimizer)*i)))->~G__THALcLcLCutOptimizer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::CutOptimizer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::CutOptimizer*) (soff))->~G__THALcLcLCutOptimizer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1168_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::CutOptimizer* dest = (HAL::CutOptimizer*) G__getstructoffset();
   *dest = *(HAL::CutOptimizer*) libp->para[0].ref;
   const HAL::CutOptimizer& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::Integrator */
static int G__HAL_dict_1169_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::Integrator* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HAL::Integrator(*(Double_t*) G__Doubleref(&libp->para[0]));
     } else {
       p = new((void*) gvp) HAL::Integrator(*(Double_t*) G__Doubleref(&libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HAL::Integrator[n];
       } else {
         p = new((void*) gvp) HAL::Integrator[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HAL::Integrator;
       } else {
         p = new((void*) gvp) HAL::Integrator;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIntegrator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1169_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HAL::Integrator*) G__getstructoffset())->OutOfTolerance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1169_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HAL::Integrator*) G__getstructoffset())->Integrate(*(TF1*) libp->para[0].ref, *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1169_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HAL::Integrator*) G__getstructoffset())->int_helper(*(TF1*) libp->para[0].ref, *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4]), *(Double_t*) G__Doubleref(&libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1169_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::Integrator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::Integrator(*(HAL::Integrator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIntegrator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::Integrator G__THALcLcLIntegrator;
static int G__HAL_dict_1169_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::Integrator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::Integrator*) (soff+(sizeof(HAL::Integrator)*i)))->~G__THALcLcLIntegrator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::Integrator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::Integrator*) (soff))->~G__THALcLcLIntegrator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1169_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::Integrator* dest = (HAL::Integrator*) G__getstructoffset();
   *dest = *(HAL::Integrator*) libp->para[0].ref;
   const HAL::Integrator& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::InterpBase */
static int G__HAL_dict_1170_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HAL::InterpBase*) G__getstructoffset())->locate(*(Double_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1170_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HAL::InterpBase*) G__getstructoffset())->hunt(*(Double_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1170_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HAL::InterpBase*) G__getstructoffset())->Interp(*(Double_t*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1170_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HAL::InterpBase*) G__getstructoffset())->rawinterp(*(Int_t*) G__Intref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::InterpBase G__THALcLcLInterpBase;
static int G__HAL_dict_1170_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::InterpBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::InterpBase*) (soff+(sizeof(HAL::InterpBase)*i)))->~G__THALcLcLInterpBase();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::InterpBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::InterpBase*) (soff))->~G__THALcLcLInterpBase();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1170_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::InterpBase* dest = (HAL::InterpBase*) G__getstructoffset();
   *dest = *(HAL::InterpBase*) libp->para[0].ref;
   const HAL::InterpBase& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::PolyInterp */
static int G__HAL_dict_1171_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::PolyInterp* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::PolyInterp(
(Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) HAL::PolyInterp(
(Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLPolyInterp));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1171_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HAL::PolyInterp*) G__getstructoffset())->GetError());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1171_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::PolyInterp* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::PolyInterp(*(HAL::PolyInterp*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLPolyInterp));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::PolyInterp G__THALcLcLPolyInterp;
static int G__HAL_dict_1171_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::PolyInterp*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::PolyInterp*) (soff+(sizeof(HAL::PolyInterp)*i)))->~G__THALcLcLPolyInterp();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::PolyInterp*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::PolyInterp*) (soff))->~G__THALcLcLPolyInterp();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1171_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::PolyInterp* dest = (HAL::PolyInterp*) G__getstructoffset();
   *dest = *(HAL::PolyInterp*) libp->para[0].ref;
   const HAL::PolyInterp& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::Poly2DInterp */
static int G__HAL_dict_1173_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::Poly2DInterp* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HAL::Poly2DInterp(
(Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t**) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]));
   } else {
     p = new((void*) gvp) HAL::Poly2DInterp(
(Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t**) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLPoly2DInterp));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1173_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HAL::Poly2DInterp*) G__getstructoffset())->Interp(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1173_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HAL::Poly2DInterp*) G__getstructoffset())->GetX1Error());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HAL_dict_1173_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HAL::Poly2DInterp*) G__getstructoffset())->GetX2Error());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1173_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::Poly2DInterp* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::Poly2DInterp(*(HAL::Poly2DInterp*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLPoly2DInterp));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::Poly2DInterp G__THALcLcLPoly2DInterp;
static int G__HAL_dict_1173_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::Poly2DInterp*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::Poly2DInterp*) (soff+(sizeof(HAL::Poly2DInterp)*i)))->~G__THALcLcLPoly2DInterp();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::Poly2DInterp*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::Poly2DInterp*) (soff))->~G__THALcLcLPoly2DInterp();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1173_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::Poly2DInterp* dest = (HAL::Poly2DInterp*) G__getstructoffset();
   *dest = *(HAL::Poly2DInterp*) libp->para[0].ref;
   const HAL::Poly2DInterp& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HAL::PythonAlgorithm */
static int G__HAL_dict_1199_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::PythonAlgorithm* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HAL::PythonAlgorithm(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3]))
, *((TString*) G__int(libp->para[4])), (PyObject*) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) HAL::PythonAlgorithm(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3]))
, *((TString*) G__int(libp->para[4])), (PyObject*) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HAL::PythonAlgorithm(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3]))
, *((TString*) G__int(libp->para[4])));
     } else {
       p = new((void*) gvp) HAL::PythonAlgorithm(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3]))
, *((TString*) G__int(libp->para[4])));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HAL::PythonAlgorithm(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3])));
     } else {
       p = new((void*) gvp) HAL::PythonAlgorithm(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3])));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HAL::PythonAlgorithm(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])));
     } else {
       p = new((void*) gvp) HAL::PythonAlgorithm(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HAL::PythonAlgorithm(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) HAL::PythonAlgorithm(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HAL::PythonAlgorithm(*((TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) HAL::PythonAlgorithm(*((TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HAL::PythonAlgorithm[n];
       } else {
         p = new((void*) gvp) HAL::PythonAlgorithm[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HAL::PythonAlgorithm;
       } else {
         p = new((void*) gvp) HAL::PythonAlgorithm;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLPythonAlgorithm));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__HAL_dict_1199_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HAL::PythonAlgorithm* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HAL::PythonAlgorithm(*(HAL::PythonAlgorithm*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLPythonAlgorithm));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HAL::PythonAlgorithm G__THALcLcLPythonAlgorithm;
static int G__HAL_dict_1199_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HAL::PythonAlgorithm*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HAL::PythonAlgorithm*) (soff+(sizeof(HAL::PythonAlgorithm)*i)))->~G__THALcLcLPythonAlgorithm();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HAL::PythonAlgorithm*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HAL::PythonAlgorithm*) (soff))->~G__THALcLcLPythonAlgorithm();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__HAL_dict_1199_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HAL::PythonAlgorithm* dest = (HAL::PythonAlgorithm*) G__getstructoffset();
   *dest = *(HAL::PythonAlgorithm*) libp->para[0].ref;
   const HAL::PythonAlgorithm& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* HAL */

/* HAL::AnalysisData */

/* HAL::AnalysisTreeReader */

/* HAL::AnalysisTreeWriter */

/* HAL::Algorithm */

/* HAL::CutAlgorithm */

/* vector<long double,allocator<long double> > */

/* vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > > */

/* vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > > */

/* vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > > */

/* vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > > */

/* HAL::AnalysisTreeReader::BranchManager */

/* HAL::internal */

/* HAL::internal::ImportTLVAlgo */

/* HAL::internal::NthElementAlgo */

/* HAL::internal::FilterTLVAlgo */

/* HAL::internal::ParticlesTLVCut */

/* HAL::internal::SingleParticleTLVStore */

/* HAL::internal::ParticlesTLVStore */

/* HAL::IA0000 */

/* HAL::IA0001 */

/* HAL::IA0002 */

/* HAL::IA0010 */

/* HAL::IA0011 */

/* HAL::IA0012 */

/* HAL::IA0020 */

/* HAL::IA0021 */

/* HAL::IA0022 */

/* HAL::RA0000 */

/* HAL::FA0000 */

/* HAL::FA0100 */

/* HAL::FA0101 */

/* HAL::FA0102 */

/* HAL::FA0103 */

/* HAL::FA0104 */

/* HAL::FA0110 */

/* HAL::FA0111 */

/* HAL::FA0112 */

/* HAL::FA0113 */

/* HAL::FA0114 */

/* HAL::FA0120 */

/* HAL::FA0121 */

/* HAL::FA0122 */

/* HAL::FA0123 */

/* HAL::FA0124 */

/* HAL::CA0000 */

/* HAL::CA0003 */

/* HAL::CA0100 */

/* HAL::CA0101 */

/* HAL::EA0000 */

/* HAL::EA0001 */

/* HAL::EA0002 */

/* HAL::EA0003 */

/* HAL::EA0004 */

/* HAL::EA0010 */

/* HAL::EA0011 */

/* HAL::EA0012 */

/* HAL::EA0013 */

/* HAL::EA0014 */

/* HAL::AnalysisSelector */

/* HAL::Analysis */

/* HAL::CutOptimizer */

/* HAL::Integrator */

/* HAL::InterpBase */

/* HAL::PolyInterp */

/* HAL::Poly2DInterp */

/* HAL::PythonAlgorithm */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncHAL_dict {
 public:
  G__Sizep2memfuncHAL_dict(): p(&G__Sizep2memfuncHAL_dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncHAL_dict::*p)();
};

size_t G__get_sizep2memfuncHAL_dict()
{
  G__Sizep2memfuncHAL_dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceHAL_dict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisData))) {
     HAL::AnalysisData *G__Lderived;
     G__Lderived=(HAL::AnalysisData*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisData),G__get_linked_tagnum(&G__HAL_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisData),G__get_linked_tagnum(&G__HAL_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReader))) {
     HAL::AnalysisTreeReader *G__Lderived;
     G__Lderived=(HAL::AnalysisTreeReader*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReader),G__get_linked_tagnum(&G__HAL_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReader),G__get_linked_tagnum(&G__HAL_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeWriter))) {
     HAL::AnalysisTreeWriter *G__Lderived;
     G__Lderived=(HAL::AnalysisTreeWriter*)0x1000;
     {
       HAL::AnalysisData *G__Lpbase=(HAL::AnalysisData*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeWriter),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisData),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeWriter),G__get_linked_tagnum(&G__HAL_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeWriter),G__get_linked_tagnum(&G__HAL_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCutAlgorithm))) {
     HAL::CutAlgorithm *G__Lderived;
     G__Lderived=(HAL::CutAlgorithm*)0x1000;
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCutAlgorithm),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLImportTLVAlgo))) {
     HAL::internal::ImportTLVAlgo *G__Lderived;
     G__Lderived=(HAL::internal::ImportTLVAlgo*)0x1000;
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLImportTLVAlgo),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLNthElementAlgo))) {
     HAL::internal::NthElementAlgo *G__Lderived;
     G__Lderived=(HAL::internal::NthElementAlgo*)0x1000;
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLNthElementAlgo),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLFilterTLVAlgo))) {
     HAL::internal::FilterTLVAlgo *G__Lderived;
     G__Lderived=(HAL::internal::FilterTLVAlgo*)0x1000;
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLFilterTLVAlgo),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLParticlesTLVCut))) {
     HAL::internal::ParticlesTLVCut *G__Lderived;
     G__Lderived=(HAL::internal::ParticlesTLVCut*)0x1000;
     {
       HAL::CutAlgorithm *G__Lpbase=(HAL::CutAlgorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLParticlesTLVCut),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCutAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLParticlesTLVCut),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLSingleParticleTLVStore))) {
     HAL::internal::SingleParticleTLVStore *G__Lderived;
     G__Lderived=(HAL::internal::SingleParticleTLVStore*)0x1000;
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLSingleParticleTLVStore),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLParticlesTLVStore))) {
     HAL::internal::ParticlesTLVStore *G__Lderived;
     G__Lderived=(HAL::internal::ParticlesTLVStore*)0x1000;
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLParticlesTLVStore),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0000))) {
     HAL::IA0000 *G__Lderived;
     G__Lderived=(HAL::IA0000*)0x1000;
     {
       HAL::internal::ImportTLVAlgo *G__Lpbase=(HAL::internal::ImportTLVAlgo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0000),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLImportTLVAlgo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0000),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0001))) {
     HAL::IA0001 *G__Lderived;
     G__Lderived=(HAL::IA0001*)0x1000;
     {
       HAL::internal::ImportTLVAlgo *G__Lpbase=(HAL::internal::ImportTLVAlgo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0001),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLImportTLVAlgo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0001),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0002))) {
     HAL::IA0002 *G__Lderived;
     G__Lderived=(HAL::IA0002*)0x1000;
     {
       HAL::internal::ImportTLVAlgo *G__Lpbase=(HAL::internal::ImportTLVAlgo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0002),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLImportTLVAlgo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0002),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0010))) {
     HAL::IA0010 *G__Lderived;
     G__Lderived=(HAL::IA0010*)0x1000;
     {
       HAL::internal::ImportTLVAlgo *G__Lpbase=(HAL::internal::ImportTLVAlgo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0010),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLImportTLVAlgo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0010),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0011))) {
     HAL::IA0011 *G__Lderived;
     G__Lderived=(HAL::IA0011*)0x1000;
     {
       HAL::internal::ImportTLVAlgo *G__Lpbase=(HAL::internal::ImportTLVAlgo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0011),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLImportTLVAlgo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0011),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0012))) {
     HAL::IA0012 *G__Lderived;
     G__Lderived=(HAL::IA0012*)0x1000;
     {
       HAL::internal::ImportTLVAlgo *G__Lpbase=(HAL::internal::ImportTLVAlgo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0012),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLImportTLVAlgo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0012),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0020))) {
     HAL::IA0020 *G__Lderived;
     G__Lderived=(HAL::IA0020*)0x1000;
     {
       HAL::internal::ImportTLVAlgo *G__Lpbase=(HAL::internal::ImportTLVAlgo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0020),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLImportTLVAlgo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0020),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0021))) {
     HAL::IA0021 *G__Lderived;
     G__Lderived=(HAL::IA0021*)0x1000;
     {
       HAL::internal::ImportTLVAlgo *G__Lpbase=(HAL::internal::ImportTLVAlgo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0021),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLImportTLVAlgo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0021),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0022))) {
     HAL::IA0022 *G__Lderived;
     G__Lderived=(HAL::IA0022*)0x1000;
     {
       HAL::internal::ImportTLVAlgo *G__Lpbase=(HAL::internal::ImportTLVAlgo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0022),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLImportTLVAlgo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0022),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLRA0000))) {
     HAL::RA0000 *G__Lderived;
     G__Lderived=(HAL::RA0000*)0x1000;
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLRA0000),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0000))) {
     HAL::FA0000 *G__Lderived;
     G__Lderived=(HAL::FA0000*)0x1000;
     {
       HAL::internal::NthElementAlgo *G__Lpbase=(HAL::internal::NthElementAlgo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0000),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLNthElementAlgo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0000),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0100))) {
     HAL::FA0100 *G__Lderived;
     G__Lderived=(HAL::FA0100*)0x1000;
     {
       HAL::internal::FilterTLVAlgo *G__Lpbase=(HAL::internal::FilterTLVAlgo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0100),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLFilterTLVAlgo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0100),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0101))) {
     HAL::FA0101 *G__Lderived;
     G__Lderived=(HAL::FA0101*)0x1000;
     {
       HAL::internal::FilterTLVAlgo *G__Lpbase=(HAL::internal::FilterTLVAlgo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0101),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLFilterTLVAlgo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0101),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0102))) {
     HAL::FA0102 *G__Lderived;
     G__Lderived=(HAL::FA0102*)0x1000;
     {
       HAL::internal::FilterTLVAlgo *G__Lpbase=(HAL::internal::FilterTLVAlgo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0102),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLFilterTLVAlgo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0102),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0103))) {
     HAL::FA0103 *G__Lderived;
     G__Lderived=(HAL::FA0103*)0x1000;
     {
       HAL::internal::FilterTLVAlgo *G__Lpbase=(HAL::internal::FilterTLVAlgo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0103),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLFilterTLVAlgo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0103),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0104))) {
     HAL::FA0104 *G__Lderived;
     G__Lderived=(HAL::FA0104*)0x1000;
     {
       HAL::internal::FilterTLVAlgo *G__Lpbase=(HAL::internal::FilterTLVAlgo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0104),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLFilterTLVAlgo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0104),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0110))) {
     HAL::FA0110 *G__Lderived;
     G__Lderived=(HAL::FA0110*)0x1000;
     {
       HAL::internal::FilterTLVAlgo *G__Lpbase=(HAL::internal::FilterTLVAlgo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0110),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLFilterTLVAlgo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0110),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0111))) {
     HAL::FA0111 *G__Lderived;
     G__Lderived=(HAL::FA0111*)0x1000;
     {
       HAL::internal::FilterTLVAlgo *G__Lpbase=(HAL::internal::FilterTLVAlgo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0111),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLFilterTLVAlgo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0111),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0112))) {
     HAL::FA0112 *G__Lderived;
     G__Lderived=(HAL::FA0112*)0x1000;
     {
       HAL::internal::FilterTLVAlgo *G__Lpbase=(HAL::internal::FilterTLVAlgo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0112),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLFilterTLVAlgo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0112),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0113))) {
     HAL::FA0113 *G__Lderived;
     G__Lderived=(HAL::FA0113*)0x1000;
     {
       HAL::internal::FilterTLVAlgo *G__Lpbase=(HAL::internal::FilterTLVAlgo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0113),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLFilterTLVAlgo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0113),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0114))) {
     HAL::FA0114 *G__Lderived;
     G__Lderived=(HAL::FA0114*)0x1000;
     {
       HAL::internal::FilterTLVAlgo *G__Lpbase=(HAL::internal::FilterTLVAlgo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0114),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLFilterTLVAlgo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0114),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0120))) {
     HAL::FA0120 *G__Lderived;
     G__Lderived=(HAL::FA0120*)0x1000;
     {
       HAL::internal::FilterTLVAlgo *G__Lpbase=(HAL::internal::FilterTLVAlgo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0120),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLFilterTLVAlgo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0120),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0121))) {
     HAL::FA0121 *G__Lderived;
     G__Lderived=(HAL::FA0121*)0x1000;
     {
       HAL::internal::FilterTLVAlgo *G__Lpbase=(HAL::internal::FilterTLVAlgo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0121),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLFilterTLVAlgo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0121),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0122))) {
     HAL::FA0122 *G__Lderived;
     G__Lderived=(HAL::FA0122*)0x1000;
     {
       HAL::internal::FilterTLVAlgo *G__Lpbase=(HAL::internal::FilterTLVAlgo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0122),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLFilterTLVAlgo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0122),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0123))) {
     HAL::FA0123 *G__Lderived;
     G__Lderived=(HAL::FA0123*)0x1000;
     {
       HAL::internal::FilterTLVAlgo *G__Lpbase=(HAL::internal::FilterTLVAlgo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0123),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLFilterTLVAlgo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0123),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0124))) {
     HAL::FA0124 *G__Lderived;
     G__Lderived=(HAL::FA0124*)0x1000;
     {
       HAL::internal::FilterTLVAlgo *G__Lpbase=(HAL::internal::FilterTLVAlgo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0124),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLFilterTLVAlgo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0124),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0000))) {
     HAL::CA0000 *G__Lderived;
     G__Lderived=(HAL::CA0000*)0x1000;
     {
       HAL::internal::ParticlesTLVCut *G__Lpbase=(HAL::internal::ParticlesTLVCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0000),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLParticlesTLVCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::CutAlgorithm *G__Lpbase=(HAL::CutAlgorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0000),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCutAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0000),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0003))) {
     HAL::CA0003 *G__Lderived;
     G__Lderived=(HAL::CA0003*)0x1000;
     {
       HAL::internal::ParticlesTLVCut *G__Lpbase=(HAL::internal::ParticlesTLVCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0003),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLParticlesTLVCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::CutAlgorithm *G__Lpbase=(HAL::CutAlgorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0003),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCutAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0003),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0100))) {
     HAL::CA0100 *G__Lderived;
     G__Lderived=(HAL::CA0100*)0x1000;
     {
       HAL::CutAlgorithm *G__Lpbase=(HAL::CutAlgorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0100),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCutAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0100),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0101))) {
     HAL::CA0101 *G__Lderived;
     G__Lderived=(HAL::CA0101*)0x1000;
     {
       HAL::CutAlgorithm *G__Lpbase=(HAL::CutAlgorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0101),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCutAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0101),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0000))) {
     HAL::EA0000 *G__Lderived;
     G__Lderived=(HAL::EA0000*)0x1000;
     {
       HAL::internal::SingleParticleTLVStore *G__Lpbase=(HAL::internal::SingleParticleTLVStore*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0000),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLSingleParticleTLVStore),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0000),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0001))) {
     HAL::EA0001 *G__Lderived;
     G__Lderived=(HAL::EA0001*)0x1000;
     {
       HAL::internal::SingleParticleTLVStore *G__Lpbase=(HAL::internal::SingleParticleTLVStore*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0001),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLSingleParticleTLVStore),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0001),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0002))) {
     HAL::EA0002 *G__Lderived;
     G__Lderived=(HAL::EA0002*)0x1000;
     {
       HAL::internal::SingleParticleTLVStore *G__Lpbase=(HAL::internal::SingleParticleTLVStore*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0002),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLSingleParticleTLVStore),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0002),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0003))) {
     HAL::EA0003 *G__Lderived;
     G__Lderived=(HAL::EA0003*)0x1000;
     {
       HAL::internal::SingleParticleTLVStore *G__Lpbase=(HAL::internal::SingleParticleTLVStore*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0003),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLSingleParticleTLVStore),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0003),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0004))) {
     HAL::EA0004 *G__Lderived;
     G__Lderived=(HAL::EA0004*)0x1000;
     {
       HAL::internal::SingleParticleTLVStore *G__Lpbase=(HAL::internal::SingleParticleTLVStore*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0004),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLSingleParticleTLVStore),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0004),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0010))) {
     HAL::EA0010 *G__Lderived;
     G__Lderived=(HAL::EA0010*)0x1000;
     {
       HAL::internal::ParticlesTLVStore *G__Lpbase=(HAL::internal::ParticlesTLVStore*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0010),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLParticlesTLVStore),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0010),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0011))) {
     HAL::EA0011 *G__Lderived;
     G__Lderived=(HAL::EA0011*)0x1000;
     {
       HAL::internal::ParticlesTLVStore *G__Lpbase=(HAL::internal::ParticlesTLVStore*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0011),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLParticlesTLVStore),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0011),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0012))) {
     HAL::EA0012 *G__Lderived;
     G__Lderived=(HAL::EA0012*)0x1000;
     {
       HAL::internal::ParticlesTLVStore *G__Lpbase=(HAL::internal::ParticlesTLVStore*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0012),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLParticlesTLVStore),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0012),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0013))) {
     HAL::EA0013 *G__Lderived;
     G__Lderived=(HAL::EA0013*)0x1000;
     {
       HAL::internal::ParticlesTLVStore *G__Lpbase=(HAL::internal::ParticlesTLVStore*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0013),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLParticlesTLVStore),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0013),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0014))) {
     HAL::EA0014 *G__Lderived;
     G__Lderived=(HAL::EA0014*)0x1000;
     {
       HAL::internal::ParticlesTLVStore *G__Lpbase=(HAL::internal::ParticlesTLVStore*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0014),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLParticlesTLVStore),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0014),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisSelector))) {
     HAL::AnalysisSelector *G__Lderived;
     G__Lderived=(HAL::AnalysisSelector*)0x1000;
     {
       TSelector *G__Lpbase=(TSelector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisSelector),G__get_linked_tagnum(&G__HAL_dictLN_TSelector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisSelector),G__get_linked_tagnum(&G__HAL_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLPolyInterp))) {
     HAL::PolyInterp *G__Lderived;
     G__Lderived=(HAL::PolyInterp*)0x1000;
     {
       HAL::InterpBase *G__Lpbase=(HAL::InterpBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLPolyInterp),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLInterpBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLPythonAlgorithm))) {
     HAL::PythonAlgorithm *G__Lderived;
     G__Lderived=(HAL::PythonAlgorithm*)0x1000;
     {
       HAL::Algorithm *G__Lpbase=(HAL::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLPythonAlgorithm),G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableHAL_dict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("Color_t",115,-1,0,-1);
   G__setnewtype(-1,"Color number (short)",0);
   G__search_typename2("value_type",110,-1,0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",78,-1,0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",78,-1,256,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",110,-1,1,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",110,-1,257,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",109,-1,0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",77,-1,0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",77,-1,256,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",109,-1,1,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",109,-1,257,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",103,-1,0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEboolcOallocatorlEboolgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEboolcOallocatorlEboolgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEboolcOallocatorlEboolgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEboolcOallocatorlEboolgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEboolcOallocatorlEboolgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",103,-1,0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEboolcOallocatorlEboolgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",103,-1,0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEboolcOallocatorlEboolgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEboolcOallocatorlEboolgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEboolcOallocatorlEboolgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__HAL_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__HAL_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__HAL_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__HAL_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__HAL_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<Algorithm*>",117,G__get_linked_tagnum(&G__HAL_dictLN_listlEHALcLcLAlgorithmmUcOallocatorlEHALcLcLAlgorithmmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<HAL::Algorithm*>",117,G__get_linked_tagnum(&G__HAL_dictLN_listlEHALcLcLAlgorithmmUcOallocatorlEHALcLcLAlgorithmmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,bool>",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,bool>",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,bool>",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,bool,less<string> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,long double>",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOlongsPdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOlongsPdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,long double>",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOlongsPdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOlongsPdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,long double>",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOlongsPdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOlongsPdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,long double,less<string> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOlongsPdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOlongsPdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,long long>",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOlongsPlongcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOlongsPlonggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,long long>",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOlongsPlongcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOlongsPlonggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,long long>",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOlongsPlongcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOlongsPlonggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,long long,less<string> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOlongsPlongcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOlongsPlonggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,unsigned long long>",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOunsignedsPlongsPlongcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPlongsPlonggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,unsigned long long>",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOunsignedsPlongsPlongcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPlongsPlonggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,unsigned long long>",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOunsignedsPlongsPlongcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPlongsPlonggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,unsigned long long,less<string> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOunsignedsPlongsPlongcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPlongsPlonggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::string>",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::string>",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string>",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string,less<string> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObject*>",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOTObjectmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjectmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObject*>",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOTObjectmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjectmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObject*>",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOTObjectmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjectmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObject*,less<string> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOTObjectmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjectmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long long,bool>",117,G__get_linked_tagnum(&G__HAL_dictLN_maplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long long,bool,less<long long> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::map<long long,bool> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::map<long long,bool> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,map<long long,bool,less<long long>,allocator<pair<const long long,bool> > > >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,map<long long,bool,less<long long>,allocator<pair<const long long,bool> > >,less<string> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long long,long double>",117,G__get_linked_tagnum(&G__HAL_dictLN_maplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long long,long double,less<long long> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::map<long long,long double> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::map<long long,long double> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,map<long long,long double,less<long long>,allocator<pair<const long long,long double> > > >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,map<long long,long double,less<long long>,allocator<pair<const long long,long double> > >,less<string> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long long,long long>",117,G__get_linked_tagnum(&G__HAL_dictLN_maplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long long,long long,less<long long> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::map<long long,long long> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::map<long long,long long> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,map<long long,long long,less<long long>,allocator<pair<const long long,long long> > > >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,map<long long,long long,less<long long>,allocator<pair<const long long,long long> > >,less<string> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long long,unsigned long long>",117,G__get_linked_tagnum(&G__HAL_dictLN_maplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long long,unsigned long long,less<long long> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::map<long long,unsigned long long> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::map<long long,unsigned long long> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,map<long long,unsigned long long,less<long long>,allocator<pair<const long long,unsigned long long> > > >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,map<long long,unsigned long long,less<long long>,allocator<pair<const long long,unsigned long long> > >,less<string> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long long,std::string>",117,G__get_linked_tagnum(&G__HAL_dictLN_maplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long long,string>",117,G__get_linked_tagnum(&G__HAL_dictLN_maplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long long,string,less<long long> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::map<long long,std::string> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::map<long long,std::string> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,map<long long,string,less<long long>,allocator<pair<const long long,string> > > >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,map<long long,string,less<long long>,allocator<pair<const long long,string> > >,less<string> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long long,TObject*>",117,G__get_linked_tagnum(&G__HAL_dictLN_maplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long long,TObject*,less<long long> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::map<long long,TObject*> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::map<long long,TObject*> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,map<long long,TObject*,less<long long>,allocator<pair<const long long,TObject*> > > >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,map<long long,TObject*,less<long long>,allocator<pair<const long long,TObject*> > >,less<string> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long long,std::map<long long,bool> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long long,map<long long,bool,less<long long>,allocator<pair<const long long,bool> > > >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long long,map<long long,bool,less<long long>,allocator<pair<const long long,bool> > >,less<long long> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::map<long long,std::map<long long,bool> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::map<long long,std::map<long long,bool> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,map<long long,map<long long,bool,less<long long>,allocator<pair<const long long,bool> > >,less<long long>,allocator<pair<const long long,map<long long,bool,less<long long>,allocator<pair<const long long,bool> > > > > > >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,map<long long,map<long long,bool,less<long long>,allocator<pair<const long long,bool> > >,less<long long>,allocator<pair<const long long,map<long long,bool,less<long long>,allocator<pair<const long long,bool> > > > > >,less<string> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long long,std::map<long long,long double> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long long,map<long long,long double,less<long long>,allocator<pair<const long long,long double> > > >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long long,map<long long,long double,less<long long>,allocator<pair<const long long,long double> > >,less<long long> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::map<long long,std::map<long long,long double> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::map<long long,std::map<long long,long double> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,map<long long,map<long long,long double,less<long long>,allocator<pair<const long long,long double> > >,less<long long>,allocator<pair<const long long,map<long long,long double,less<long long>,allocator<pair<const long long,long double> > > > > > >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,map<long long,map<long long,long double,less<long long>,allocator<pair<const long long,long double> > >,less<long long>,allocator<pair<const long long,map<long long,long double,less<long long>,allocator<pair<const long long,long double> > > > > >,less<string> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long long,std::map<long long,long long> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long long,map<long long,long long,less<long long>,allocator<pair<const long long,long long> > > >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long long,map<long long,long long,less<long long>,allocator<pair<const long long,long long> > >,less<long long> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::map<long long,std::map<long long,long long> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::map<long long,std::map<long long,long long> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,map<long long,map<long long,long long,less<long long>,allocator<pair<const long long,long long> > >,less<long long>,allocator<pair<const long long,map<long long,long long,less<long long>,allocator<pair<const long long,long long> > > > > > >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,map<long long,map<long long,long long,less<long long>,allocator<pair<const long long,long long> > >,less<long long>,allocator<pair<const long long,map<long long,long long,less<long long>,allocator<pair<const long long,long long> > > > > >,less<string> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long long,std::map<long long,unsigned long long> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long long,map<long long,unsigned long long,less<long long>,allocator<pair<const long long,unsigned long long> > > >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long long,map<long long,unsigned long long,less<long long>,allocator<pair<const long long,unsigned long long> > >,less<long long> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::map<long long,std::map<long long,unsigned long long> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::map<long long,std::map<long long,unsigned long long> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,map<long long,map<long long,unsigned long long,less<long long>,allocator<pair<const long long,unsigned long long> > >,less<long long>,allocator<pair<const long long,map<long long,unsigned long long,less<long long>,allocator<pair<const long long,unsigned long long> > > > > > >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,map<long long,map<long long,unsigned long long,less<long long>,allocator<pair<const long long,unsigned long long> > >,less<long long>,allocator<pair<const long long,map<long long,unsigned long long,less<long long>,allocator<pair<const long long,unsigned long long> > > > > >,less<string> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long long,std::map<long long,std::string> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long long,map<long long,string,less<long long>,allocator<pair<const long long,string> > > >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long long,map<long long,string,less<long long>,allocator<pair<const long long,string> > >,less<long long> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::map<long long,std::map<long long,std::string> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::map<long long,std::map<long long,std::string> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,map<long long,map<long long,string,less<long long>,allocator<pair<const long long,string> > >,less<long long>,allocator<pair<const long long,map<long long,string,less<long long>,allocator<pair<const long long,string> > > > > > >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,map<long long,map<long long,string,less<long long>,allocator<pair<const long long,string> > >,less<long long>,allocator<pair<const long long,map<long long,string,less<long long>,allocator<pair<const long long,string> > > > > >,less<string> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long long,std::map<long long,TObject*> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long long,map<long long,TObject*,less<long long>,allocator<pair<const long long,TObject*> > > >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long long,map<long long,TObject*,less<long long>,allocator<pair<const long long,TObject*> > >,less<long long> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::map<long long,std::map<long long,TObject*> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::map<long long,std::map<long long,TObject*> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,map<long long,map<long long,TObject*,less<long long>,allocator<pair<const long long,TObject*> > >,less<long long>,allocator<pair<const long long,map<long long,TObject*,less<long long>,allocator<pair<const long long,TObject*> > > > > > >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,map<long long,map<long long,TObject*,less<long long>,allocator<pair<const long long,TObject*> > >,less<long long>,allocator<pair<const long long,map<long long,TObject*,less<long long>,allocator<pair<const long long,TObject*> > > > > >,less<string> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,StorageType>",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOHALcLcLAnalysisDatacLcLStorageTypecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOHALcLcLAnalysisDatacLcLStorageTypegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,StorageType>",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOHALcLcLAnalysisDatacLcLStorageTypecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOHALcLcLAnalysisDatacLcLStorageTypegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,HAL::AnalysisData::StorageType>",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOHALcLcLAnalysisDatacLcLStorageTypecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOHALcLcLAnalysisDatacLcLStorageTypegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,HAL::AnalysisData::StorageType,less<string> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOHALcLcLAnalysisDatacLcLStorageTypecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOHALcLcLAnalysisDatacLcLStorageTypegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<TString>",117,G__get_linked_tagnum(&G__HAL_dictLN_setlETStringcOlesslETStringgRcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<TString,less<TString> >",117,G__get_linked_tagnum(&G__HAL_dictLN_setlETStringcOlesslETStringgRcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<bool>",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEboolcOallocatorlEboolgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<long double>",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelElongsPdoublecOallocatorlElongsPdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<long long>",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelElongsPlongcOallocatorlElongsPlonggRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<unsigned long long>",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<TString>",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<TObjArray>",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelETObjArraycOallocatorlETObjArraygRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<TClonesArray>",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelETClonesArraycOallocatorlETClonesArraygRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<TRef>",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelETRefcOallocatorlETRefgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<TRefArray>",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelETRefArraycOallocatorlETRefArraygRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<std::vector<bool> >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<bool> >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<bool,allocator<bool> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<long double>",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",113,-1,0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",81,-1,0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",81,-1,256,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",113,-1,1,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",113,-1,257,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<std::vector<long double> >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<long double> >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<long double,allocator<long double> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<std::vector<long long> >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<long long> >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<long long,allocator<long long> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<std::vector<unsigned long long> >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<unsigned long long> >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<unsigned long long,allocator<unsigned long long> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<std::vector<TString> >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<TString> >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<TString,allocator<TString> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TObjArray>",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlETObjArraycOallocatorlETObjArraygRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlETObjArraycOallocatorlETObjArraygRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlETObjArraycOallocatorlETObjArraygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlETObjArraycOallocatorlETObjArraygRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlETObjArraycOallocatorlETObjArraygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<std::vector<TObjArray> >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlETObjArraycOallocatorlETObjArraygRsPgRcOallocatorlEvectorlETObjArraycOallocatorlETObjArraygRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<TObjArray> >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlETObjArraycOallocatorlETObjArraygRsPgRcOallocatorlEvectorlETObjArraycOallocatorlETObjArraygRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<TObjArray,allocator<TObjArray> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlETObjArraycOallocatorlETObjArraygRsPgRcOallocatorlEvectorlETObjArraycOallocatorlETObjArraygRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TClonesArray>",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlETClonesArraycOallocatorlETClonesArraygRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlETClonesArraycOallocatorlETClonesArraygRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlETClonesArraycOallocatorlETClonesArraygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlETClonesArraycOallocatorlETClonesArraygRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlETClonesArraycOallocatorlETClonesArraygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<std::vector<TClonesArray> >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlETClonesArraycOallocatorlETClonesArraygRsPgRcOallocatorlEvectorlETClonesArraycOallocatorlETClonesArraygRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<TClonesArray> >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlETClonesArraycOallocatorlETClonesArraygRsPgRcOallocatorlEvectorlETClonesArraycOallocatorlETClonesArraygRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<TClonesArray,allocator<TClonesArray> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlETClonesArraycOallocatorlETClonesArraygRsPgRcOallocatorlEvectorlETClonesArraycOallocatorlETClonesArraygRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TRef>",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlETRefcOallocatorlETRefgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlETRefcOallocatorlETRefgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlETRefcOallocatorlETRefgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlETRefcOallocatorlETRefgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlETRefcOallocatorlETRefgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<std::vector<TRef> >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlETRefcOallocatorlETRefgRsPgRcOallocatorlEvectorlETRefcOallocatorlETRefgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<TRef> >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlETRefcOallocatorlETRefgRsPgRcOallocatorlEvectorlETRefcOallocatorlETRefgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<TRef,allocator<TRef> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlETRefcOallocatorlETRefgRsPgRcOallocatorlEvectorlETRefcOallocatorlETRefgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TRefArray>",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlETRefArraycOallocatorlETRefArraygRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlETRefArraycOallocatorlETRefArraygRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlETRefArraycOallocatorlETRefArraygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlETRefArraycOallocatorlETRefArraygRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlETRefArraycOallocatorlETRefArraygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<std::vector<TRefArray> >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlETRefArraycOallocatorlETRefArraygRsPgRcOallocatorlEvectorlETRefArraycOallocatorlETRefArraygRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<TRefArray> >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlETRefArraycOallocatorlETRefArraygRsPgRcOallocatorlEvectorlETRefArraycOallocatorlETRefArraygRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<TRefArray,allocator<TRefArray> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlETRefArraycOallocatorlETRefArraygRsPgRcOallocatorlEvectorlETRefArraycOallocatorlETRefArraygRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<bool> >",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<bool> >",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEboolcOallocatorlEboolgRsPgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEboolcOallocatorlEboolgRsPgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEboolcOallocatorlEboolgRsPgR),256,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEboolcOallocatorlEboolgRsPgR),1,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEboolcOallocatorlEboolgRsPgR),257,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<bool,allocator<bool> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<std::vector<std::vector<bool> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<vector<bool> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > > >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<long double> >",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<long double> >",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR),256,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR),1,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR),257,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<long double,allocator<long double> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<std::vector<std::vector<long double> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<vector<long double> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > > >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<long long> >",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<long long> >",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR),256,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR),1,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR),257,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<long long,allocator<long long> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<std::vector<std::vector<long long> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<vector<long long> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > > >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<unsigned long long> >",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<unsigned long long> >",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR),256,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR),1,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR),257,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<unsigned long long,allocator<unsigned long long> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<std::vector<std::vector<unsigned long long> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<vector<unsigned long long> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > > >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<TString> >",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<TString> >",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<TString,allocator<TString> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<std::vector<std::vector<TString> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<vector<TString> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > > >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<TRef> >",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlETRefcOallocatorlETRefgRsPgRcOallocatorlEvectorlETRefcOallocatorlETRefgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<TRef> >",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlETRefcOallocatorlETRefgRsPgRcOallocatorlEvectorlETRefcOallocatorlETRefgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlETRefcOallocatorlETRefgRsPgRcOallocatorlEvectorlETRefcOallocatorlETRefgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlETRefcOallocatorlETRefgRsPgRcOallocatorlEvectorlETRefcOallocatorlETRefgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlETRefcOallocatorlETRefgRsPgRcOallocatorlEvectorlETRefcOallocatorlETRefgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlETRefcOallocatorlETRefgRsPgRcOallocatorlEvectorlETRefcOallocatorlETRefgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<TRef,allocator<TRef> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlETRefcOallocatorlETRefgRsPgRcOallocatorlEvectorlETRefcOallocatorlETRefgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<std::vector<std::vector<TRef> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlEvectorlETRefcOallocatorlETRefgRsPgRcOallocatorlEvectorlETRefcOallocatorlETRefgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlETRefcOallocatorlETRefgRsPgRcOallocatorlEvectorlETRefcOallocatorlETRefgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<vector<TRef> > >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlEvectorlETRefcOallocatorlETRefgRsPgRcOallocatorlEvectorlETRefcOallocatorlETRefgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlETRefcOallocatorlETRefgRsPgRcOallocatorlEvectorlETRefcOallocatorlETRefgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<vector<TRef,allocator<TRef> >,allocator<vector<TRef,allocator<TRef> > > > >",117,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlEvectorlETRefcOallocatorlETRefgRsPgRcOallocatorlEvectorlETRefcOallocatorlETRefgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlETRefcOallocatorlETRefgRsPgRcOallocatorlEvectorlETRefcOallocatorlETRefgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<BranchManager*>",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEHALcLcLAnalysisTreeReadercLcLBranchManagermUcOallocatorlEHALcLcLAnalysisTreeReadercLcLBranchManagermUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEHALcLcLAnalysisTreeReadercLcLBranchManagermUcOallocatorlEHALcLcLAnalysisTreeReadercLcLBranchManagermUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEHALcLcLAnalysisTreeReadercLcLBranchManagermUcOallocatorlEHALcLcLAnalysisTreeReadercLcLBranchManagermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEHALcLcLAnalysisTreeReadercLcLBranchManagermUcOallocatorlEHALcLcLAnalysisTreeReadercLcLBranchManagermUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEHALcLcLAnalysisTreeReadercLcLBranchManagermUcOallocatorlEHALcLcLAnalysisTreeReadercLcLBranchManagermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HAL::AnalysisTreeReader::BranchManager*>",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEHALcLcLAnalysisTreeReadercLcLBranchManagermUcOallocatorlEHALcLcLAnalysisTreeReadercLcLBranchManagermUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixD",117,G__get_linked_tagnum(&G__HAL_dictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__HAL_dictLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("PyObject",117,G__get_linked_tagnum(&G__HAL_dictLN__object),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<bool> >",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<long double> >",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<long long> >",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<unsigned long long> >",117,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* HAL */
static void G__setup_memvarHAL(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HAL));
   {
   }
   G__tag_memvar_reset();
}


   /* HAL::AnalysisData */
static void G__setup_memvarHALcLcLAnalysisData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisData));
   { HAL::AnalysisData *p; p=(HAL::AnalysisData*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fBoolMap)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),G__defined_typename("map<std::string,bool>"),-1,1,"fBoolMap=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fDecimalMap)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOlongsPdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOlongsPdoublegRsPgRsPgR),G__defined_typename("map<std::string,long double>"),-1,1,"fDecimalMap=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fIntegerMap)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOlongsPlongcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOlongsPlonggRsPgRsPgR),G__defined_typename("map<std::string,long long>"),-1,1,"fIntegerMap=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCountingMap)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOunsignedsPlongsPlongcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPlongsPlonggRsPgRsPgR),G__defined_typename("map<std::string,unsigned long long>"),-1,1,"fCountingMap=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fStringMap)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),G__defined_typename("map<std::string,std::string>"),-1,1,"fStringMap=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTObjectMap)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOTObjectmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjectmUgRsPgRsPgR),G__defined_typename("map<std::string,TObject*>"),-1,1,"fTObjectMap=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fBoolIntMap)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<std::string,std::map<long long,bool> >"),-1,1,"fBoolIntMap=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fDecimalIntMap)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<std::string,std::map<long long,long double> >"),-1,1,"fDecimalIntMap=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fIntegerIntMap)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<std::string,std::map<long long,long long> >"),-1,1,"fIntegerIntMap=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCountingIntMap)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<std::string,std::map<long long,unsigned long long> >"),-1,1,"fCountingIntMap=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fStringIntMap)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<std::string,std::map<long long,std::string> >"),-1,1,"fStringIntMap=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTObjectIntMap)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<std::string,std::map<long long,TObject*> >"),-1,1,"fTObjectIntMap=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fBoolIntIntMap)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<std::string,std::map<long long,std::map<long long,bool> > >"),-1,1,"fBoolIntIntMap=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fDecimalIntIntMap)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<std::string,std::map<long long,std::map<long long,long double> > >"),-1,1,"fDecimalIntIntMap=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fIntegerIntIntMap)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<std::string,std::map<long long,std::map<long long,long long> > >"),-1,1,"fIntegerIntIntMap=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCountingIntIntMap)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<std::string,std::map<long long,std::map<long long,unsigned long long> > >"),-1,1,"fCountingIntIntMap=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fStringIntIntMap)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<std::string,std::map<long long,std::map<long long,std::string> > >"),-1,1,"fStringIntIntMap=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTObjectIntIntMap)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<std::string,std::map<long long,std::map<long long,TObject*> > >"),-1,1,"fTObjectIntIntMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisDatacLcLStorageType),-1,-2,4,"kB=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisDatacLcLStorageType),-1,-2,4,"kD=1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisDatacLcLStorageType),-1,-2,4,"kI=2LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisDatacLcLStorageType),-1,-2,4,"kC=3LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisDatacLcLStorageType),-1,-2,4,"kS=4LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisDatacLcLStorageType),-1,-2,4,"kO=5LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisDatacLcLStorageType),-1,-2,4,"kIB=6LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisDatacLcLStorageType),-1,-2,4,"kID=7LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisDatacLcLStorageType),-1,-2,4,"kII=8LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisDatacLcLStorageType),-1,-2,4,"kIC=9LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisDatacLcLStorageType),-1,-2,4,"kIS=10LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisDatacLcLStorageType),-1,-2,4,"kIO=11LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisDatacLcLStorageType),-1,-2,4,"kIIB=12LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisDatacLcLStorageType),-1,-2,4,"kIID=13LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisDatacLcLStorageType),-1,-2,4,"kIII=14LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisDatacLcLStorageType),-1,-2,4,"kIIC=15LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisDatacLcLStorageType),-1,-2,4,"kIIS=16LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisDatacLcLStorageType),-1,-2,4,"kIIO=17LL",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOHALcLcLAnalysisDatacLcLStorageTypecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOHALcLcLAnalysisDatacLcLStorageTypegRsPgRsPgR),G__defined_typename("map<std::string,StorageType>"),-1,4,"fNameTypeMap=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::AnalysisTreeReader */
static void G__setup_memvarHALcLcLAnalysisTreeReader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReader));
   { HAL::AnalysisTreeReader *p; p=(HAL::AnalysisTreeReader*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TTree),-1,-1,4,"fChain=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fEntry=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLStorageType),-1,-2,4,"kB=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLStorageType),-1,-2,4,"kD=1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLStorageType),-1,-2,4,"kI=2LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLStorageType),-1,-2,4,"kC=3LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLStorageType),-1,-2,4,"kS=4LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLStorageType),-1,-2,4,"kOA=5LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLStorageType),-1,-2,4,"kCA=6LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLStorageType),-1,-2,4,"kR=7LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLStorageType),-1,-2,4,"kRA=8LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLStorageType),-1,-2,4,"kvB=9LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLStorageType),-1,-2,4,"kvD=10LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLStorageType),-1,-2,4,"kvI=11LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLStorageType),-1,-2,4,"kvC=12LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLStorageType),-1,-2,4,"kvS=13LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLStorageType),-1,-2,4,"kvOA=14LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLStorageType),-1,-2,4,"kvCA=15LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLStorageType),-1,-2,4,"kvR=16LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLStorageType),-1,-2,4,"kvRA=17LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLStorageType),-1,-2,4,"kvvB=18LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLStorageType),-1,-2,4,"kvvD=19LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLStorageType),-1,-2,4,"kvvI=20LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLStorageType),-1,-2,4,"kvvC=21LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLStorageType),-1,-2,4,"kvvS=22LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLStorageType),-1,-2,4,"kvvR=23LL",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TRegexp),-1,-1,4,"fScalar=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TRegexp),-1,-1,4,"fVector=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TRegexp),-1,-1,4,"fVector2D=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TRegexp),-1,-1,4,"fArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TRegexp),-1,-1,4,"fArray2D=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_setlETStringcOlesslETStringgRcOallocatorlETStringgRsPgR),G__defined_typename("set<TString>"),-1,4,"fBool=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_setlETStringcOlesslETStringgRcOallocatorlETStringgRsPgR),G__defined_typename("set<TString>"),-1,4,"fInteger=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_setlETStringcOlesslETStringgRcOallocatorlETStringgRsPgR),G__defined_typename("set<TString>"),-1,4,"fShort=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_setlETStringcOlesslETStringgRcOallocatorlETStringgRsPgR),G__defined_typename("set<TString>"),-1,4,"fLong=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_setlETStringcOlesslETStringgRcOallocatorlETStringgRsPgR),G__defined_typename("set<TString>"),-1,4,"fLLong=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_setlETStringcOlesslETStringgRcOallocatorlETStringgRsPgR),G__defined_typename("set<TString>"),-1,4,"fSChar=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_setlETStringcOlesslETStringgRcOallocatorlETStringgRsPgR),G__defined_typename("set<TString>"),-1,4,"fUInteger=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_setlETStringcOlesslETStringgRcOallocatorlETStringgRsPgR),G__defined_typename("set<TString>"),-1,4,"fUShort=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_setlETStringcOlesslETStringgRcOallocatorlETStringgRsPgR),G__defined_typename("set<TString>"),-1,4,"fULong=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_setlETStringcOlesslETStringgRcOallocatorlETStringgRsPgR),G__defined_typename("set<TString>"),-1,4,"fULLong=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_setlETStringcOlesslETStringgRcOallocatorlETStringgRsPgR),G__defined_typename("set<TString>"),-1,4,"fUChar=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_setlETStringcOlesslETStringgRcOallocatorlETStringgRsPgR),G__defined_typename("set<TString>"),-1,4,"fFloat=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_setlETStringcOlesslETStringgRcOallocatorlETStringgRsPgR),G__defined_typename("set<TString>"),-1,4,"fDouble=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_setlETStringcOlesslETStringgRcOallocatorlETStringgRsPgR),G__defined_typename("set<TString>"),-1,4,"fLDouble=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_setlETStringcOlesslETStringgRcOallocatorlETStringgRsPgR),G__defined_typename("set<TString>"),-1,4,"fChar=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TMap),-1,-1,4,"fBranchMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_dequelEboolcOallocatorlEboolgRsPgR),G__defined_typename("deque<bool>"),-1,4,"fB=",0,"bool type");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_dequelElongsPdoublecOallocatorlElongsPdoublegRsPgR),G__defined_typename("deque<long double>"),-1,4,"fD=",0,"decimal number  (float, double, etc...)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_dequelElongsPlongcOallocatorlElongsPlonggRsPgR),G__defined_typename("deque<long long>"),-1,4,"fI=",0,"integer number  (Byte_t, int, long, short, etc...)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_dequelEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR),G__defined_typename("deque<unsigned long long>"),-1,4,"fC=",0,"counting number (unsigned int, unsigned etc...)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_dequelETStringcOallocatorlETStringgRsPgR),G__defined_typename("deque<TString>"),-1,4,"fS=",0,"string types    (char, TString, ...)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_dequelETObjArraycOallocatorlETObjArraygRsPgR),G__defined_typename("deque<TObjArray>"),-1,4,"fOA=",0,"TObjArray");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_dequelETClonesArraycOallocatorlETClonesArraygRsPgR),G__defined_typename("deque<TClonesArray>"),-1,4,"fCA=",0,"TClonesArray");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_dequelETRefcOallocatorlETRefgRsPgR),G__defined_typename("deque<TRef>"),-1,4,"fR=",0,"TRef");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_dequelETRefArraycOallocatorlETRefArraygRsPgR),G__defined_typename("deque<TRefArray>"),-1,4,"fRA=",0,"TRefArray");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),G__defined_typename("deque<std::vector<bool> >"),-1,4,"fvB=",0,"bool type");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR),G__defined_typename("deque<std::vector<long double> >"),-1,4,"fvD=",0,"decimal number");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR),G__defined_typename("deque<std::vector<long long> >"),-1,4,"fvI=",0,"integer number");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR),G__defined_typename("deque<std::vector<unsigned long long> >"),-1,4,"fvC=",0,"counting number");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR),G__defined_typename("deque<std::vector<TString> >"),-1,4,"fvS=",0,"string types");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlETObjArraycOallocatorlETObjArraygRsPgRcOallocatorlEvectorlETObjArraycOallocatorlETObjArraygRsPgRsPgRsPgR),G__defined_typename("deque<std::vector<TObjArray> >"),-1,4,"fvOA=",0,"TObjArray");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlETClonesArraycOallocatorlETClonesArraygRsPgRcOallocatorlEvectorlETClonesArraycOallocatorlETClonesArraygRsPgRsPgRsPgR),G__defined_typename("deque<std::vector<TClonesArray> >"),-1,4,"fvCA=",0,"TClonesArray");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlETRefcOallocatorlETRefgRsPgRcOallocatorlEvectorlETRefcOallocatorlETRefgRsPgRsPgRsPgR),G__defined_typename("deque<std::vector<TRef> >"),-1,4,"fvR=",0,"TRef");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlETRefArraycOallocatorlETRefArraygRsPgRcOallocatorlEvectorlETRefArraycOallocatorlETRefArraygRsPgRsPgRsPgR),G__defined_typename("deque<std::vector<TRefArray> >"),-1,4,"fvRA=",0,"TRefArray");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("deque<std::vector<std::vector<bool> > >"),-1,4,"fvvB=",0,"bool type");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("deque<std::vector<std::vector<long double> > >"),-1,4,"fvvD=",0,"decimal number");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("deque<std::vector<std::vector<long long> > >"),-1,4,"fvvI=",0,"integer number");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("deque<std::vector<std::vector<unsigned long long> > >"),-1,4,"fvvC=",0,"counting number");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("deque<std::vector<std::vector<TString> > >"),-1,4,"fvvS=",0,"string types");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_dequelEvectorlEvectorlETRefcOallocatorlETRefgRsPgRcOallocatorlEvectorlETRefcOallocatorlETRefgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlETRefcOallocatorlETRefgRsPgRcOallocatorlEvectorlETRefcOallocatorlETRefgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("deque<std::vector<std::vector<TRef> > >"),-1,4,"fvvR=",0,"TRef");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_vectorlEHALcLcLAnalysisTreeReadercLcLBranchManagermUcOallocatorlEHALcLcLAnalysisTreeReadercLcLBranchManagermUgRsPgR),G__defined_typename("vector<BranchManager*>"),-1,4,"fBranchManagers=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::AnalysisTreeWriter */
static void G__setup_memvarHALcLcLAnalysisTreeWriter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeWriter));
   { HAL::AnalysisTreeWriter *p; p=(HAL::AnalysisTreeWriter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,-1,-1,4,"fCount=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TString),-1,-1,4,"fOutputFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TString),-1,-1,4,"fTreeName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TString),-1,-1,4,"fTreeDescription=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOlongsPlongcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOlongsPlonggRsPgRsPgR),G__defined_typename("map<std::string,long long>"),-1,4,"fBoolCount=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOlongsPlongcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOlongsPlonggRsPgRsPgR),G__defined_typename("map<std::string,long long>"),-1,4,"fDecimalCount=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOlongsPlongcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOlongsPlonggRsPgRsPgR),G__defined_typename("map<std::string,long long>"),-1,4,"fIntegerCount=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOlongsPlongcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOlongsPlonggRsPgRsPgR),G__defined_typename("map<std::string,long long>"),-1,4,"fCountingCount=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<std::string,std::map<long long,long long> >"),-1,4,"fBoolIntCount=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<std::string,std::map<long long,long long> >"),-1,4,"fDecimalIntCount=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<std::string,std::map<long long,long long> >"),-1,4,"fIntegerIntCount=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<std::string,std::map<long long,long long> >"),-1,4,"fCountingIntCount=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::Algorithm */
static void G__setup_memvarHALcLcLAlgorithm(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm));
   { HAL::Algorithm *p; p=(HAL::Algorithm*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TList),-1,-1,2,"fDataList=",0,"borrowed ptr");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TString),-1,-1,4,"fName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TString),-1,-1,4,"fTitle=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TString),-1,-1,4,"fOutputFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_listlEHALcLcLAlgorithmmUcOallocatorlEHALcLcLAlgorithmmUgRsPgR),G__defined_typename("list<Algorithm*>"),-1,4,"fAlgorithms=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TString),-1,-1,4,"fOption=",0,"Option specified in ExecuteAlgo");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fHasExecuted=",0,"True if algo has executed");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fAbort=",0,"True if algo has signaled an abort");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::CutAlgorithm */
static void G__setup_memvarHALcLcLCutAlgorithm(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCutAlgorithm));
   { HAL::CutAlgorithm *p; p=(HAL::CutAlgorithm*)0x1000; if (p) { }
   G__memvar_setup((void*)0,110,0,0,-1,-1,-1,4,"fNPassed=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<long double,allocator<long double> > */
static void G__setup_memvarvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR));
   { vector<long double,allocator<long double> > *p; p=(vector<long double,allocator<long double> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > > */
static void G__setup_memvarvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   { vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > > *p; p=(vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > > */
static void G__setup_memvarvectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR));
   { vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > > *p; p=(vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > > */
static void G__setup_memvarvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   { vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > > *p; p=(vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > > */
static void G__setup_memvarvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   { vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > > *p; p=(vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* HAL::AnalysisTreeReader::BranchManager */
static void G__setup_memvarHALcLcLAnalysisTreeReadercLcLBranchManager(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLBranchManager));
   { HAL::AnalysisTreeReader::BranchManager *p; p=(HAL::AnalysisTreeReader::BranchManager*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLStorageType),-1,-1,4,"fStorageID=",0,"this will be the proprietary type to use in the ATR");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fStorageIndex=",0,"this will be the proprietary index in the deque to use in the ATR");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fScalar=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fCArray1D=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fCArray2D=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fVec1D=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fVec2D=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TString),-1,-1,4,"fBranchName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TString),-1,-1,4,"fBranchTitle=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TString),-1,-1,4,"fLeafTitle=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TString),-1,-1,4,"fType=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TString),-1,-1,4,"fScalarType=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLeafNdata=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TBranch),-1,-1,4,"fBranch=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReader),-1,-1,4,"fTreeReader=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::internal */
static void G__setup_memvarHALcLcLinternal(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternal));
   {
   }
   G__tag_memvar_reset();
}


   /* HAL::internal::ImportTLVAlgo */
static void G__setup_memvarHALcLcLinternalcLcLImportTLVAlgo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLImportTLVAlgo));
   { HAL::internal::ImportTLVAlgo *p; p=(HAL::internal::ImportTLVAlgo*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* HAL::internal::NthElementAlgo */
static void G__setup_memvarHALcLcLinternalcLcLNthElementAlgo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLNthElementAlgo));
   { HAL::internal::NthElementAlgo *p; p=(HAL::internal::NthElementAlgo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"fN=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TString),-1,-1,2,"fInput=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TString),-1,-1,2,"fElementName=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::internal::FilterTLVAlgo */
static void G__setup_memvarHALcLcLinternalcLcLFilterTLVAlgo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLFilterTLVAlgo));
   { HAL::internal::FilterTLVAlgo *p; p=(HAL::internal::FilterTLVAlgo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TString),-1,-1,2,"fInput=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::internal::ParticlesTLVCut */
static void G__setup_memvarHALcLcLinternalcLcLParticlesTLVCut(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLParticlesTLVCut));
   { HAL::internal::ParticlesTLVCut *p; p=(HAL::internal::ParticlesTLVCut*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TString),-1,-1,2,"fInput=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::internal::SingleParticleTLVStore */
static void G__setup_memvarHALcLcLinternalcLcLSingleParticleTLVStore(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLSingleParticleTLVStore));
   { HAL::internal::SingleParticleTLVStore *p; p=(HAL::internal::SingleParticleTLVStore*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TString),-1,-1,2,"fBranchName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TString),-1,-1,2,"fInput=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::internal::ParticlesTLVStore */
static void G__setup_memvarHALcLcLinternalcLcLParticlesTLVStore(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLParticlesTLVStore));
   { HAL::internal::ParticlesTLVStore *p; p=(HAL::internal::ParticlesTLVStore*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TString),-1,-1,2,"fBranchName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TString),-1,-1,2,"fInput=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::IA0000 */
static void G__setup_memvarHALcLcLIA0000(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0000));
   { HAL::IA0000 *p; p=(HAL::IA0000*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* HAL::IA0001 */
static void G__setup_memvarHALcLcLIA0001(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0001));
   { HAL::IA0001 *p; p=(HAL::IA0001*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* HAL::IA0002 */
static void G__setup_memvarHALcLcLIA0002(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0002));
   { HAL::IA0002 *p; p=(HAL::IA0002*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fNEntries=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::IA0010 */
static void G__setup_memvarHALcLcLIA0010(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0010));
   { HAL::IA0010 *p; p=(HAL::IA0010*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* HAL::IA0011 */
static void G__setup_memvarHALcLcLIA0011(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0011));
   { HAL::IA0011 *p; p=(HAL::IA0011*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* HAL::IA0012 */
static void G__setup_memvarHALcLcLIA0012(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0012));
   { HAL::IA0012 *p; p=(HAL::IA0012*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fNEntries=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::IA0020 */
static void G__setup_memvarHALcLcLIA0020(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0020));
   { HAL::IA0020 *p; p=(HAL::IA0020*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* HAL::IA0021 */
static void G__setup_memvarHALcLcLIA0021(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0021));
   { HAL::IA0021 *p; p=(HAL::IA0021*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* HAL::IA0022 */
static void G__setup_memvarHALcLcLIA0022(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0022));
   { HAL::IA0022 *p; p=(HAL::IA0022*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fNEntries=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::RA0000 */
static void G__setup_memvarHALcLcLRA0000(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLRA0000));
   { HAL::RA0000 *p; p=(HAL::RA0000*)0x1000; if (p) { }
   G__memvar_setup((void*)0,67,2,1,-1,-1,-1,4,"fParentNames=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,-1,-1,4,"fLength=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::FA0000 */
static void G__setup_memvarHALcLcLFA0000(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0000));
   { HAL::FA0000 *p; p=(HAL::FA0000*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* HAL::FA0100 */
static void G__setup_memvarHALcLcLFA0100(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0100));
   { HAL::FA0100 *p; p=(HAL::FA0100*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fValue=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::FA0101 */
static void G__setup_memvarHALcLcLFA0101(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0101));
   { HAL::FA0101 *p; p=(HAL::FA0101*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fValue=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::FA0102 */
static void G__setup_memvarHALcLcLFA0102(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0102));
   { HAL::FA0102 *p; p=(HAL::FA0102*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fValue=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::FA0103 */
static void G__setup_memvarHALcLcLFA0103(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0103));
   { HAL::FA0103 *p; p=(HAL::FA0103*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fValue=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::FA0104 */
static void G__setup_memvarHALcLcLFA0104(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0104));
   { HAL::FA0104 *p; p=(HAL::FA0104*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fValue=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::FA0110 */
static void G__setup_memvarHALcLcLFA0110(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0110));
   { HAL::FA0110 *p; p=(HAL::FA0110*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fValue=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::FA0111 */
static void G__setup_memvarHALcLcLFA0111(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0111));
   { HAL::FA0111 *p; p=(HAL::FA0111*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fValue=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::FA0112 */
static void G__setup_memvarHALcLcLFA0112(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0112));
   { HAL::FA0112 *p; p=(HAL::FA0112*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fValue=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::FA0113 */
static void G__setup_memvarHALcLcLFA0113(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0113));
   { HAL::FA0113 *p; p=(HAL::FA0113*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fValue=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::FA0114 */
static void G__setup_memvarHALcLcLFA0114(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0114));
   { HAL::FA0114 *p; p=(HAL::FA0114*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fValue=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::FA0120 */
static void G__setup_memvarHALcLcLFA0120(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0120));
   { HAL::FA0120 *p; p=(HAL::FA0120*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fLow=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fHigh=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::FA0121 */
static void G__setup_memvarHALcLcLFA0121(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0121));
   { HAL::FA0121 *p; p=(HAL::FA0121*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fLow=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fHigh=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::FA0122 */
static void G__setup_memvarHALcLcLFA0122(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0122));
   { HAL::FA0122 *p; p=(HAL::FA0122*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fLow=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fHigh=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::FA0123 */
static void G__setup_memvarHALcLcLFA0123(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0123));
   { HAL::FA0123 *p; p=(HAL::FA0123*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fLow=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fHigh=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::FA0124 */
static void G__setup_memvarHALcLcLFA0124(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0124));
   { HAL::FA0124 *p; p=(HAL::FA0124*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fLow=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fHigh=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::CA0000 */
static void G__setup_memvarHALcLcLCA0000(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0000));
   { HAL::CA0000 *p; p=(HAL::CA0000*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fCutValue=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::CA0003 */
static void G__setup_memvarHALcLcLCA0003(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0003));
   { HAL::CA0003 *p; p=(HAL::CA0003*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fCutValue=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::CA0100 */
static void G__setup_memvarHALcLcLCA0100(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0100));
   { HAL::CA0100 *p; p=(HAL::CA0100*)0x1000; if (p) { }
   G__memvar_setup((void*)0,110,0,0,-1,-1,-1,4,"fLength=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,2,1,-1,-1,-1,4,"fParticleNames=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::CA0101 */
static void G__setup_memvarHALcLcLCA0101(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0101));
   { HAL::CA0101 *p; p=(HAL::CA0101*)0x1000; if (p) { }
   G__memvar_setup((void*)0,110,0,0,-1,-1,-1,4,"fLength=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,2,1,-1,-1,-1,4,"fParticleNames=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::EA0000 */
static void G__setup_memvarHALcLcLEA0000(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0000));
   { HAL::EA0000 *p; p=(HAL::EA0000*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* HAL::EA0001 */
static void G__setup_memvarHALcLcLEA0001(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0001));
   { HAL::EA0001 *p; p=(HAL::EA0001*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* HAL::EA0002 */
static void G__setup_memvarHALcLcLEA0002(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0002));
   { HAL::EA0002 *p; p=(HAL::EA0002*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* HAL::EA0003 */
static void G__setup_memvarHALcLcLEA0003(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0003));
   { HAL::EA0003 *p; p=(HAL::EA0003*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* HAL::EA0004 */
static void G__setup_memvarHALcLcLEA0004(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0004));
   { HAL::EA0004 *p; p=(HAL::EA0004*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* HAL::EA0010 */
static void G__setup_memvarHALcLcLEA0010(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0010));
   { HAL::EA0010 *p; p=(HAL::EA0010*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* HAL::EA0011 */
static void G__setup_memvarHALcLcLEA0011(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0011));
   { HAL::EA0011 *p; p=(HAL::EA0011*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* HAL::EA0012 */
static void G__setup_memvarHALcLcLEA0012(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0012));
   { HAL::EA0012 *p; p=(HAL::EA0012*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* HAL::EA0013 */
static void G__setup_memvarHALcLcLEA0013(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0013));
   { HAL::EA0013 *p; p=(HAL::EA0013*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* HAL::EA0014 */
static void G__setup_memvarHALcLcLEA0014(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0014));
   { HAL::EA0014 *p; p=(HAL::EA0014*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* HAL::AnalysisSelector */
static void G__setup_memvarHALcLcLAnalysisSelector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisSelector));
   { HAL::AnalysisSelector *p; p=(HAL::AnalysisSelector*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fAnalysisFlow)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),-1,-1,1,"fAnalysisFlow=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fChain)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TTree),-1,-1,1,"fChain=",0,"!pointer to the analyzed TTree or TChain");
   G__memvar_setup((void*)((long)(&p->fBranchMap)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TMap),-1,-1,1,"fBranchMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TString),-1,-1,4,"fOutputFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TString),-1,-1,4,"fOutputTreeName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TString),-1,-1,4,"fOutputTreeDescription=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::Analysis */
static void G__setup_memvarHALcLcLAnalysis(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysis));
   { HAL::Analysis *p; p=(HAL::Analysis*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TChain),-1,-1,4,"fChain=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm),-1,-1,4,"fAnalysisFlow=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisSelector),-1,-1,4,"fAnalizer=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TMap),-1,-1,4,"fBranchMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::CutOptimizer */
static void G__setup_memvarHALcLcLCutOptimizer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCutOptimizer));
   { HAL::CutOptimizer *p; p=(HAL::CutOptimizer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TF2),-1,-1,4,"f=",0,"fitness function");
   }
   G__tag_memvar_reset();
}


   /* HAL::Integrator */
static void G__setup_memvarHALcLcLIntegrator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIntegrator));
   { HAL::Integrator *p; p=(HAL::Integrator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"TOL=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"toler=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-2,4,"alpha=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-2,4,"beta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-2,4,"x1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-2,4,"x2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-2,4,"x3=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-2,4,"x[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"terminate=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"out_of_tolerance=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::InterpBase */
static void G__setup_memvarHALcLcLInterpBase(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLInterpBase));
   { HAL::InterpBase *p; p=(HAL::InterpBase*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->n)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"n=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mm)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"mm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cor)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"cor=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->jsav)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"jsav=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dj)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"dj=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xx)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"xx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->yy)-(long)(p)),68,0,0,-1,G__defined_typename("Double_t"),-1,1,"yy=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::PolyInterp */
static void G__setup_memvarHALcLcLPolyInterp(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLPolyInterp));
   { HAL::PolyInterp *p; p=(HAL::PolyInterp*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"dy=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::Poly2DInterp */
static void G__setup_memvarHALcLcLPoly2DInterp(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLPoly2DInterp));
   { HAL::Poly2DInterp *p; p=(HAL::Poly2DInterp*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->y)-(long)(p)),68,2,0,-1,G__defined_typename("Double_t"),-1,1,"y=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mm=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nn=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLPolyInterp),-1,-1,4,"x1terp=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLPolyInterp),-1,-1,4,"x2terp=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HAL::PythonAlgorithm */
static void G__setup_memvarHALcLcLPythonAlgorithm(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLPythonAlgorithm));
   { HAL::PythonAlgorithm *p; p=(HAL::PythonAlgorithm*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TString),-1,-1,4,"fPyPath=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TString),-1,-1,4,"fPyFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__HAL_dictLN_TString),-1,-1,4,"fPyClass=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HAL_dictLN__object),G__defined_typename("PyObject"),-1,4,"fPySelf=",0,"! actual python object");
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarHAL_dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncHAL(void) {
   /* HAL */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HAL));
   G__memfunc_setup("makeTLVFromPtEtaPhiE",1900,G__HAL_dict_539_0_1, 85, G__get_linked_tagnum(&G__HAL_dictLN_TLorentzVector), -1, 0, 4, 1, 1, 0, 
"d - - 0 - pT d - - 0 - eta "
"d - - 0 - phi d - - 0 - e", (char*)NULL, (void*) G__func2void( (TLorentzVector* (*)(double, double, double, double))(&HAL::makeTLVFromPtEtaPhiE) ), 0);
   G__memfunc_setup("makeTLVFromPtEtaPhiM",1908,G__HAL_dict_539_0_2, 85, G__get_linked_tagnum(&G__HAL_dictLN_TLorentzVector), -1, 0, 4, 1, 1, 0, 
"d - - 0 - pT d - - 0 - eta "
"d - - 0 - phi d - - 0 - m", (char*)NULL, (void*) G__func2void( (TLorentzVector* (*)(double, double, double, double))(&HAL::makeTLVFromPtEtaPhiM) ), 0);
   G__memfunc_setup("getTH1FromFileName",1698,G__HAL_dict_539_0_3, 85, G__get_linked_tagnum(&G__HAL_dictLN_TH1), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - file_name u 'TString' - 0 - histo_name", (char*)NULL, (void*) G__func2void( (TH1* (*)(TString, TString))(&HAL::getTH1FromFileName) ), 0);
   G__memfunc_setup("getNextCombination",1874,G__HAL_dict_539_0_4, 85, G__get_linked_tagnum(&G__HAL_dictLN_TArrayI), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - size i - 'Int_t' 0 - n "
"U 'TArrayI' - 0 '0' indices", (char*)NULL, (void*) G__func2void( (TArrayI* (*)(Int_t, Int_t, TArrayI*))(&HAL::getNextCombination) ), 0);
   G__memfunc_setup("buildTH1D",801,G__HAL_dict_539_0_5, 85, G__get_linked_tagnum(&G__HAL_dictLN_TH1D), -1, 0, 7, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 '\"\"' title "
"i - 'Int_t' 0 '10' nbins d - 'Double_t' 0 '0' lowbin "
"d - 'Double_t' 0 '10' highbin u 'TString' - 0 '\"\"' xtitle "
"u 'TString' - 0 '\"\"' ytitle", (char*)NULL, (void*) G__func2void( (TH1D* (*)(TString, TString, Int_t, Double_t, Double_t, TString, TString))(&HAL::buildTH1D) ), 0);
   G__memfunc_setup("buildTH1F",803,G__HAL_dict_539_0_6, 85, G__get_linked_tagnum(&G__HAL_dictLN_TH1F), -1, 0, 7, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 '\"\"' title "
"i - 'Int_t' 0 '10' nbins d - 'Double_t' 0 '0' lowbin "
"d - 'Double_t' 0 '10' highbin u 'TString' - 0 '\"\"' xtitle "
"u 'TString' - 0 '\"\"' ytitle", (char*)NULL, (void*) G__func2void( (TH1F* (*)(TString, TString, Int_t, Double_t, Double_t, TString, TString))(&HAL::buildTH1F) ), 0);
   G__memfunc_setup("buildTH1I",806,G__HAL_dict_539_0_7, 85, G__get_linked_tagnum(&G__HAL_dictLN_TH1I), -1, 0, 7, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 '\"\"' title "
"i - 'Int_t' 0 '10' nbins d - 'Double_t' 0 '0' lowbin "
"d - 'Double_t' 0 '10' highbin u 'TString' - 0 '\"\"' xtitle "
"u 'TString' - 0 '\"\"' ytitle", (char*)NULL, (void*) G__func2void( (TH1I* (*)(TString, TString, Int_t, Double_t, Double_t, TString, TString))(&HAL::buildTH1I) ), 0);
   G__memfunc_setup("buildTH1C",800,G__HAL_dict_539_0_8, 85, G__get_linked_tagnum(&G__HAL_dictLN_TH1C), -1, 0, 7, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 '\"\"' title "
"i - 'Int_t' 0 '10' nbins d - 'Double_t' 0 '0' lowbin "
"d - 'Double_t' 0 '10' highbin u 'TString' - 0 '\"\"' xtitle "
"u 'TString' - 0 '\"\"' ytitle", (char*)NULL, (void*) G__func2void( (TH1C* (*)(TString, TString, Int_t, Double_t, Double_t, TString, TString))(&HAL::buildTH1C) ), 0);
   G__memfunc_setup("buildTH1S",816,G__HAL_dict_539_0_9, 85, G__get_linked_tagnum(&G__HAL_dictLN_TH1S), -1, 0, 7, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 '\"\"' title "
"i - 'Int_t' 0 '10' nbins d - 'Double_t' 0 '0' lowbin "
"d - 'Double_t' 0 '10' highbin u 'TString' - 0 '\"\"' xtitle "
"u 'TString' - 0 '\"\"' ytitle", (char*)NULL, (void*) G__func2void( (TH1S* (*)(TString, TString, Int_t, Double_t, Double_t, TString, TString))(&HAL::buildTH1S) ), 0);
   G__memfunc_setup("buildTH2D",802,G__HAL_dict_539_0_10, 85, G__get_linked_tagnum(&G__HAL_dictLN_TH2D), -1, 0, 11, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 '\"\"' title "
"i - 'Int_t' 0 '10' nxbins d - 'Double_t' 0 '0' lowxbin "
"d - 'Double_t' 0 '10' highxbin i - 'Int_t' 0 '10' nybins "
"d - 'Double_t' 0 '0' lowybin d - 'Double_t' 0 '10' highybin "
"u 'TString' - 0 '\"\"' xtitle u 'TString' - 0 '\"\"' ytitle "
"u 'TString' - 0 '\"\"' ztitle", (char*)NULL, (void*) G__func2void( (TH2D* (*)(TString, TString, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, TString, TString, TString))(&HAL::buildTH2D) ), 0);
   G__memfunc_setup("buildTH2F",804,G__HAL_dict_539_0_11, 85, G__get_linked_tagnum(&G__HAL_dictLN_TH2F), -1, 0, 11, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 '\"\"' title "
"i - 'Int_t' 0 '10' nxbins d - 'Double_t' 0 '0' lowxbin "
"d - 'Double_t' 0 '10' highxbin i - 'Int_t' 0 '10' nybins "
"d - 'Double_t' 0 '0' lowybin d - 'Double_t' 0 '10' highybin "
"u 'TString' - 0 '\"\"' xtitle u 'TString' - 0 '\"\"' ytitle "
"u 'TString' - 0 '\"\"' ztitle", (char*)NULL, (void*) G__func2void( (TH2F* (*)(TString, TString, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, TString, TString, TString))(&HAL::buildTH2F) ), 0);
   G__memfunc_setup("buildTH2C",801,G__HAL_dict_539_0_12, 85, G__get_linked_tagnum(&G__HAL_dictLN_TH2C), -1, 0, 11, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 '\"\"' title "
"i - 'Int_t' 0 '10' nxbins d - 'Double_t' 0 '0' lowxbin "
"d - 'Double_t' 0 '10' highxbin i - 'Int_t' 0 '10' nybins "
"d - 'Double_t' 0 '0' lowybin d - 'Double_t' 0 '10' highybin "
"u 'TString' - 0 '\"\"' xtitle u 'TString' - 0 '\"\"' ytitle "
"u 'TString' - 0 '\"\"' ztitle", (char*)NULL, (void*) G__func2void( (TH2C* (*)(TString, TString, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, TString, TString, TString))(&HAL::buildTH2C) ), 0);
   G__memfunc_setup("buildTH2I",807,G__HAL_dict_539_0_13, 85, G__get_linked_tagnum(&G__HAL_dictLN_TH2I), -1, 0, 11, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 '\"\"' title "
"i - 'Int_t' 0 '10' nxbins d - 'Double_t' 0 '0' lowxbin "
"d - 'Double_t' 0 '10' highxbin i - 'Int_t' 0 '10' nybins "
"d - 'Double_t' 0 '0' lowybin d - 'Double_t' 0 '10' highybin "
"u 'TString' - 0 '\"\"' xtitle u 'TString' - 0 '\"\"' ytitle "
"u 'TString' - 0 '\"\"' ztitle", (char*)NULL, (void*) G__func2void( (TH2I* (*)(TString, TString, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, TString, TString, TString))(&HAL::buildTH2I) ), 0);
   G__memfunc_setup("buildTH2S",817,G__HAL_dict_539_0_14, 85, G__get_linked_tagnum(&G__HAL_dictLN_TH2S), -1, 0, 11, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 '\"\"' title "
"i - 'Int_t' 0 '10' nxbins d - 'Double_t' 0 '0' lowxbin "
"d - 'Double_t' 0 '10' highxbin i - 'Int_t' 0 '10' nybins "
"d - 'Double_t' 0 '0' lowybin d - 'Double_t' 0 '10' highybin "
"u 'TString' - 0 '\"\"' xtitle u 'TString' - 0 '\"\"' ytitle "
"u 'TString' - 0 '\"\"' ztitle", (char*)NULL, (void*) G__func2void( (TH2S* (*)(TString, TString, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, TString, TString, TString))(&HAL::buildTH2S) ), 0);
   G__memfunc_setup("buildTH3D",803,G__HAL_dict_539_0_15, 85, G__get_linked_tagnum(&G__HAL_dictLN_TH3D), -1, 0, 14, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 '\"\"' title "
"i - 'Int_t' 0 '10' nxbins d - 'Double_t' 0 '0' lowxbin "
"d - 'Double_t' 0 '10' highxbin i - 'Int_t' 0 '10' nybins "
"d - 'Double_t' 0 '0' lowybin d - 'Double_t' 0 '10' highybin "
"i - 'Int_t' 0 '10' nzbins d - 'Double_t' 0 '0' lowzbin "
"d - 'Double_t' 0 '10' highzbin u 'TString' - 0 '\"\"' xtitle "
"u 'TString' - 0 '\"\"' ytitle u 'TString' - 0 '\"\"' ztitle", (char*)NULL, (void*) G__func2void( (TH3D* (*)(TString, TString, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, TString, TString, TString))(&HAL::buildTH3D) ), 0);
   G__memfunc_setup("buildTH3F",805,G__HAL_dict_539_0_16, 85, G__get_linked_tagnum(&G__HAL_dictLN_TH3F), -1, 0, 14, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 '\"\"' title "
"i - 'Int_t' 0 '10' nxbins d - 'Double_t' 0 '0' lowxbin "
"d - 'Double_t' 0 '10' highxbin i - 'Int_t' 0 '10' nybins "
"d - 'Double_t' 0 '0' lowybin d - 'Double_t' 0 '10' highybin "
"i - 'Int_t' 0 '10' nzbins d - 'Double_t' 0 '0' lowzbin "
"d - 'Double_t' 0 '10' highzbin u 'TString' - 0 '\"\"' xtitle "
"u 'TString' - 0 '\"\"' ytitle u 'TString' - 0 '\"\"' ztitle", (char*)NULL, (void*) G__func2void( (TH3F* (*)(TString, TString, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, TString, TString, TString))(&HAL::buildTH3F) ), 0);
   G__memfunc_setup("buildTH3C",802,G__HAL_dict_539_0_17, 85, G__get_linked_tagnum(&G__HAL_dictLN_TH3C), -1, 0, 14, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 '\"\"' title "
"i - 'Int_t' 0 '10' nxbins d - 'Double_t' 0 '0' lowxbin "
"d - 'Double_t' 0 '10' highxbin i - 'Int_t' 0 '10' nybins "
"d - 'Double_t' 0 '0' lowybin d - 'Double_t' 0 '10' highybin "
"i - 'Int_t' 0 '10' nzbins d - 'Double_t' 0 '0' lowzbin "
"d - 'Double_t' 0 '10' highzbin u 'TString' - 0 '\"\"' xtitle "
"u 'TString' - 0 '\"\"' ytitle u 'TString' - 0 '\"\"' ztitle", (char*)NULL, (void*) G__func2void( (TH3C* (*)(TString, TString, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, TString, TString, TString))(&HAL::buildTH3C) ), 0);
   G__memfunc_setup("buildTH3I",808,G__HAL_dict_539_0_18, 85, G__get_linked_tagnum(&G__HAL_dictLN_TH3I), -1, 0, 14, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 '\"\"' title "
"i - 'Int_t' 0 '10' nxbins d - 'Double_t' 0 '0' lowxbin "
"d - 'Double_t' 0 '10' highxbin i - 'Int_t' 0 '10' nybins "
"d - 'Double_t' 0 '0' lowybin d - 'Double_t' 0 '10' highybin "
"i - 'Int_t' 0 '10' nzbins d - 'Double_t' 0 '0' lowzbin "
"d - 'Double_t' 0 '10' highzbin u 'TString' - 0 '\"\"' xtitle "
"u 'TString' - 0 '\"\"' ytitle u 'TString' - 0 '\"\"' ztitle", (char*)NULL, (void*) G__func2void( (TH3I* (*)(TString, TString, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, TString, TString, TString))(&HAL::buildTH3I) ), 0);
   G__memfunc_setup("buildTH3S",818,G__HAL_dict_539_0_19, 85, G__get_linked_tagnum(&G__HAL_dictLN_TH3S), -1, 0, 14, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 '\"\"' title "
"i - 'Int_t' 0 '10' nxbins d - 'Double_t' 0 '0' lowxbin "
"d - 'Double_t' 0 '10' highxbin i - 'Int_t' 0 '10' nybins "
"d - 'Double_t' 0 '0' lowybin d - 'Double_t' 0 '10' highybin "
"i - 'Int_t' 0 '10' nzbins d - 'Double_t' 0 '0' lowzbin "
"d - 'Double_t' 0 '10' highzbin u 'TString' - 0 '\"\"' xtitle "
"u 'TString' - 0 '\"\"' ytitle u 'TString' - 0 '\"\"' ztitle", (char*)NULL, (void*) G__func2void( (TH3S* (*)(TString, TString, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, TString, TString, TString))(&HAL::buildTH3S) ), 0);
   G__memfunc_setup("standardLegendFormat",2057,G__HAL_dict_539_0_20, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TLegend' - 0 - l i - 'Int_t' 0 '0' shadow "
"s - 'Color_t' 0 '0' fill i - 'Int_t' 0 '22' textAlign", (char*)NULL, (void*) G__func2void( (void (*)(TLegend*, Int_t, Color_t, Int_t))(&HAL::standardLegendFormat) ), 0);
   G__memfunc_setup("standardHistogramStackFormat",2910,G__HAL_dict_539_0_21, 121, -1, -1, 0, 7, 1, 1, 0, 
"U 'THStack' - 0 - s u 'TString' - 0 - xlabel "
"u 'TString' - 0 - ylabel d - 'Double_t' 0 - minAxis "
"d - 'Double_t' 0 - maxAxis d - 'Double_t' 0 '5.0' binWidth "
"d - 'Double_t' 0 '0.5' lineWidth", (char*)NULL, (void*) G__func2void( (void (*)(THStack*, TString, TString, Double_t, Double_t, Double_t, Double_t))(&HAL::standardHistogramStackFormat) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLAnalysisData(void) {
   /* HAL::AnalysisData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisData));
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_1, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - - g - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - - q - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - n d - - 0 - v", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - n f - - 0 - v", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - - n - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - n s - - 0 - v", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - n l - - 0 - v", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - n i - - 0 - v", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - n c - - 0 - v", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - - m - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - n r - - 0 - v", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - n k - - 0 - v", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - n h - - 0 - v", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - n b - - 0 - v", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - - u 'string' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - n u 'TString' - 0 - v", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - - U 'TObject' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_18, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - - g - - 0 - - "
"n - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_19, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - - q - - 0 - - "
"n - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_20, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - n d - - 0 - v "
"n - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_21, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - n f - - 0 - v "
"n - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_22, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - - n - - 0 - - "
"n - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_23, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - n s - - 0 - v "
"n - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_24, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - n l - - 0 - v "
"n - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_25, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - n i - - 0 - v "
"n - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - n c - - 0 - v "
"n - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - - m - - 0 - - "
"n - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_28, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - n r - - 0 - v "
"n - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_29, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - n k - - 0 - v "
"n - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_30, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - n h - - 0 - v "
"n - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_31, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - n b - - 0 - v "
"n - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_32, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - - u 'string' - 0 - - "
"n - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_33, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - n u 'TString' - 0 - v "
"n - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_34, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - - U 'TObject' - 0 - - "
"n - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_35, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - - g - - 0 - - "
"n - - 0 - - n - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_36, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - - q - - 0 - - "
"n - - 0 - - n - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_37, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - n d - - 0 - v "
"n - - 0 - i n - - 0 - j", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_38, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - n f - - 0 - v "
"n - - 0 - i n - - 0 - j", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_39, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - - n - - 0 - - "
"n - - 0 - - n - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_40, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - n s - - 0 - v "
"n - - 0 - i n - - 0 - j", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_41, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - n l - - 0 - v "
"n - - 0 - i n - - 0 - j", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_42, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - n i - - 0 - v "
"n - - 0 - i n - - 0 - j", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_43, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - n c - - 0 - v "
"n - - 0 - i n - - 0 - j", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_44, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - - m - - 0 - - "
"n - - 0 - - n - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_45, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - n r - - 0 - v "
"n - - 0 - i n - - 0 - j", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_46, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - n k - - 0 - v "
"n - - 0 - i n - - 0 - j", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_47, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - n h - - 0 - v "
"n - - 0 - i n - - 0 - j", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_48, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - n b - - 0 - v "
"n - - 0 - i n - - 0 - j", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_49, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - - u 'string' - 0 - - "
"n - - 0 - - n - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_50, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - n u 'TString' - 0 - v "
"n - - 0 - i n - - 0 - j", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,G__HAL_dict_633_0_51, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - - U 'TObject' - 0 - - "
"n - - 0 - - n - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBool",684,G__HAL_dict_633_0_52, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - - n - - 0 '-1' i "
"n - - 0 '-1' j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDecimal",975,G__HAL_dict_633_0_53, 113, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - - n - - 0 '-1' i "
"n - - 0 '-1' j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInteger",1006,G__HAL_dict_633_0_54, 110, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - - n - - 0 '-1' i "
"n - - 0 '-1' j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCounting",1127,G__HAL_dict_633_0_55, 109, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - - n - - 0 '-1' i "
"n - - 0 '-1' j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetString",919,G__HAL_dict_633_0_56, 117, G__get_linked_tagnum(&G__HAL_dictLN_string), -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - - n - - 0 '-1' i "
"n - - 0 '-1' j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTObject",971,G__HAL_dict_633_0_57, 85, G__get_linked_tagnum(&G__HAL_dictLN_TObject), -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - - n - - 0 '-1' i "
"n - - 0 '-1' j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Exists",640,G__HAL_dict_633_0_58, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - n n - - 0 '-1' i "
"n - - 0 '-1' j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TypeDim",700,G__HAL_dict_633_0_59, 104, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSimilarNames",1509,G__HAL_dict_633_0_60, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 2, 1, 1, 0, 
"u 'string' - 0 - n h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopyValues",1035,G__HAL_dict_633_0_61, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - from u 'string' - 0 - to", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SwapValues",1035,G__HAL_dict_633_0_62, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - n n - - 0 - i "
"n - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__HAL_dict_633_0_63, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveNameAndData",1660,G__HAL_dict_633_0_64, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveData",1000,G__HAL_dict_633_0_65, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveAllAssociatedData",2305,G__HAL_dict_633_0_66, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__HAL_dict_633_0_67, 85, G__get_linked_tagnum(&G__HAL_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HAL::AnalysisData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__HAL_dict_633_0_68, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HAL::AnalysisData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__HAL_dict_633_0_69, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HAL::AnalysisData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__HAL_dict_633_0_70, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HAL::AnalysisData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__HAL_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__HAL_dict_633_0_74, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__HAL_dict_633_0_75, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HAL::AnalysisData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__HAL_dict_633_0_76, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HAL::AnalysisData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__HAL_dict_633_0_77, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HAL::AnalysisData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__HAL_dict_633_0_78, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HAL::AnalysisData::DeclFileLine) ), 0);
   G__memfunc_setup("NameAlreadyStored",1716,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 0, "u 'string' - 0 - n", (char*)NULL, (void*) NULL, 0);
   // automatic default constructor
   G__memfunc_setup("AnalysisData", 1214, G__HAL_dict_633_0_80, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisData), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("AnalysisData", 1214, G__HAL_dict_633_0_81, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisData), -1, 0, 1, 1, 1, 0, "u 'HAL::AnalysisData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~AnalysisData", 1340, G__HAL_dict_633_0_82, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_633_0_83, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisData), -1, 1, 1, 1, 1, 0, "u 'HAL::AnalysisData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLAnalysisTreeReader(void) {
   /* HAL::AnalysisTreeReader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReader));
   G__memfunc_setup("AnalysisTreeReader",1831,G__HAL_dict_634_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReader), -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 '0' tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTree",700,G__HAL_dict_634_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEntry",830,G__HAL_dict_634_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTree",688,G__HAL_dict_634_0_4, 85, G__get_linked_tagnum(&G__HAL_dictLN_TTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBranchMap",1176,G__HAL_dict_634_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TMap' - 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDim",570,G__HAL_dict_634_0_6, 104, -1, -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - branchname i - 'Int_t' 0 '-1' idx_1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBool",684,G__HAL_dict_634_0_7, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'TString' - 0 - branchname i - 'Int_t' 0 '-1' idx_1 "
"i - 'Int_t' 0 '-1' idx_2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInteger",1006,G__HAL_dict_634_0_8, 110, -1, -1, 0, 3, 1, 1, 0, 
"u 'TString' - 0 - branchname i - 'Int_t' 0 '-1' idx_1 "
"i - 'Int_t' 0 '-1' idx_2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCounting",1127,G__HAL_dict_634_0_9, 109, -1, -1, 0, 3, 1, 1, 0, 
"u 'TString' - 0 - branchname i - 'Int_t' 0 '-1' idx_1 "
"i - 'Int_t' 0 '-1' idx_2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDecimal",975,G__HAL_dict_634_0_10, 113, -1, -1, 0, 3, 1, 1, 0, 
"u 'TString' - 0 - branchname i - 'Int_t' 0 '-1' idx_1 "
"i - 'Int_t' 0 '-1' idx_2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetString",919,G__HAL_dict_634_0_11, 117, G__get_linked_tagnum(&G__HAL_dictLN_TString), -1, 0, 3, 1, 1, 0, 
"u 'TString' - 0 - branchname i - 'Int_t' 0 '-1' idx_1 "
"i - 'Int_t' 0 '-1' idx_2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetObjArray",1082,G__HAL_dict_634_0_12, 117, G__get_linked_tagnum(&G__HAL_dictLN_TObjArray), -1, 1, 2, 1, 1, 0, 
"u 'TString' - 0 - branchname i - 'Int_t' 0 '-1' idx_1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClonesArray",1411,G__HAL_dict_634_0_13, 117, G__get_linked_tagnum(&G__HAL_dictLN_TClonesArray), -1, 1, 2, 1, 1, 0, 
"u 'TString' - 0 - branchname i - 'Int_t' 0 '-1' idx_1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRef",573,G__HAL_dict_634_0_14, 117, G__get_linked_tagnum(&G__HAL_dictLN_TRef), -1, 1, 3, 1, 1, 0, 
"u 'TString' - 0 - branchname i - 'Int_t' 0 '-1' idx_1 "
"i - 'Int_t' 0 '-1' idx_2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRefArray",1084,G__HAL_dict_634_0_15, 117, G__get_linked_tagnum(&G__HAL_dictLN_TRefArray), -1, 1, 2, 1, 1, 0, 
"u 'TString' - 0 - branchname i - 'Int_t' 0 '-1' idx_1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__HAL_dict_634_0_16, 85, G__get_linked_tagnum(&G__HAL_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HAL::AnalysisTreeReader::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__HAL_dict_634_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HAL::AnalysisTreeReader::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__HAL_dict_634_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HAL::AnalysisTreeReader::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__HAL_dict_634_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HAL::AnalysisTreeReader::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__HAL_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__HAL_dict_634_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__HAL_dict_634_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HAL::AnalysisTreeReader::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__HAL_dict_634_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HAL::AnalysisTreeReader::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__HAL_dict_634_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HAL::AnalysisTreeReader::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__HAL_dict_634_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HAL::AnalysisTreeReader::DeclFileLine) ), 0);
   G__memfunc_setup("GetFullBranchName",1666,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__HAL_dictLN_TString), -1, 0, 1, 1, 4, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("AnalysisTreeReader", 1831, G__HAL_dict_634_0_29, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReader), -1, 0, 1, 1, 1, 0, "u 'HAL::AnalysisTreeReader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~AnalysisTreeReader", 1957, G__HAL_dict_634_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_634_0_31, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReader), -1, 1, 1, 1, 1, 0, "u 'HAL::AnalysisTreeReader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLAnalysisTreeWriter(void) {
   /* HAL::AnalysisTreeWriter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeWriter));
   G__memfunc_setup("AnalysisTreeWriter",1873,G__HAL_dict_635_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeWriter), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - ofile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTreeName",1085,G__HAL_dict_635_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - tname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTreeDescription",1856,G__HAL_dict_635_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - tdescription", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IncrementCount",1454,G__HAL_dict_635_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteData",901,G__HAL_dict_635_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetValue",809,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - n g - - 0 - v", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - n g - - 0 - v "
"n - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - n q - - 0 - v", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - n q - - 0 - v "
"n - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - n n - - 0 - v", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - n n - - 0 - v "
"n - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - n m - - 0 - v", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetValue",809,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - n m - - 0 - v "
"n - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__HAL_dict_635_0_14, 85, G__get_linked_tagnum(&G__HAL_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HAL::AnalysisTreeWriter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__HAL_dict_635_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HAL::AnalysisTreeWriter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__HAL_dict_635_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HAL::AnalysisTreeWriter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__HAL_dict_635_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HAL::AnalysisTreeWriter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__HAL_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__HAL_dict_635_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__HAL_dict_635_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HAL::AnalysisTreeWriter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__HAL_dict_635_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HAL::AnalysisTreeWriter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__HAL_dict_635_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HAL::AnalysisTreeWriter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__HAL_dict_635_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HAL::AnalysisTreeWriter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("AnalysisTreeWriter", 1873, G__HAL_dict_635_0_26, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeWriter), -1, 0, 1, 1, 1, 0, "u 'HAL::AnalysisTreeWriter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~AnalysisTreeWriter", 1999, G__HAL_dict_635_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_635_0_28, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeWriter), -1, 1, 1, 1, 1, 0, "u 'HAL::AnalysisTreeWriter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLAlgorithm(void) {
   /* HAL::Algorithm */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm));
   G__memfunc_setup("Algorithm",935,G__HAL_dict_636_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 '\"\"' name u 'TString' - 0 '\"\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Algorithm",935,G__HAL_dict_636_0_2, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm), -1, 0, 1, 1, 1, 0, "u 'HAL::Algorithm' - 11 - algo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__HAL_dict_636_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HAL::Algorithm' - 0 - algo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ls",223,G__HAL_dict_636_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteAlgos",1097,G__HAL_dict_636_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetName",685,G__HAL_dict_636_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTitle",814,G__HAL_dict_636_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOutputFileName",1726,G__HAL_dict_636_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Abort",504,G__HAL_dict_636_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CleanAlgos",985,G__HAL_dict_636_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExecuteAlgo",1110,G__HAL_dict_636_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"0\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExecuteAlgos",1225,G__HAL_dict_636_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeAlgo",1429,G__HAL_dict_636_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BeginAlgo",872,G__HAL_dict_636_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SlaveBeginAlgo",1379,G__HAL_dict_636_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SlaveTerminateAlgo",1831,G__HAL_dict_636_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TerminateAlgo",1324,G__HAL_dict_636_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddData",643,G__HAL_dict_636_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - name U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetData",666,G__HAL_dict_636_0_19, 85, G__get_linked_tagnum(&G__HAL_dictLN_TObject), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckData",856,G__HAL_dict_636_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteData",973,G__HAL_dict_636_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AssignDataList",1403,G__HAL_dict_636_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 - list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,G__HAL_dict_636_0_23, 117, G__get_linked_tagnum(&G__HAL_dictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTitle",802,G__HAL_dict_636_0_24, 117, G__get_linked_tagnum(&G__HAL_dictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOutputFileName",1714,G__HAL_dict_636_0_25, 117, G__get_linked_tagnum(&G__HAL_dictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawData",964,G__HAL_dict_636_0_26, 85, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReader), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUserData",1081,G__HAL_dict_636_0_27, 85, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUserOutput",1360,G__HAL_dict_636_0_28, 85, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeWriter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Begin",485,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SlaveBegin",992,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Exec",389,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SlaveTerminate",1444,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Terminate",937,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ls",223,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'TString' - 0 - indention", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__HAL_dict_636_0_37, 85, G__get_linked_tagnum(&G__HAL_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HAL::Algorithm::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__HAL_dict_636_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HAL::Algorithm::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__HAL_dict_636_0_39, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HAL::Algorithm::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__HAL_dict_636_0_40, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HAL::Algorithm::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__HAL_dict_636_0_41, 85, G__get_linked_tagnum(&G__HAL_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__HAL_dict_636_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__HAL_dict_636_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__HAL_dict_636_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__HAL_dict_636_0_45, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HAL::Algorithm::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__HAL_dict_636_0_46, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HAL::Algorithm::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__HAL_dict_636_0_47, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HAL::Algorithm::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__HAL_dict_636_0_48, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HAL::Algorithm::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Algorithm", 1061, G__HAL_dict_636_0_49, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_636_0_50, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAlgorithm), -1, 1, 1, 1, 1, 0, "u 'HAL::Algorithm' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLCutAlgorithm(void) {
   /* HAL::CutAlgorithm */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCutAlgorithm));
   G__memfunc_setup("CutAlgorithm",1235,G__HAL_dict_641_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCutAlgorithm), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 '\"\"' name u 'TString' - 0 '\"\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberPassed",1513,G__HAL_dict_641_0_2, 110, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Passed",608,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("CutAlgorithm", 1235, G__HAL_dict_641_0_4, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCutAlgorithm), -1, 0, 1, 1, 1, 0, "u 'HAL::CutAlgorithm' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CutAlgorithm", 1361, G__HAL_dict_641_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_641_0_6, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCutAlgorithm), -1, 1, 1, 1, 1, 0, "u 'HAL::CutAlgorithm' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR(void) {
   /* vector<long double,allocator<long double> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR));
   G__memfunc_setup("at",213,G__HAL_dict_982_0_1, 113, -1, G__defined_typename("vector<long double,allocator<long double> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<long double,allocator<long double> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__HAL_dict_982_0_2, 113, -1, G__defined_typename("vector<long double,allocator<long double> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<long double,allocator<long double> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__HAL_dict_982_0_3, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__HAL_dict_982_0_4, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__HAL_dict_982_0_5, 117, G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcLcLiteratorgR), G__defined_typename("vector<long double,allocator<long double> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__HAL_dict_982_0_6, 117, G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcLcLiteratorgR), G__defined_typename("vector<long double,allocator<long double> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__HAL_dict_982_0_7, 107, -1, G__defined_typename("vector<long double,allocator<long double> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__HAL_dict_982_0_8, 107, -1, G__defined_typename("vector<long double,allocator<long double> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__HAL_dict_982_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<long double,allocator<long double> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__HAL_dict_982_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<long double,allocator<long double> >::size_type' 0 - sz q - - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__HAL_dict_982_0_11, 107, -1, G__defined_typename("vector<long double,allocator<long double> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__HAL_dict_982_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__HAL_dict_982_0_13, 113, -1, G__defined_typename("vector<long double,allocator<long double> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<long double,allocator<long double> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__HAL_dict_982_0_14, 113, -1, G__defined_typename("vector<long double,allocator<long double> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<long double,allocator<long double> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<long double,allocator<long double> >",4138,G__HAL_dict_982_0_15, 105, G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<long double,allocator<long double> >",4138,G__HAL_dict_982_0_16, 105, G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<long double,allocator<long double> >::size_type' 0 - n q - - 11 '(long double)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<long double,allocator<long double> >",4138,G__HAL_dict_982_0_17, 105, G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<long double,allocator<long double> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<long double,allocator<long double> >",4138,G__HAL_dict_982_0_18, 105, G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<long double,allocator<long double> >::iterator' 'vector<long double,allocator<long double> >::const_iterator' 10 - first u 'vector<long double,allocator<long double> >::iterator' 'vector<long double,allocator<long double> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__HAL_dict_982_0_19, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<long double,allocator<long double> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__HAL_dict_982_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<long double,allocator<long double> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__HAL_dict_982_0_21, 113, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__HAL_dict_982_0_22, 113, -1, -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__HAL_dict_982_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "q - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__HAL_dict_982_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<long double,allocator<long double> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__HAL_dict_982_0_25, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<long double,allocator<long double> >::iterator' - 0 - position q - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__HAL_dict_982_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<long double,allocator<long double> >::iterator' - 0 - position u 'vector<long double,allocator<long double> >::iterator' 'vector<long double,allocator<long double> >::const_iterator' 10 - first "
"u 'vector<long double,allocator<long double> >::iterator' 'vector<long double,allocator<long double> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__HAL_dict_982_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<long double,allocator<long double> >::iterator' - 0 - position k - 'vector<long double,allocator<long double> >::size_type' 0 - n "
"q - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__HAL_dict_982_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__HAL_dict_982_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<long double,allocator<long double> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__HAL_dict_982_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<long double,allocator<long double> >::iterator' - 0 - first u 'vector<long double,allocator<long double> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__HAL_dict_982_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<long double,allocator<long double> >", 4264, G__HAL_dict_982_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR(void) {
   /* vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__HAL_dict_1032_0_1, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEboolcOallocatorlEboolgRsPgR), G__defined_typename("vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__HAL_dict_1032_0_2, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEboolcOallocatorlEboolgRsPgR), G__defined_typename("vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__HAL_dict_1032_0_3, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__HAL_dict_1032_0_4, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__HAL_dict_1032_0_5, 117, G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__HAL_dict_1032_0_6, 117, G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__HAL_dict_1032_0_7, 107, -1, G__defined_typename("vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__HAL_dict_1032_0_8, 107, -1, G__defined_typename("vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__HAL_dict_1032_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__HAL_dict_1032_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type' 0 - sz u 'vector<bool,allocator<bool> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__HAL_dict_1032_0_11, 107, -1, G__defined_typename("vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__HAL_dict_1032_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__HAL_dict_1032_0_13, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEboolcOallocatorlEboolgRsPgR), G__defined_typename("vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__HAL_dict_1032_0_14, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEboolcOallocatorlEboolgRsPgR), G__defined_typename("vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >",7564,G__HAL_dict_1032_0_15, 105, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >",7564,G__HAL_dict_1032_0_16, 105, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type' 0 - n u 'vector<bool,allocator<bool> >' - 11 '(vector<bool,allocator<bool> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >",7564,G__HAL_dict_1032_0_17, 105, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >",7564,G__HAL_dict_1032_0_18, 105, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator' 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::const_iterator' 10 - first u 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator' 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__HAL_dict_1032_0_19, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__HAL_dict_1032_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__HAL_dict_1032_0_21, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEboolcOallocatorlEboolgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__HAL_dict_1032_0_22, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEboolcOallocatorlEboolgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__HAL_dict_1032_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<bool,allocator<bool> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__HAL_dict_1032_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__HAL_dict_1032_0_25, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator' - 0 - position u 'vector<bool,allocator<bool> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__HAL_dict_1032_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator' - 0 - position u 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator' 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::const_iterator' 10 - first "
"u 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator' 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__HAL_dict_1032_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator' - 0 - position k - 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::size_type' 0 - n "
"u 'vector<bool,allocator<bool> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__HAL_dict_1032_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__HAL_dict_1032_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__HAL_dict_1032_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator' - 0 - first u 'vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__HAL_dict_1032_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >", 7690, G__HAL_dict_1032_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR(void) {
   /* vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__HAL_dict_1039_0_1, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR), G__defined_typename("vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__HAL_dict_1039_0_2, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR), G__defined_typename("vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__HAL_dict_1039_0_3, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__HAL_dict_1039_0_4, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__HAL_dict_1039_0_5, 117, G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__HAL_dict_1039_0_6, 117, G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__HAL_dict_1039_0_7, 107, -1, G__defined_typename("vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__HAL_dict_1039_0_8, 107, -1, G__defined_typename("vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__HAL_dict_1039_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__HAL_dict_1039_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::size_type' 0 - sz u 'vector<long double,allocator<long double> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__HAL_dict_1039_0_11, 107, -1, G__defined_typename("vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__HAL_dict_1039_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__HAL_dict_1039_0_13, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR), G__defined_typename("vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__HAL_dict_1039_0_14, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR), G__defined_typename("vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >",10248,G__HAL_dict_1039_0_15, 105, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >",10248,G__HAL_dict_1039_0_16, 105, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::size_type' 0 - n u 'vector<long double,allocator<long double> >' - 11 '(vector<long double,allocator<long double> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >",10248,G__HAL_dict_1039_0_17, 105, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >",10248,G__HAL_dict_1039_0_18, 105, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::iterator' 'vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::const_iterator' 10 - first u 'vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::iterator' 'vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__HAL_dict_1039_0_19, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__HAL_dict_1039_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__HAL_dict_1039_0_21, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__HAL_dict_1039_0_22, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__HAL_dict_1039_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<long double,allocator<long double> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__HAL_dict_1039_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__HAL_dict_1039_0_25, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::iterator' - 0 - position u 'vector<long double,allocator<long double> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__HAL_dict_1039_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::iterator' - 0 - position u 'vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::iterator' 'vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::const_iterator' 10 - first "
"u 'vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::iterator' 'vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__HAL_dict_1039_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::iterator' - 0 - position k - 'vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::size_type' 0 - n "
"u 'vector<long double,allocator<long double> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__HAL_dict_1039_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__HAL_dict_1039_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__HAL_dict_1039_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::iterator' - 0 - first u 'vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__HAL_dict_1039_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >", 10374, G__HAL_dict_1039_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR(void) {
   /* vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__HAL_dict_1046_0_1, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR), G__defined_typename("vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__HAL_dict_1046_0_2, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR), G__defined_typename("vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__HAL_dict_1046_0_3, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__HAL_dict_1046_0_4, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__HAL_dict_1046_0_5, 117, G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__HAL_dict_1046_0_6, 117, G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__HAL_dict_1046_0_7, 107, -1, G__defined_typename("vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__HAL_dict_1046_0_8, 107, -1, G__defined_typename("vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__HAL_dict_1046_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__HAL_dict_1046_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type' 0 - sz u 'vector<long long,allocator<long long> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__HAL_dict_1046_0_11, 107, -1, G__defined_typename("vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__HAL_dict_1046_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__HAL_dict_1046_0_13, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR), G__defined_typename("vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__HAL_dict_1046_0_14, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR), G__defined_typename("vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >",9436,G__HAL_dict_1046_0_15, 105, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >",9436,G__HAL_dict_1046_0_16, 105, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type' 0 - n u 'vector<long long,allocator<long long> >' - 11 '(vector<long long,allocator<long long> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >",9436,G__HAL_dict_1046_0_17, 105, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >",9436,G__HAL_dict_1046_0_18, 105, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator' 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::const_iterator' 10 - first u 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator' 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__HAL_dict_1046_0_19, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__HAL_dict_1046_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__HAL_dict_1046_0_21, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__HAL_dict_1046_0_22, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__HAL_dict_1046_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<long long,allocator<long long> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__HAL_dict_1046_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__HAL_dict_1046_0_25, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator' - 0 - position u 'vector<long long,allocator<long long> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__HAL_dict_1046_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator' - 0 - position u 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator' 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::const_iterator' 10 - first "
"u 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator' 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__HAL_dict_1046_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator' - 0 - position k - 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::size_type' 0 - n "
"u 'vector<long long,allocator<long long> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__HAL_dict_1046_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__HAL_dict_1046_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__HAL_dict_1046_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator' - 0 - first u 'vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__HAL_dict_1046_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >", 9562, G__HAL_dict_1046_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR(void) {
   /* vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__HAL_dict_1053_0_1, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR), G__defined_typename("vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__HAL_dict_1053_0_2, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR), G__defined_typename("vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__HAL_dict_1053_0_3, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__HAL_dict_1053_0_4, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__HAL_dict_1053_0_5, 117, G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__HAL_dict_1053_0_6, 117, G__get_linked_tagnum(&G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__HAL_dict_1053_0_7, 107, -1, G__defined_typename("vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__HAL_dict_1053_0_8, 107, -1, G__defined_typename("vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__HAL_dict_1053_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__HAL_dict_1053_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type' 0 - sz u 'vector<unsigned long long,allocator<unsigned long long> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__HAL_dict_1053_0_11, 107, -1, G__defined_typename("vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__HAL_dict_1053_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__HAL_dict_1053_0_13, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR), G__defined_typename("vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__HAL_dict_1053_0_14, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR), G__defined_typename("vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >",13008,G__HAL_dict_1053_0_15, 105, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >",13008,G__HAL_dict_1053_0_16, 105, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type' 0 - n u 'vector<unsigned long long,allocator<unsigned long long> >' - 11 '(vector<unsigned long long,allocator<unsigned long long> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >",13008,G__HAL_dict_1053_0_17, 105, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >",13008,G__HAL_dict_1053_0_18, 105, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator' 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::const_iterator' 10 - first u 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator' 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__HAL_dict_1053_0_19, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__HAL_dict_1053_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__HAL_dict_1053_0_21, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__HAL_dict_1053_0_22, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__HAL_dict_1053_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned long long,allocator<unsigned long long> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__HAL_dict_1053_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__HAL_dict_1053_0_25, 117, G__get_linked_tagnum(&G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator' - 0 - position u 'vector<unsigned long long,allocator<unsigned long long> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__HAL_dict_1053_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator' - 0 - position u 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator' 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::const_iterator' 10 - first "
"u 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator' 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__HAL_dict_1053_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator' - 0 - position k - 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::size_type' 0 - n "
"u 'vector<unsigned long long,allocator<unsigned long long> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__HAL_dict_1053_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__HAL_dict_1053_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__HAL_dict_1053_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator' - 0 - first u 'vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__HAL_dict_1053_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >", 13134, G__HAL_dict_1053_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLAnalysisTreeReadercLcLBranchManager(void) {
   /* HAL::AnalysisTreeReader::BranchManager */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLBranchManager));
   G__memfunc_setup("BranchManager",1289,G__HAL_dict_1074_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLBranchManager), -1, 0, 1, 1, 1, 0, "U 'HAL::AnalysisTreeReader' - 0 '0' tr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,G__HAL_dict_1074_0_2, 117, G__get_linked_tagnum(&G__HAL_dictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFullType",1109,G__HAL_dict_1074_0_3, 117, G__get_linked_tagnum(&G__HAL_dictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScalarType",1304,G__HAL_dict_1074_0_4, 117, G__get_linked_tagnum(&G__HAL_dictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsScalar",786,G__HAL_dict_1074_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsCArray1D",883,G__HAL_dict_1074_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsCArray2D",884,G__HAL_dict_1074_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsVec1D",591,G__HAL_dict_1074_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsVec2D",592,G__HAL_dict_1074_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Create",596,G__HAL_dict_1074_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - branchname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEntry",830,G__HAL_dict_1074_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStorageType",1431,G__HAL_dict_1074_0_12, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLStorageType), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStorageIndex",1517,G__HAL_dict_1074_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArrayLength",1409,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "i - 'Int_t' 0 - dim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindTypeInformation",1961,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("BranchManager", 1289, G__HAL_dict_1074_0_16, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLBranchManager), -1, 0, 1, 1, 1, 0, "u 'HAL::AnalysisTreeReader::BranchManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BranchManager", 1415, G__HAL_dict_1074_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1074_0_18, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLBranchManager), -1, 1, 1, 1, 1, 0, "u 'HAL::AnalysisTreeReader::BranchManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLinternal(void) {
   /* HAL::internal */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternal));
   G__memfunc_setup("determineAccessProtocol",2401,G__HAL_dict_1079_0_1, 103, -1, -1, 0, 3, 1, 1, 0, 
"U 'HAL::AnalysisData' - 0 - data u 'TString' - 1 - RawInput "
"u 'TString' - 1 - RealInput", (char*)NULL, (void*) G__func2void( (bool (*)(HAL::AnalysisData*, TString&, TString&))(&HAL::internal::determineAccessProtocol) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLinternalcLcLImportTLVAlgo(void) {
   /* HAL::internal::ImportTLVAlgo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLImportTLVAlgo));
   G__memfunc_setup("Exec",389,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Exec",389,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeTLV",628,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__HAL_dictLN_TLorentzVector), -1, 0, 1, 1, 2, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 3);
   // automatic destructor
   G__memfunc_setup("~ImportTLVAlgo", 1394, G__HAL_dict_1080_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1080_0_7, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLImportTLVAlgo), -1, 1, 1, 1, 1, 0, "u 'HAL::internal::ImportTLVAlgo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLinternalcLcLNthElementAlgo(void) {
   /* HAL::internal::NthElementAlgo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLNthElementAlgo));
   G__memfunc_setup("SortTag",708,G__HAL_dict_1081_0_2, 117, G__get_linked_tagnum(&G__HAL_dictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("operator()",957,G__HAL_dict_1081_0_3, 103, -1, -1, 0, 2, 1, 1, 0, 
"n - - 0 - - n - - 0 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Sort",424,G__HAL_dict_1081_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<long long,allocator<long long> >' 'vector<long long>' 1 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Exec",389,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~NthElementAlgo", 1525, G__HAL_dict_1081_0_7, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1081_0_8, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLNthElementAlgo), -1, 1, 1, 1, 1, 0, "u 'HAL::internal::NthElementAlgo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLinternalcLcLFilterTLVAlgo(void) {
   /* HAL::internal::FilterTLVAlgo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLFilterTLVAlgo));
   G__memfunc_setup("FilterPredicate",1527,G__HAL_dict_1082_0_2, 103, -1, -1, 0, 1, 1, 1, 0, "U 'TLorentzVector' - 0 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Exec",389,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~FilterTLVAlgo", 1373, G__HAL_dict_1082_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1082_0_6, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLFilterTLVAlgo), -1, 1, 1, 1, 1, 0, "u 'HAL::internal::FilterTLVAlgo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLinternalcLcLParticlesTLVCut(void) {
   /* HAL::internal::ParticlesTLVCut */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLParticlesTLVCut));
   G__memfunc_setup("CutPredicate",1213,G__HAL_dict_1083_0_2, 103, -1, -1, 0, 1, 1, 1, 0, "U 'TLorentzVector' - 0 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Exec",389,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~ParticlesTLVCut", 1607, G__HAL_dict_1083_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1083_0_5, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLParticlesTLVCut), -1, 1, 1, 1, 1, 0, "u 'HAL::internal::ParticlesTLVCut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLinternalcLcLSingleParticleTLVStore(void) {
   /* HAL::internal::SingleParticleTLVStore */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLSingleParticleTLVStore));
   G__memfunc_setup("Exec",389,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StoreValue",1034,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 2, 0, "U 'TLorentzVector' - 0 - -", (char*)NULL, (void*) NULL, 3);
   // automatic destructor
   G__memfunc_setup("~SingleParticleTLVStore", 2327, G__HAL_dict_1084_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1084_0_5, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLSingleParticleTLVStore), -1, 1, 1, 1, 1, 0, "u 'HAL::internal::SingleParticleTLVStore' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLinternalcLcLParticlesTLVStore(void) {
   /* HAL::internal::ParticlesTLVStore */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLParticlesTLVStore));
   G__memfunc_setup("Exec",389,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StoreValue",1034,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 2, 0, "U 'TLorentzVector' - 0 - -", (char*)NULL, (void*) NULL, 3);
   // automatic destructor
   G__memfunc_setup("~ParticlesTLVStore", 1832, G__HAL_dict_1085_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1085_0_5, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLinternalcLcLParticlesTLVStore), -1, 1, 1, 1, 1, 0, "u 'HAL::internal::ParticlesTLVStore' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLIA0000(void) {
   /* HAL::IA0000 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0000));
   G__memfunc_setup("IA0000",330,G__HAL_dict_1086_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0000), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Exec",389,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeTLV",628,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__HAL_dictLN_TLorentzVector), -1, 0, 1, 1, 2, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("IA0000", 330, G__HAL_dict_1086_0_4, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0000), -1, 0, 1, 1, 1, 0, "u 'HAL::IA0000' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~IA0000", 456, G__HAL_dict_1086_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1086_0_6, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0000), -1, 1, 1, 1, 1, 0, "u 'HAL::IA0000' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLIA0001(void) {
   /* HAL::IA0001 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0001));
   G__memfunc_setup("IA0001",331,G__HAL_dict_1087_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0001), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Exec",389,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeTLV",628,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__HAL_dictLN_TLorentzVector), -1, 0, 1, 1, 2, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("IA0001", 331, G__HAL_dict_1087_0_4, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0001), -1, 0, 1, 1, 1, 0, "u 'HAL::IA0001' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~IA0001", 457, G__HAL_dict_1087_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1087_0_6, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0001), -1, 1, 1, 1, 1, 0, "u 'HAL::IA0001' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLIA0002(void) {
   /* HAL::IA0002 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0002));
   G__memfunc_setup("IA0002",332,G__HAL_dict_1088_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0002), -1, 0, 3, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Exec",389,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeTLV",628,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__HAL_dictLN_TLorentzVector), -1, 0, 1, 1, 2, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("IA0002", 332, G__HAL_dict_1088_0_4, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0002), -1, 0, 1, 1, 1, 0, "u 'HAL::IA0002' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~IA0002", 458, G__HAL_dict_1088_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1088_0_6, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0002), -1, 1, 1, 1, 1, 0, "u 'HAL::IA0002' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLIA0010(void) {
   /* HAL::IA0010 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0010));
   G__memfunc_setup("IA0010",331,G__HAL_dict_1089_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0010), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Exec",389,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeTLV",628,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__HAL_dictLN_TLorentzVector), -1, 0, 1, 1, 2, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("IA0010", 331, G__HAL_dict_1089_0_4, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0010), -1, 0, 1, 1, 1, 0, "u 'HAL::IA0010' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~IA0010", 457, G__HAL_dict_1089_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1089_0_6, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0010), -1, 1, 1, 1, 1, 0, "u 'HAL::IA0010' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLIA0011(void) {
   /* HAL::IA0011 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0011));
   G__memfunc_setup("IA0011",332,G__HAL_dict_1090_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0011), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Exec",389,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeTLV",628,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__HAL_dictLN_TLorentzVector), -1, 0, 1, 1, 2, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("IA0011", 332, G__HAL_dict_1090_0_4, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0011), -1, 0, 1, 1, 1, 0, "u 'HAL::IA0011' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~IA0011", 458, G__HAL_dict_1090_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1090_0_6, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0011), -1, 1, 1, 1, 1, 0, "u 'HAL::IA0011' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLIA0012(void) {
   /* HAL::IA0012 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0012));
   G__memfunc_setup("IA0012",333,G__HAL_dict_1091_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0012), -1, 0, 3, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Exec",389,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeTLV",628,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__HAL_dictLN_TLorentzVector), -1, 0, 1, 1, 2, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("IA0012", 333, G__HAL_dict_1091_0_4, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0012), -1, 0, 1, 1, 1, 0, "u 'HAL::IA0012' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~IA0012", 459, G__HAL_dict_1091_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1091_0_6, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0012), -1, 1, 1, 1, 1, 0, "u 'HAL::IA0012' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLIA0020(void) {
   /* HAL::IA0020 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0020));
   G__memfunc_setup("IA0020",332,G__HAL_dict_1092_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0020), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Exec",389,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeTLV",628,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__HAL_dictLN_TLorentzVector), -1, 0, 1, 1, 2, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("IA0020", 332, G__HAL_dict_1092_0_4, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0020), -1, 0, 1, 1, 1, 0, "u 'HAL::IA0020' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~IA0020", 458, G__HAL_dict_1092_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1092_0_6, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0020), -1, 1, 1, 1, 1, 0, "u 'HAL::IA0020' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLIA0021(void) {
   /* HAL::IA0021 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0021));
   G__memfunc_setup("IA0021",333,G__HAL_dict_1093_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0021), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Exec",389,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeTLV",628,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__HAL_dictLN_TLorentzVector), -1, 0, 1, 1, 2, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("IA0021", 333, G__HAL_dict_1093_0_4, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0021), -1, 0, 1, 1, 1, 0, "u 'HAL::IA0021' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~IA0021", 459, G__HAL_dict_1093_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1093_0_6, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0021), -1, 1, 1, 1, 1, 0, "u 'HAL::IA0021' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLIA0022(void) {
   /* HAL::IA0022 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0022));
   G__memfunc_setup("IA0022",334,G__HAL_dict_1094_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0022), -1, 0, 3, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Exec",389,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeTLV",628,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__HAL_dictLN_TLorentzVector), -1, 0, 1, 1, 2, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("IA0022", 334, G__HAL_dict_1094_0_4, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0022), -1, 0, 1, 1, 1, 0, "u 'HAL::IA0022' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~IA0022", 460, G__HAL_dict_1094_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1094_0_6, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIA0022), -1, 1, 1, 1, 1, 0, "u 'HAL::IA0022' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLRA0000(void) {
   /* HAL::RA0000 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLRA0000));
   G__memfunc_setup("RA0000",339,G__HAL_dict_1095_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLRA0000), -1, 0, 3, 8, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"n - - 0 - length", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Exec",389,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("RA0000", 339, G__HAL_dict_1095_0_4, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLRA0000), -1, 0, 1, 1, 1, 0, "u 'HAL::RA0000' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RA0000", 465, G__HAL_dict_1095_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLFA0000(void) {
   /* HAL::FA0000 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0000));
   G__memfunc_setup("FA0000",327,G__HAL_dict_1096_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0000), -1, 0, 4, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"u 'TString' - 0 - input h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SortTag",708,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__HAL_dictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator()",957,(G__InterfaceMethod) NULL,103, -1, -1, 0, 2, 1, 1, 0, 
"n - - 0 - - n - - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Sort",424,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<long long,allocator<long long> >' 'vector<long long>' 1 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("FA0000", 327, G__HAL_dict_1096_0_5, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0000), -1, 0, 1, 1, 1, 0, "u 'HAL::FA0000' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FA0000", 453, G__HAL_dict_1096_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1096_0_7, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0000), -1, 1, 1, 1, 1, 0, "u 'HAL::FA0000' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLFA0100(void) {
   /* HAL::FA0100 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0100));
   G__memfunc_setup("FA0100",328,G__HAL_dict_1097_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0100), -1, 0, 4, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"u 'TString' - 0 - input d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FilterPredicate",1527,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "U 'TLorentzVector' - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("FA0100", 328, G__HAL_dict_1097_0_3, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0100), -1, 0, 1, 1, 1, 0, "u 'HAL::FA0100' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FA0100", 454, G__HAL_dict_1097_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1097_0_5, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0100), -1, 1, 1, 1, 1, 0, "u 'HAL::FA0100' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLFA0101(void) {
   /* HAL::FA0101 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0101));
   G__memfunc_setup("FA0101",329,G__HAL_dict_1098_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0101), -1, 0, 4, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"u 'TString' - 0 - input d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FilterPredicate",1527,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "U 'TLorentzVector' - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("FA0101", 329, G__HAL_dict_1098_0_3, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0101), -1, 0, 1, 1, 1, 0, "u 'HAL::FA0101' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FA0101", 455, G__HAL_dict_1098_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1098_0_5, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0101), -1, 1, 1, 1, 1, 0, "u 'HAL::FA0101' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLFA0102(void) {
   /* HAL::FA0102 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0102));
   G__memfunc_setup("FA0102",330,G__HAL_dict_1099_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0102), -1, 0, 4, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"u 'TString' - 0 - input d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FilterPredicate",1527,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "U 'TLorentzVector' - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("FA0102", 330, G__HAL_dict_1099_0_3, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0102), -1, 0, 1, 1, 1, 0, "u 'HAL::FA0102' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FA0102", 456, G__HAL_dict_1099_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1099_0_5, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0102), -1, 1, 1, 1, 1, 0, "u 'HAL::FA0102' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLFA0103(void) {
   /* HAL::FA0103 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0103));
   G__memfunc_setup("FA0103",331,G__HAL_dict_1100_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0103), -1, 0, 4, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"u 'TString' - 0 - input d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FilterPredicate",1527,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "U 'TLorentzVector' - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("FA0103", 331, G__HAL_dict_1100_0_3, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0103), -1, 0, 1, 1, 1, 0, "u 'HAL::FA0103' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FA0103", 457, G__HAL_dict_1100_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1100_0_5, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0103), -1, 1, 1, 1, 1, 0, "u 'HAL::FA0103' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLFA0104(void) {
   /* HAL::FA0104 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0104));
   G__memfunc_setup("FA0104",332,G__HAL_dict_1101_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0104), -1, 0, 4, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"u 'TString' - 0 - input d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FilterPredicate",1527,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "U 'TLorentzVector' - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("FA0104", 332, G__HAL_dict_1101_0_3, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0104), -1, 0, 1, 1, 1, 0, "u 'HAL::FA0104' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FA0104", 458, G__HAL_dict_1101_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1101_0_5, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0104), -1, 1, 1, 1, 1, 0, "u 'HAL::FA0104' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLFA0110(void) {
   /* HAL::FA0110 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0110));
   G__memfunc_setup("FA0110",329,G__HAL_dict_1102_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0110), -1, 0, 4, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"u 'TString' - 0 - input d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FilterPredicate",1527,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "U 'TLorentzVector' - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("FA0110", 329, G__HAL_dict_1102_0_3, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0110), -1, 0, 1, 1, 1, 0, "u 'HAL::FA0110' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FA0110", 455, G__HAL_dict_1102_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1102_0_5, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0110), -1, 1, 1, 1, 1, 0, "u 'HAL::FA0110' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLFA0111(void) {
   /* HAL::FA0111 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0111));
   G__memfunc_setup("FA0111",330,G__HAL_dict_1103_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0111), -1, 0, 4, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"u 'TString' - 0 - input d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FilterPredicate",1527,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "U 'TLorentzVector' - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("FA0111", 330, G__HAL_dict_1103_0_3, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0111), -1, 0, 1, 1, 1, 0, "u 'HAL::FA0111' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FA0111", 456, G__HAL_dict_1103_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1103_0_5, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0111), -1, 1, 1, 1, 1, 0, "u 'HAL::FA0111' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLFA0112(void) {
   /* HAL::FA0112 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0112));
   G__memfunc_setup("FA0112",331,G__HAL_dict_1104_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0112), -1, 0, 4, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"u 'TString' - 0 - input d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FilterPredicate",1527,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "U 'TLorentzVector' - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("FA0112", 331, G__HAL_dict_1104_0_3, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0112), -1, 0, 1, 1, 1, 0, "u 'HAL::FA0112' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FA0112", 457, G__HAL_dict_1104_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1104_0_5, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0112), -1, 1, 1, 1, 1, 0, "u 'HAL::FA0112' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLFA0113(void) {
   /* HAL::FA0113 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0113));
   G__memfunc_setup("FA0113",332,G__HAL_dict_1105_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0113), -1, 0, 4, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"u 'TString' - 0 - input d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FilterPredicate",1527,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "U 'TLorentzVector' - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("FA0113", 332, G__HAL_dict_1105_0_3, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0113), -1, 0, 1, 1, 1, 0, "u 'HAL::FA0113' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FA0113", 458, G__HAL_dict_1105_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1105_0_5, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0113), -1, 1, 1, 1, 1, 0, "u 'HAL::FA0113' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLFA0114(void) {
   /* HAL::FA0114 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0114));
   G__memfunc_setup("FA0114",333,G__HAL_dict_1106_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0114), -1, 0, 4, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"u 'TString' - 0 - input d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FilterPredicate",1527,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "U 'TLorentzVector' - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("FA0114", 333, G__HAL_dict_1106_0_3, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0114), -1, 0, 1, 1, 1, 0, "u 'HAL::FA0114' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FA0114", 459, G__HAL_dict_1106_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1106_0_5, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0114), -1, 1, 1, 1, 1, 0, "u 'HAL::FA0114' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLFA0120(void) {
   /* HAL::FA0120 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0120));
   G__memfunc_setup("FA0120",330,G__HAL_dict_1107_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0120), -1, 0, 5, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"u 'TString' - 0 - input d - - 0 - low "
"d - - 0 - high", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FilterPredicate",1527,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "U 'TLorentzVector' - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("FA0120", 330, G__HAL_dict_1107_0_3, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0120), -1, 0, 1, 1, 1, 0, "u 'HAL::FA0120' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FA0120", 456, G__HAL_dict_1107_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1107_0_5, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0120), -1, 1, 1, 1, 1, 0, "u 'HAL::FA0120' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLFA0121(void) {
   /* HAL::FA0121 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0121));
   G__memfunc_setup("FA0121",331,G__HAL_dict_1108_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0121), -1, 0, 5, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"u 'TString' - 0 - input d - - 0 - low "
"d - - 0 - high", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FilterPredicate",1527,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "U 'TLorentzVector' - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("FA0121", 331, G__HAL_dict_1108_0_3, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0121), -1, 0, 1, 1, 1, 0, "u 'HAL::FA0121' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FA0121", 457, G__HAL_dict_1108_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1108_0_5, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0121), -1, 1, 1, 1, 1, 0, "u 'HAL::FA0121' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLFA0122(void) {
   /* HAL::FA0122 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0122));
   G__memfunc_setup("FA0122",332,G__HAL_dict_1109_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0122), -1, 0, 5, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"u 'TString' - 0 - input d - - 0 - low "
"d - - 0 - high", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FilterPredicate",1527,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "U 'TLorentzVector' - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("FA0122", 332, G__HAL_dict_1109_0_3, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0122), -1, 0, 1, 1, 1, 0, "u 'HAL::FA0122' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FA0122", 458, G__HAL_dict_1109_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1109_0_5, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0122), -1, 1, 1, 1, 1, 0, "u 'HAL::FA0122' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLFA0123(void) {
   /* HAL::FA0123 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0123));
   G__memfunc_setup("FA0123",333,G__HAL_dict_1110_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0123), -1, 0, 5, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"u 'TString' - 0 - input d - - 0 - low "
"d - - 0 - high", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FilterPredicate",1527,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "U 'TLorentzVector' - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("FA0123", 333, G__HAL_dict_1110_0_3, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0123), -1, 0, 1, 1, 1, 0, "u 'HAL::FA0123' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FA0123", 459, G__HAL_dict_1110_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1110_0_5, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0123), -1, 1, 1, 1, 1, 0, "u 'HAL::FA0123' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLFA0124(void) {
   /* HAL::FA0124 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0124));
   G__memfunc_setup("FA0124",334,G__HAL_dict_1111_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0124), -1, 0, 5, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"u 'TString' - 0 - input d - - 0 - low "
"d - - 0 - high", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FilterPredicate",1527,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "U 'TLorentzVector' - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("FA0124", 334, G__HAL_dict_1111_0_3, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0124), -1, 0, 1, 1, 1, 0, "u 'HAL::FA0124' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FA0124", 460, G__HAL_dict_1111_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1111_0_5, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLFA0124), -1, 1, 1, 1, 1, 0, "u 'HAL::FA0124' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLCA0000(void) {
   /* HAL::CA0000 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0000));
   G__memfunc_setup("CA0000",324,G__HAL_dict_1112_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0000), -1, 0, 4, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"u 'TString' - 0 - input d - - 0 - cut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CutPredicate",1213,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "U 'TLorentzVector' - 0 - vec", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("CA0000", 324, G__HAL_dict_1112_0_3, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0000), -1, 0, 1, 1, 1, 0, "u 'HAL::CA0000' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CA0000", 450, G__HAL_dict_1112_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1112_0_5, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0000), -1, 1, 1, 1, 1, 0, "u 'HAL::CA0000' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLCA0003(void) {
   /* HAL::CA0003 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0003));
   G__memfunc_setup("CA0003",327,G__HAL_dict_1113_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0003), -1, 0, 4, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"u 'TString' - 0 - input d - - 0 - cut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CutPredicate",1213,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "U 'TLorentzVector' - 0 - vec", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("CA0003", 327, G__HAL_dict_1113_0_3, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0003), -1, 0, 1, 1, 1, 0, "u 'HAL::CA0003' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CA0003", 453, G__HAL_dict_1113_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1113_0_5, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0003), -1, 1, 1, 1, 1, 0, "u 'HAL::CA0003' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLCA0100(void) {
   /* HAL::CA0100 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0100));
   G__memfunc_setup("CA0100",325,G__HAL_dict_1114_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0100), -1, 0, 3, 8, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"n - - 0 - length", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Exec",389,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("CA0100", 325, G__HAL_dict_1114_0_3, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0100), -1, 0, 1, 1, 1, 0, "u 'HAL::CA0100' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CA0100", 451, G__HAL_dict_1114_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLCA0101(void) {
   /* HAL::CA0101 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0101));
   G__memfunc_setup("CA0101",326,G__HAL_dict_1115_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0101), -1, 0, 3, 8, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"n - - 0 - length", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Exec",389,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("CA0101", 326, G__HAL_dict_1115_0_3, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCA0101), -1, 0, 1, 1, 1, 0, "u 'HAL::CA0101' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CA0101", 452, G__HAL_dict_1115_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLEA0000(void) {
   /* HAL::EA0000 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0000));
   G__memfunc_setup("EA0000",326,G__HAL_dict_1116_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0000), -1, 0, 4, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"u 'TString' - 0 - input u 'TString' - 0 - bname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StoreValue",1034,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 2, 0, "U 'TLorentzVector' - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("EA0000", 326, G__HAL_dict_1116_0_3, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0000), -1, 0, 1, 1, 1, 0, "u 'HAL::EA0000' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EA0000", 452, G__HAL_dict_1116_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1116_0_5, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0000), -1, 1, 1, 1, 1, 0, "u 'HAL::EA0000' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLEA0001(void) {
   /* HAL::EA0001 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0001));
   G__memfunc_setup("EA0001",327,G__HAL_dict_1117_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0001), -1, 0, 4, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"u 'TString' - 0 - input u 'TString' - 0 - bname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StoreValue",1034,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 2, 0, "U 'TLorentzVector' - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("EA0001", 327, G__HAL_dict_1117_0_3, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0001), -1, 0, 1, 1, 1, 0, "u 'HAL::EA0001' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EA0001", 453, G__HAL_dict_1117_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1117_0_5, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0001), -1, 1, 1, 1, 1, 0, "u 'HAL::EA0001' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLEA0002(void) {
   /* HAL::EA0002 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0002));
   G__memfunc_setup("EA0002",328,G__HAL_dict_1118_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0002), -1, 0, 4, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"u 'TString' - 0 - input u 'TString' - 0 - bname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StoreValue",1034,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 2, 0, "U 'TLorentzVector' - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("EA0002", 328, G__HAL_dict_1118_0_3, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0002), -1, 0, 1, 1, 1, 0, "u 'HAL::EA0002' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EA0002", 454, G__HAL_dict_1118_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1118_0_5, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0002), -1, 1, 1, 1, 1, 0, "u 'HAL::EA0002' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLEA0003(void) {
   /* HAL::EA0003 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0003));
   G__memfunc_setup("EA0003",329,G__HAL_dict_1119_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0003), -1, 0, 4, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"u 'TString' - 0 - input u 'TString' - 0 - bname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StoreValue",1034,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 2, 0, "U 'TLorentzVector' - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("EA0003", 329, G__HAL_dict_1119_0_3, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0003), -1, 0, 1, 1, 1, 0, "u 'HAL::EA0003' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EA0003", 455, G__HAL_dict_1119_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1119_0_5, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0003), -1, 1, 1, 1, 1, 0, "u 'HAL::EA0003' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLEA0004(void) {
   /* HAL::EA0004 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0004));
   G__memfunc_setup("EA0004",330,G__HAL_dict_1120_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0004), -1, 0, 4, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"u 'TString' - 0 - input u 'TString' - 0 - bname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StoreValue",1034,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 2, 0, "U 'TLorentzVector' - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("EA0004", 330, G__HAL_dict_1120_0_3, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0004), -1, 0, 1, 1, 1, 0, "u 'HAL::EA0004' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EA0004", 456, G__HAL_dict_1120_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1120_0_5, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0004), -1, 1, 1, 1, 1, 0, "u 'HAL::EA0004' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLEA0010(void) {
   /* HAL::EA0010 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0010));
   G__memfunc_setup("EA0010",327,G__HAL_dict_1121_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0010), -1, 0, 4, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"u 'TString' - 0 - input u 'TString' - 0 - bname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StoreValue",1034,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 2, 0, "U 'TLorentzVector' - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("EA0010", 327, G__HAL_dict_1121_0_3, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0010), -1, 0, 1, 1, 1, 0, "u 'HAL::EA0010' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EA0010", 453, G__HAL_dict_1121_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1121_0_5, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0010), -1, 1, 1, 1, 1, 0, "u 'HAL::EA0010' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLEA0011(void) {
   /* HAL::EA0011 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0011));
   G__memfunc_setup("EA0011",328,G__HAL_dict_1122_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0011), -1, 0, 4, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"u 'TString' - 0 - input u 'TString' - 0 - bname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StoreValue",1034,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 2, 0, "U 'TLorentzVector' - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("EA0011", 328, G__HAL_dict_1122_0_3, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0011), -1, 0, 1, 1, 1, 0, "u 'HAL::EA0011' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EA0011", 454, G__HAL_dict_1122_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1122_0_5, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0011), -1, 1, 1, 1, 1, 0, "u 'HAL::EA0011' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLEA0012(void) {
   /* HAL::EA0012 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0012));
   G__memfunc_setup("EA0012",329,G__HAL_dict_1123_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0012), -1, 0, 4, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"u 'TString' - 0 - input u 'TString' - 0 - bname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StoreValue",1034,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 2, 0, "U 'TLorentzVector' - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("EA0012", 329, G__HAL_dict_1123_0_3, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0012), -1, 0, 1, 1, 1, 0, "u 'HAL::EA0012' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EA0012", 455, G__HAL_dict_1123_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1123_0_5, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0012), -1, 1, 1, 1, 1, 0, "u 'HAL::EA0012' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLEA0013(void) {
   /* HAL::EA0013 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0013));
   G__memfunc_setup("EA0013",330,G__HAL_dict_1124_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0013), -1, 0, 4, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"u 'TString' - 0 - input u 'TString' - 0 - bname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StoreValue",1034,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 2, 0, "U 'TLorentzVector' - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("EA0013", 330, G__HAL_dict_1124_0_3, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0013), -1, 0, 1, 1, 1, 0, "u 'HAL::EA0013' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EA0013", 456, G__HAL_dict_1124_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1124_0_5, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0013), -1, 1, 1, 1, 1, 0, "u 'HAL::EA0013' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLEA0014(void) {
   /* HAL::EA0014 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0014));
   G__memfunc_setup("EA0014",331,G__HAL_dict_1125_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0014), -1, 0, 4, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"u 'TString' - 0 - input u 'TString' - 0 - bname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StoreValue",1034,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 2, 0, "U 'TLorentzVector' - 0 - -", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("EA0014", 331, G__HAL_dict_1125_0_3, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0014), -1, 0, 1, 1, 1, 0, "u 'HAL::EA0014' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EA0014", 457, G__HAL_dict_1125_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1125_0_5, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLEA0014), -1, 1, 1, 1, 1, 0, "u 'HAL::EA0014' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLAnalysisSelector(void) {
   /* HAL::AnalysisSelector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisSelector));
   G__memfunc_setup("AnalysisSelector",1669,G__HAL_dict_1130_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysisSelector), -1, 0, 2, 1, 1, 0, 
"U 'HAL::Algorithm' - 0 - af U 'TTree' - 0 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Version",742,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Begin",485,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SlaveBegin",992,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Notify",633,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEntry",818,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"n - 'Long64_t' 0 - entry i - 'Int_t' 0 '0' getall", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetOption",933,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetObject",899,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetInputList",1240,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 - input", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetOutputList",1357,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__HAL_dictLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SlaveTerminate",1444,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Terminate",937,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetOutputFileName",1726,G__HAL_dict_1130_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOutputTreeName",1742,G__HAL_dict_1130_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - tname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOutputTreeDescription",2513,G__HAL_dict_1130_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - tdescription", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__HAL_dict_1130_0_18, 85, G__get_linked_tagnum(&G__HAL_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HAL::AnalysisSelector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__HAL_dict_1130_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HAL::AnalysisSelector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__HAL_dict_1130_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HAL::AnalysisSelector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__HAL_dict_1130_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HAL::AnalysisSelector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__HAL_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__HAL_dict_1130_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__HAL_dict_1130_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HAL::AnalysisSelector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__HAL_dict_1130_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HAL::AnalysisSelector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__HAL_dict_1130_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HAL::AnalysisSelector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__HAL_dict_1130_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HAL::AnalysisSelector::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~AnalysisSelector", 1795, G__HAL_dict_1130_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLAnalysis(void) {
   /* HAL::Analysis */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysis));
   G__memfunc_setup("Analysis",836,G__HAL_dict_1131_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysis), -1, 0, 3, 1, 1, 0, 
"u 'TString' - 0 '\"\"' name u 'TString' - 0 '\"\"' title "
"u 'TString' - 0 '\"\"' treeName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddAlgo",652,G__HAL_dict_1131_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HAL::Algorithm' - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintAnalysisFlow",1769,G__HAL_dict_1131_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTreeObjectName",1684,G__HAL_dict_1131_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAnalysisName",1521,G__HAL_dict_1131_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAnalysisTitle",1650,G__HAL_dict_1131_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddFiles",764,G__HAL_dict_1131_0_7, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"u 'TString' - 0 - fnames n - 'Long64_t' 0 '1234567890' nentries", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddFiles",764,G__HAL_dict_1131_0_8, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'TChain' - 0 - fchain", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOutputFileName",1726,G__HAL_dict_1131_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOutputTreeName",1742,G__HAL_dict_1131_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - tname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOutputTreeDescription",2513,G__HAL_dict_1131_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - tdescription", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintTree",925,G__HAL_dict_1131_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLeafType",1082,G__HAL_dict_1131_0_13, 67, -1, -1, 0, 1, 1, 1, 1, "u 'TString' - 0 - leafname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLeafType",1082,G__HAL_dict_1131_0_14, 67, -1, -1, 0, 2, 1, 1, 1, 
"u 'TString' - 0 - branchname u 'TString' - 0 - leafname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MapBranch",876,G__HAL_dict_1131_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - branchname u 'TString' - 0 - nickname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Process",735,G__HAL_dict_1131_0_16, 110, -1, G__defined_typename("Long64_t"), 0, 3, 1, 1, 0, 
"C - 'Option_t' 10 '\"\"' option n - 'Long64_t' 0 '1234567890' nentries "
"n - 'Long64_t' 0 '0' firstentry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__HAL_dict_1131_0_17, 85, G__get_linked_tagnum(&G__HAL_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HAL::Analysis::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__HAL_dict_1131_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HAL::Analysis::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__HAL_dict_1131_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HAL::Analysis::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__HAL_dict_1131_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HAL::Analysis::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__HAL_dict_1131_0_21, 85, G__get_linked_tagnum(&G__HAL_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowMembers",1132,G__HAL_dict_1131_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Streamer",835,G__HAL_dict_1131_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StreamerNVirtual",1656,G__HAL_dict_1131_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__HAL_dict_1131_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HAL::Analysis::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__HAL_dict_1131_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HAL::Analysis::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__HAL_dict_1131_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HAL::Analysis::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__HAL_dict_1131_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HAL::Analysis::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Analysis", 836, G__HAL_dict_1131_0_29, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysis), -1, 0, 1, 1, 1, 0, "u 'HAL::Analysis' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Analysis", 962, G__HAL_dict_1131_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1131_0_31, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLAnalysis), -1, 1, 1, 1, 1, 0, "u 'HAL::Analysis' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLCutOptimizer(void) {
   /* HAL::CutOptimizer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCutOptimizer));
   G__memfunc_setup("CutOptimizer",1263,G__HAL_dict_1168_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCutOptimizer), -1, 0, 1, 1, 1, 0, "U 'TF2' - 0 '0' st", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFitnessFunction",1870,G__HAL_dict_1168_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TF2' - 0 '0' st", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFitnessFunction",1858,G__HAL_dict_1168_0_3, 85, G__get_linked_tagnum(&G__HAL_dictLN_TF2), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Optimize",849,G__HAL_dict_1168_0_4, 85, G__get_linked_tagnum(&G__HAL_dictLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 0, 7, 1, 1, 0, 
"U 'TH1' - 0 - sig U 'TH1' - 0 - bkg "
"i - 'Int_t' 0 - n u 'TString' - 0 '\"both\"' side "
"i - 'Int_t' 0 '1' rebin d - 'Double_t' 0 'TMath::QuietNaN()' x_min "
"d - 'Double_t' 0 'TMath::QuietNaN()' x_max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ComputeMaxStatistic",1979,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 7, 1, 4, 0, 
"U 'TH1' - 0 - - U 'TH1' - 0 - - "
"i - 'Int_t' 0 - - u 'TString' - 0 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"U 'TMatrixT<double>' 'TMatrixD' 2 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MoveXArray",1006,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "u 'TArrayD' - 1 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("CutOptimizer", 1263, G__HAL_dict_1168_0_7, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCutOptimizer), -1, 0, 1, 1, 1, 0, "u 'HAL::CutOptimizer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CutOptimizer", 1389, G__HAL_dict_1168_0_8, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1168_0_9, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLCutOptimizer), -1, 1, 1, 1, 1, 0, "u 'HAL::CutOptimizer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLIntegrator(void) {
   /* HAL::Integrator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIntegrator));
   G__memfunc_setup("Integrator",1055,G__HAL_dict_1169_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIntegrator), -1, 0, 1, 1, 1, 0, "d - 'Double_t' 11 '1.0e-12' tolerance", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OutOfTolerance",1418,G__HAL_dict_1169_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Integrate",931,G__HAL_dict_1169_0_3, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"u 'TF1' - 1 - - d - 'Double_t' 11 - a "
"d - 'Double_t' 11 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("int_helper",1066,G__HAL_dict_1169_0_4, 100, -1, G__defined_typename("Double_t"), 0, 6, 1, 1, 0, 
"u 'TF1' - 1 - - d - 'Double_t' 11 - - "
"d - 'Double_t' 11 - - d - 'Double_t' 11 - - "
"d - 'Double_t' 11 - - d - 'Double_t' 11 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Integrator", 1055, G__HAL_dict_1169_0_5, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIntegrator), -1, 0, 1, 1, 1, 0, "u 'HAL::Integrator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Integrator", 1181, G__HAL_dict_1169_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1169_0_7, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLIntegrator), -1, 1, 1, 1, 1, 0, "u 'HAL::Integrator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLInterpBase(void) {
   /* HAL::InterpBase */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLInterpBase));
   G__memfunc_setup("locate",632,G__HAL_dict_1170_0_2, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hunt",447,G__HAL_dict_1170_0_3, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Interp",626,G__HAL_dict_1170_0_4, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rawinterp",988,G__HAL_dict_1170_0_5, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 11 - jlo d - 'Double_t' 11 - x", (char*)NULL, (void*) NULL, 3);
   // automatic destructor
   G__memfunc_setup("~InterpBase", 1131, G__HAL_dict_1170_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1170_0_7, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLInterpBase), -1, 1, 1, 1, 1, 0, "u 'HAL::InterpBase' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLPolyInterp(void) {
   /* HAL::PolyInterp */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLPolyInterp));
   G__memfunc_setup("PolyInterp",1046,G__HAL_dict_1171_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLPolyInterp), -1, 0, 4, 1, 1, 0, 
"D - 'Double_t' 0 - x_values D - 'Double_t' 0 - y_values "
"i - 'Int_t' 0 - size i - 'Int_t' 0 - order", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetError",810,G__HAL_dict_1171_0_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rawinterp",988,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 4, 0, 
"i - 'Int_t' 11 - jl d - 'Double_t' 11 - x", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("PolyInterp", 1046, G__HAL_dict_1171_0_4, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLPolyInterp), -1, 0, 1, 1, 1, 0, "u 'HAL::PolyInterp' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PolyInterp", 1172, G__HAL_dict_1171_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1171_0_6, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLPolyInterp), -1, 1, 1, 1, 1, 0, "u 'HAL::PolyInterp' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLPoly2DInterp(void) {
   /* HAL::Poly2DInterp */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLPoly2DInterp));
   G__memfunc_setup("Poly2DInterp",1164,G__HAL_dict_1173_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLPoly2DInterp), -1, 0, 7, 1, 1, 0, 
"D - 'Double_t' 0 - x1_values D - 'Double_t' 0 - x2_values "
"i - 'Int_t' 0 - x1_size i - 'Int_t' 0 - x2_size "
"D - 'Double_t' 2 - y_matrix i - 'Int_t' 0 - x1_order "
"i - 'Int_t' 0 - x2_order", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Interp",626,G__HAL_dict_1173_0_2, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 11 - x1_value d - 'Double_t' 11 - x2_value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX1Error",947,G__HAL_dict_1173_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX2Error",948,G__HAL_dict_1173_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Poly2DInterp", 1164, G__HAL_dict_1173_0_5, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLPoly2DInterp), -1, 0, 1, 1, 1, 0, "u 'HAL::Poly2DInterp' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Poly2DInterp", 1290, G__HAL_dict_1173_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1173_0_7, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLPoly2DInterp), -1, 1, 1, 1, 1, 0, "u 'HAL::Poly2DInterp' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHALcLcLPythonAlgorithm(void) {
   /* HAL::PythonAlgorithm */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLPythonAlgorithm));
   G__memfunc_setup("PythonAlgorithm",1577,G__HAL_dict_1199_0_1, 105, G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLPythonAlgorithm), -1, 0, 6, 1, 1, 0, 
"u 'TString' - 0 '\"\"' name u 'TString' - 0 '\"\"' title "
"u 'TString' - 0 '\"\"' PyPath u 'TString' - 0 '\"\"' PyFile "
"u 'TString' - 0 '\"\"' PyClass U '_object' 'PyObject' 0 '0' self", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' options", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Exec",389,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' options", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' options", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetupPySelf",1124,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CallSelf",774,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__HAL_dictLN__object), G__defined_typename("PyObject"), 0, 2, 1, 4, 0, 
"u 'TString' - 0 - method U '_object' 'PyObject' 0 '0' pyargs", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("PythonAlgorithm", 1577, G__HAL_dict_1199_0_7, (int) ('i'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLPythonAlgorithm), -1, 0, 1, 1, 1, 0, "u 'HAL::PythonAlgorithm' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PythonAlgorithm", 1703, G__HAL_dict_1199_0_8, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__HAL_dict_1199_0_9, (int) ('u'), G__get_linked_tagnum(&G__HAL_dictLN_HALcLcLPythonAlgorithm), -1, 1, 1, 1, 1, 0, "u 'HAL::PythonAlgorithm' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncHAL_dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalHAL_dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {
}

static void G__cpp_setup_func33() {
}

static void G__cpp_setup_func34() {
}

static void G__cpp_setup_func35() {
}

static void G__cpp_setup_func36() {
}

static void G__cpp_setup_func37() {
}

static void G__cpp_setup_func38() {
}

static void G__cpp_setup_func39() {
}

static void G__cpp_setup_func40() {
}

static void G__cpp_setup_func41() {
}

static void G__cpp_setup_func42() {
}

static void G__cpp_setup_func43() {
}

static void G__cpp_setup_func44() {
}

static void G__cpp_setup_func45() {
}

static void G__cpp_setup_func46() {
}

static void G__cpp_setup_func47() {
}

static void G__cpp_setup_func48() {
}

static void G__cpp_setup_func49() {
}

static void G__cpp_setup_func50() {
}

static void G__cpp_setup_func51() {
}

static void G__cpp_setup_func52() {
}

static void G__cpp_setup_func53() {
}

static void G__cpp_setup_func54() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcHAL_dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
  G__cpp_setup_func33();
  G__cpp_setup_func34();
  G__cpp_setup_func35();
  G__cpp_setup_func36();
  G__cpp_setup_func37();
  G__cpp_setup_func38();
  G__cpp_setup_func39();
  G__cpp_setup_func40();
  G__cpp_setup_func41();
  G__cpp_setup_func42();
  G__cpp_setup_func43();
  G__cpp_setup_func44();
  G__cpp_setup_func45();
  G__cpp_setup_func46();
  G__cpp_setup_func47();
  G__cpp_setup_func48();
  G__cpp_setup_func49();
  G__cpp_setup_func50();
  G__cpp_setup_func51();
  G__cpp_setup_func52();
  G__cpp_setup_func53();
  G__cpp_setup_func54();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__HAL_dictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR = { "vector<long long,allocator<long long> >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgRcLcLiterator = { "vector<long long,allocator<long long> >::iterator" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_reverse_iteratorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcLcLiteratorgR = { "reverse_iterator<vector<long long,allocator<long long> >::iterator>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR = { "vector<unsigned long long,allocator<unsigned long long> >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcLcLiterator = { "vector<unsigned long long,allocator<unsigned long long> >::iterator" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_reverse_iteratorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcLcLiteratorgR = { "reverse_iterator<vector<unsigned long long,allocator<unsigned long long> >::iterator>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_vectorlEboolcOallocatorlEboolgRsPgR = { "vector<bool,allocator<bool> >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_vectorlEboolcOallocatorlEboolgRsPgRcLcLiterator = { "vector<bool,allocator<bool> >::iterator" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_vectorlEboolcOallocatorlEboolgRsPgRcLcLreverse_iterator = { "vector<bool,allocator<bool> >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TRegexp = { "TRegexp" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HAL = { "HAL" , 110 , -1 };
G__linked_taginfo G__HAL_dictLN_TArrayD = { "TArrayD" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TArrayI = { "TArrayI" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TH1C = { "TH1C" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TH1S = { "TH1S" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TH1I = { "TH1I" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__HAL_dictLN_TMap = { "TMap" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLAnalysisData = { "HAL::AnalysisData" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLAnalysisTreeReader = { "HAL::AnalysisTreeReader" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLAnalysisTreeWriter = { "HAL::AnalysisTreeWriter" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLAlgorithm = { "HAL::Algorithm" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_listlEHALcLcLAlgorithmmUcOallocatorlEHALcLcLAlgorithmmUgRsPgR = { "list<HAL::Algorithm*,allocator<HAL::Algorithm*> >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLCutAlgorithm = { "HAL::CutAlgorithm" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR = { "map<string,bool,less<string>,allocator<pair<const string,bool> > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_maplEstringcOlongsPdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOlongsPdoublegRsPgRsPgR = { "map<string,long double,less<string>,allocator<pair<const string,long double> > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_maplEstringcOlongsPlongcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOlongsPlonggRsPgRsPgR = { "map<string,long long,less<string>,allocator<pair<const string,long long> > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_maplEstringcOunsignedsPlongsPlongcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPlongsPlonggRsPgRsPgR = { "map<string,unsigned long long,less<string>,allocator<pair<const string,unsigned long long> > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR = { "map<string,string,less<string>,allocator<pair<const string,string> > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_maplEstringcOTObjectmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjectmUgRsPgRsPgR = { "map<string,TObject*,less<string>,allocator<pair<const string,TObject*> > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_maplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgR = { "map<long long,bool,less<long long>,allocator<pair<const long long,bool> > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_maplEstringcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRsPgRsPgRsPgR = { "map<string,map<long long,bool,less<long long>,allocator<pair<const long long,bool> > >,less<string>,allocator<pair<const string,map<long long,bool,less<long long>,allocator<pair<const long long,bool> > > > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_maplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgR = { "map<long long,long double,less<long long>,allocator<pair<const long long,long double> > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_maplEstringcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRsPgRsPgRsPgR = { "map<string,map<long long,long double,less<long long>,allocator<pair<const long long,long double> > >,less<string>,allocator<pair<const string,map<long long,long double,less<long long>,allocator<pair<const long long,long double> > > > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_maplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgR = { "map<long long,long long,less<long long>,allocator<pair<const long long,long long> > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_maplEstringcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRsPgRsPgRsPgR = { "map<string,map<long long,long long,less<long long>,allocator<pair<const long long,long long> > >,less<string>,allocator<pair<const string,map<long long,long long,less<long long>,allocator<pair<const long long,long long> > > > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_maplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgR = { "map<long long,unsigned long long,less<long long>,allocator<pair<const long long,unsigned long long> > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_maplEstringcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgR = { "map<string,map<long long,unsigned long long,less<long long>,allocator<pair<const long long,unsigned long long> > >,less<string>,allocator<pair<const string,map<long long,unsigned long long,less<long long>,allocator<pair<const long long,unsigned long long> > > > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_maplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgR = { "map<long long,string,less<long long>,allocator<pair<const long long,string> > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_maplEstringcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRsPgRsPgRsPgR = { "map<string,map<long long,string,less<long long>,allocator<pair<const long long,string> > >,less<string>,allocator<pair<const string,map<long long,string,less<long long>,allocator<pair<const long long,string> > > > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_maplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgR = { "map<long long,TObject*,less<long long>,allocator<pair<const long long,TObject*> > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_maplEstringcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRsPgRsPgRsPgR = { "map<string,map<long long,TObject*,less<long long>,allocator<pair<const long long,TObject*> > >,less<string>,allocator<pair<const string,map<long long,TObject*,less<long long>,allocator<pair<const long long,TObject*> > > > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRsPgRsPgRsPgR = { "map<long long,map<long long,bool,less<long long>,allocator<pair<const long long,bool> > >,less<long long>,allocator<pair<const long long,map<long long,bool,less<long long>,allocator<pair<const long long,bool> > > > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR = { "map<string,map<long long,map<long long,bool,less<long long>,allocator<pair<const long long,bool> > >,less<long long>,allocator<pair<const long long,map<long long,bool,less<long long>,allocator<pair<const long long,bool> > > > > >,less<string>,allocator<pair<const string,map<long long,map<long long,bool,less<long long>,allocator<pair<const long long,bool> > >,less<long long>,allocator<pair<const long long,map<long long,bool,less<long long>,allocator<pair<const long long,bool> > > > > > > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRsPgRsPgRsPgR = { "map<long long,map<long long,long double,less<long long>,allocator<pair<const long long,long double> > >,less<long long>,allocator<pair<const long long,map<long long,long double,less<long long>,allocator<pair<const long long,long double> > > > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR = { "map<string,map<long long,map<long long,long double,less<long long>,allocator<pair<const long long,long double> > >,less<long long>,allocator<pair<const long long,map<long long,long double,less<long long>,allocator<pair<const long long,long double> > > > > >,less<string>,allocator<pair<const string,map<long long,map<long long,long double,less<long long>,allocator<pair<const long long,long double> > >,less<long long>,allocator<pair<const long long,map<long long,long double,less<long long>,allocator<pair<const long long,long double> > > > > > > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRsPgRsPgRsPgR = { "map<long long,map<long long,long long,less<long long>,allocator<pair<const long long,long long> > >,less<long long>,allocator<pair<const long long,map<long long,long long,less<long long>,allocator<pair<const long long,long long> > > > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR = { "map<string,map<long long,map<long long,long long,less<long long>,allocator<pair<const long long,long long> > >,less<long long>,allocator<pair<const long long,map<long long,long long,less<long long>,allocator<pair<const long long,long long> > > > > >,less<string>,allocator<pair<const string,map<long long,map<long long,long long,less<long long>,allocator<pair<const long long,long long> > >,less<long long>,allocator<pair<const long long,map<long long,long long,less<long long>,allocator<pair<const long long,long long> > > > > > > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgR = { "map<long long,map<long long,unsigned long long,less<long long>,allocator<pair<const long long,unsigned long long> > >,less<long long>,allocator<pair<const long long,map<long long,unsigned long long,less<long long>,allocator<pair<const long long,unsigned long long> > > > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR = { "map<string,map<long long,map<long long,unsigned long long,less<long long>,allocator<pair<const long long,unsigned long long> > >,less<long long>,allocator<pair<const long long,map<long long,unsigned long long,less<long long>,allocator<pair<const long long,unsigned long long> > > > > >,less<string>,allocator<pair<const string,map<long long,map<long long,unsigned long long,less<long long>,allocator<pair<const long long,unsigned long long> > >,less<long long>,allocator<pair<const long long,map<long long,unsigned long long,less<long long>,allocator<pair<const long long,unsigned long long> > > > > > > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRsPgRsPgRsPgR = { "map<long long,map<long long,string,less<long long>,allocator<pair<const long long,string> > >,less<long long>,allocator<pair<const long long,map<long long,string,less<long long>,allocator<pair<const long long,string> > > > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR = { "map<string,map<long long,map<long long,string,less<long long>,allocator<pair<const long long,string> > >,less<long long>,allocator<pair<const long long,map<long long,string,less<long long>,allocator<pair<const long long,string> > > > > >,less<string>,allocator<pair<const string,map<long long,map<long long,string,less<long long>,allocator<pair<const long long,string> > >,less<long long>,allocator<pair<const long long,map<long long,string,less<long long>,allocator<pair<const long long,string> > > > > > > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRsPgRsPgRsPgR = { "map<long long,map<long long,TObject*,less<long long>,allocator<pair<const long long,TObject*> > >,less<long long>,allocator<pair<const long long,map<long long,TObject*,less<long long>,allocator<pair<const long long,TObject*> > > > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR = { "map<string,map<long long,map<long long,TObject*,less<long long>,allocator<pair<const long long,TObject*> > >,less<long long>,allocator<pair<const long long,map<long long,TObject*,less<long long>,allocator<pair<const long long,TObject*> > > > > >,less<string>,allocator<pair<const string,map<long long,map<long long,TObject*,less<long long>,allocator<pair<const long long,TObject*> > >,less<long long>,allocator<pair<const long long,map<long long,TObject*,less<long long>,allocator<pair<const long long,TObject*> > > > > > > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLAnalysisDatacLcLStorageType = { "HAL::AnalysisData::StorageType" , 101 , -1 };
G__linked_taginfo G__HAL_dictLN_maplEstringcOHALcLcLAnalysisDatacLcLStorageTypecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOHALcLcLAnalysisDatacLcLStorageTypegRsPgRsPgR = { "map<string,HAL::AnalysisData::StorageType,less<string>,allocator<pair<const string,HAL::AnalysisData::StorageType> > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TSelector = { "TSelector" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TRef = { "TRef" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TRefArray = { "TRefArray" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLStorageType = { "HAL::AnalysisTreeReader::StorageType" , 101 , -1 };
G__linked_taginfo G__HAL_dictLN_setlETStringcOlesslETStringgRcOallocatorlETStringgRsPgR = { "set<TString,less<TString>,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_dequelEboolcOallocatorlEboolgRsPgR = { "deque<bool,allocator<bool> >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_dequelElongsPdoublecOallocatorlElongsPdoublegRsPgR = { "deque<long double,allocator<long double> >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_dequelElongsPlongcOallocatorlElongsPlonggRsPgR = { "deque<long long,allocator<long long> >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_dequelEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR = { "deque<unsigned long long,allocator<unsigned long long> >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_dequelETStringcOallocatorlETStringgRsPgR = { "deque<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_dequelETObjArraycOallocatorlETObjArraygRsPgR = { "deque<TObjArray,allocator<TObjArray> >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_dequelETClonesArraycOallocatorlETClonesArraygRsPgR = { "deque<TClonesArray,allocator<TClonesArray> >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_dequelETRefcOallocatorlETRefgRsPgR = { "deque<TRef,allocator<TRef> >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_dequelETRefArraycOallocatorlETRefArraygRsPgR = { "deque<TRefArray,allocator<TRefArray> >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_dequelEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR = { "deque<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR = { "vector<long double,allocator<long double> >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcLcLiterator = { "vector<long double,allocator<long double> >::iterator" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_reverse_iteratorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<long double,allocator<long double> >::iterator>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_dequelEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR = { "deque<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_dequelEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR = { "deque<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_dequelEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR = { "deque<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_dequelEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR = { "deque<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_vectorlETObjArraycOallocatorlETObjArraygRsPgR = { "vector<TObjArray,allocator<TObjArray> >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_reverse_iteratorlEvectorlETObjArraycOallocatorlETObjArraygRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TObjArray,allocator<TObjArray> >::iterator>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_dequelEvectorlETObjArraycOallocatorlETObjArraygRsPgRcOallocatorlEvectorlETObjArraycOallocatorlETObjArraygRsPgRsPgRsPgR = { "deque<vector<TObjArray,allocator<TObjArray> >,allocator<vector<TObjArray,allocator<TObjArray> > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_vectorlETClonesArraycOallocatorlETClonesArraygRsPgR = { "vector<TClonesArray,allocator<TClonesArray> >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_reverse_iteratorlEvectorlETClonesArraycOallocatorlETClonesArraygRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TClonesArray,allocator<TClonesArray> >::iterator>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_dequelEvectorlETClonesArraycOallocatorlETClonesArraygRsPgRcOallocatorlEvectorlETClonesArraycOallocatorlETClonesArraygRsPgRsPgRsPgR = { "deque<vector<TClonesArray,allocator<TClonesArray> >,allocator<vector<TClonesArray,allocator<TClonesArray> > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_vectorlETRefcOallocatorlETRefgRsPgR = { "vector<TRef,allocator<TRef> >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_reverse_iteratorlEvectorlETRefcOallocatorlETRefgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TRef,allocator<TRef> >::iterator>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_dequelEvectorlETRefcOallocatorlETRefgRsPgRcOallocatorlEvectorlETRefcOallocatorlETRefgRsPgRsPgRsPgR = { "deque<vector<TRef,allocator<TRef> >,allocator<vector<TRef,allocator<TRef> > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_vectorlETRefArraycOallocatorlETRefArraygRsPgR = { "vector<TRefArray,allocator<TRefArray> >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_reverse_iteratorlEvectorlETRefArraycOallocatorlETRefArraygRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TRefArray,allocator<TRefArray> >::iterator>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_dequelEvectorlETRefArraycOallocatorlETRefArraygRsPgRcOallocatorlEvectorlETRefArraycOallocatorlETRefArraygRsPgRsPgRsPgR = { "deque<vector<TRefArray,allocator<TRefArray> >,allocator<vector<TRefArray,allocator<TRefArray> > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR = { "vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiterator = { "vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_dequelEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgRsPgR = { "deque<vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >,allocator<vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR = { "vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgRcLcLiterator = { "vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_dequelEvectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgRsPgRsPgR = { "deque<vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >,allocator<vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR = { "vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcLcLiterator = { "vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_dequelEvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRsPgRsPgR = { "deque<vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >,allocator<vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR = { "vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcLcLiterator = { "vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_dequelEvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgR = { "deque<vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >,allocator<vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR = { "vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_dequelEvectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRsPgRsPgR = { "deque<vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > >,allocator<vector<vector<TString,allocator<TString> >,allocator<vector<TString,allocator<TString> > > > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_vectorlEvectorlETRefcOallocatorlETRefgRsPgRcOallocatorlEvectorlETRefcOallocatorlETRefgRsPgRsPgRsPgR = { "vector<vector<TRef,allocator<TRef> >,allocator<vector<TRef,allocator<TRef> > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlETRefcOallocatorlETRefgRsPgRcOallocatorlEvectorlETRefcOallocatorlETRefgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<TRef,allocator<TRef> >,allocator<vector<TRef,allocator<TRef> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_dequelEvectorlEvectorlETRefcOallocatorlETRefgRsPgRcOallocatorlEvectorlETRefcOallocatorlETRefgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlETRefcOallocatorlETRefgRsPgRcOallocatorlEvectorlETRefcOallocatorlETRefgRsPgRsPgRsPgRsPgRsPgR = { "deque<vector<vector<TRef,allocator<TRef> >,allocator<vector<TRef,allocator<TRef> > > >,allocator<vector<vector<TRef,allocator<TRef> >,allocator<vector<TRef,allocator<TRef> > > > > >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLBranchManager = { "HAL::AnalysisTreeReader::BranchManager" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_vectorlEHALcLcLAnalysisTreeReadercLcLBranchManagermUcOallocatorlEHALcLcLAnalysisTreeReadercLcLBranchManagermUgRsPgR = { "vector<HAL::AnalysisTreeReader::BranchManager*,allocator<HAL::AnalysisTreeReader::BranchManager*> >" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_reverse_iteratorlEvectorlEHALcLcLAnalysisTreeReadercLcLBranchManagermUcOallocatorlEHALcLcLAnalysisTreeReadercLcLBranchManagermUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<HAL::AnalysisTreeReader::BranchManager*,allocator<HAL::AnalysisTreeReader::BranchManager*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLinternal = { "HAL::internal" , 110 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLinternalcLcLImportTLVAlgo = { "HAL::internal::ImportTLVAlgo" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLinternalcLcLNthElementAlgo = { "HAL::internal::NthElementAlgo" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLinternalcLcLFilterTLVAlgo = { "HAL::internal::FilterTLVAlgo" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLinternalcLcLParticlesTLVCut = { "HAL::internal::ParticlesTLVCut" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLinternalcLcLSingleParticleTLVStore = { "HAL::internal::SingleParticleTLVStore" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLinternalcLcLParticlesTLVStore = { "HAL::internal::ParticlesTLVStore" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLIA0000 = { "HAL::IA0000" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLIA0001 = { "HAL::IA0001" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLIA0002 = { "HAL::IA0002" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLIA0010 = { "HAL::IA0010" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLIA0011 = { "HAL::IA0011" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLIA0012 = { "HAL::IA0012" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLIA0020 = { "HAL::IA0020" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLIA0021 = { "HAL::IA0021" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLIA0022 = { "HAL::IA0022" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLRA0000 = { "HAL::RA0000" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLFA0000 = { "HAL::FA0000" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLFA0100 = { "HAL::FA0100" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLFA0101 = { "HAL::FA0101" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLFA0102 = { "HAL::FA0102" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLFA0103 = { "HAL::FA0103" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLFA0104 = { "HAL::FA0104" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLFA0110 = { "HAL::FA0110" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLFA0111 = { "HAL::FA0111" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLFA0112 = { "HAL::FA0112" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLFA0113 = { "HAL::FA0113" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLFA0114 = { "HAL::FA0114" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLFA0120 = { "HAL::FA0120" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLFA0121 = { "HAL::FA0121" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLFA0122 = { "HAL::FA0122" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLFA0123 = { "HAL::FA0123" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLFA0124 = { "HAL::FA0124" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLCA0000 = { "HAL::CA0000" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLCA0003 = { "HAL::CA0003" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLCA0100 = { "HAL::CA0100" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLCA0101 = { "HAL::CA0101" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLEA0000 = { "HAL::EA0000" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLEA0001 = { "HAL::EA0001" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLEA0002 = { "HAL::EA0002" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLEA0003 = { "HAL::EA0003" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLEA0004 = { "HAL::EA0004" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLEA0010 = { "HAL::EA0010" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLEA0011 = { "HAL::EA0011" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLEA0012 = { "HAL::EA0012" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLEA0013 = { "HAL::EA0013" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLEA0014 = { "HAL::EA0014" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TChain = { "TChain" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLAnalysisSelector = { "HAL::AnalysisSelector" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLAnalysis = { "HAL::Analysis" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TF2 = { "TF2" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLCutOptimizer = { "HAL::CutOptimizer" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLIntegrator = { "HAL::Integrator" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLInterpBase = { "HAL::InterpBase" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLPolyInterp = { "HAL::PolyInterp" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLPoly2DInterp = { "HAL::Poly2DInterp" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TH2C = { "TH2C" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TH2S = { "TH2S" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TH2I = { "TH2I" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TH2D = { "TH2D" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TH3C = { "TH3C" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TH3S = { "TH3S" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TH3I = { "TH3I" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TH3F = { "TH3F" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TH3D = { "TH3D" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_THStack = { "THStack" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN_TLegend = { "TLegend" , 99 , -1 };
G__linked_taginfo G__HAL_dictLN__object = { "_object" , 115 , -1 };
G__linked_taginfo G__HAL_dictLN_HALcLcLPythonAlgorithm = { "HAL::PythonAlgorithm" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableHAL_dict() {
  G__HAL_dictLN_TClass.tagnum = -1 ;
  G__HAL_dictLN_TBuffer.tagnum = -1 ;
  G__HAL_dictLN_TMemberInspector.tagnum = -1 ;
  G__HAL_dictLN_TObject.tagnum = -1 ;
  G__HAL_dictLN_TNamed.tagnum = -1 ;
  G__HAL_dictLN_TString.tagnum = -1 ;
  G__HAL_dictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR.tagnum = -1 ;
  G__HAL_dictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgRcLcLiterator.tagnum = -1 ;
  G__HAL_dictLN_reverse_iteratorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__HAL_dictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR.tagnum = -1 ;
  G__HAL_dictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcLcLiterator.tagnum = -1 ;
  G__HAL_dictLN_reverse_iteratorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__HAL_dictLN_vectorlEboolcOallocatorlEboolgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_vectorlEboolcOallocatorlEboolgRsPgRcLcLiterator.tagnum = -1 ;
  G__HAL_dictLN_vectorlEboolcOallocatorlEboolgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__HAL_dictLN_string.tagnum = -1 ;
  G__HAL_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__HAL_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__HAL_dictLN_TList.tagnum = -1 ;
  G__HAL_dictLN_TObjArray.tagnum = -1 ;
  G__HAL_dictLN_TClonesArray.tagnum = -1 ;
  G__HAL_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__HAL_dictLN_TRegexp.tagnum = -1 ;
  G__HAL_dictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__HAL_dictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__HAL_dictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__HAL_dictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__HAL_dictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__HAL_dictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__HAL_dictLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__HAL_dictLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__HAL_dictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__HAL_dictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__HAL_dictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__HAL_dictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__HAL_dictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__HAL_dictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__HAL_dictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__HAL_dictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__HAL_dictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__HAL_dictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__HAL_dictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__HAL_dictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__HAL_dictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__HAL_dictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__HAL_dictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__HAL_dictLN_TLorentzVector.tagnum = -1 ;
  G__HAL_dictLN_HAL.tagnum = -1 ;
  G__HAL_dictLN_TArrayD.tagnum = -1 ;
  G__HAL_dictLN_TArrayI.tagnum = -1 ;
  G__HAL_dictLN_TF1.tagnum = -1 ;
  G__HAL_dictLN_TH1D.tagnum = -1 ;
  G__HAL_dictLN_TH1.tagnum = -1 ;
  G__HAL_dictLN_TH1C.tagnum = -1 ;
  G__HAL_dictLN_TH1S.tagnum = -1 ;
  G__HAL_dictLN_TH1I.tagnum = -1 ;
  G__HAL_dictLN_TH1F.tagnum = -1 ;
  G__HAL_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__HAL_dictLN_TMap.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLAnalysisData.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLAnalysisTreeReader.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLAnalysisTreeWriter.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLAlgorithm.tagnum = -1 ;
  G__HAL_dictLN_listlEHALcLcLAlgorithmmUcOallocatorlEHALcLcLAlgorithmmUgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLCutAlgorithm.tagnum = -1 ;
  G__HAL_dictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__HAL_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_maplEstringcOlongsPdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOlongsPdoublegRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_maplEstringcOlongsPlongcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOlongsPlonggRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_maplEstringcOunsignedsPlongsPlongcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPlongsPlonggRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_maplEstringcOTObjectmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjectmUgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_maplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_maplEstringcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_maplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_maplEstringcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_maplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_maplEstringcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_maplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_maplEstringcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_maplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_maplEstringcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_maplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_maplEstringcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLAnalysisDatacLcLStorageType.tagnum = -1 ;
  G__HAL_dictLN_maplEstringcOHALcLcLAnalysisDatacLcLStorageTypecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOHALcLcLAnalysisDatacLcLStorageTypegRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_TTree.tagnum = -1 ;
  G__HAL_dictLN_TBranch.tagnum = -1 ;
  G__HAL_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_TSelector.tagnum = -1 ;
  G__HAL_dictLN_TRef.tagnum = -1 ;
  G__HAL_dictLN_TRefArray.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLStorageType.tagnum = -1 ;
  G__HAL_dictLN_setlETStringcOlesslETStringgRcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_dequelEboolcOallocatorlEboolgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_dequelElongsPdoublecOallocatorlElongsPdoublegRsPgR.tagnum = -1 ;
  G__HAL_dictLN_dequelElongsPlongcOallocatorlElongsPlonggRsPgR.tagnum = -1 ;
  G__HAL_dictLN_dequelEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR.tagnum = -1 ;
  G__HAL_dictLN_dequelETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_dequelETObjArraycOallocatorlETObjArraygRsPgR.tagnum = -1 ;
  G__HAL_dictLN_dequelETClonesArraycOallocatorlETClonesArraygRsPgR.tagnum = -1 ;
  G__HAL_dictLN_dequelETRefcOallocatorlETRefgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_dequelETRefArraycOallocatorlETRefArraygRsPgR.tagnum = -1 ;
  G__HAL_dictLN_dequelEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR.tagnum = -1 ;
  G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcLcLiterator.tagnum = -1 ;
  G__HAL_dictLN_reverse_iteratorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__HAL_dictLN_dequelEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_dequelEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_dequelEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__HAL_dictLN_dequelEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_vectorlETObjArraycOallocatorlETObjArraygRsPgR.tagnum = -1 ;
  G__HAL_dictLN_reverse_iteratorlEvectorlETObjArraycOallocatorlETObjArraygRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__HAL_dictLN_dequelEvectorlETObjArraycOallocatorlETObjArraygRsPgRcOallocatorlEvectorlETObjArraycOallocatorlETObjArraygRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_vectorlETClonesArraycOallocatorlETClonesArraygRsPgR.tagnum = -1 ;
  G__HAL_dictLN_reverse_iteratorlEvectorlETClonesArraycOallocatorlETClonesArraygRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__HAL_dictLN_dequelEvectorlETClonesArraycOallocatorlETClonesArraygRsPgRcOallocatorlEvectorlETClonesArraycOallocatorlETClonesArraygRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_vectorlETRefcOallocatorlETRefgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_reverse_iteratorlEvectorlETRefcOallocatorlETRefgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__HAL_dictLN_dequelEvectorlETRefcOallocatorlETRefgRsPgRcOallocatorlEvectorlETRefcOallocatorlETRefgRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_vectorlETRefArraycOallocatorlETRefArraygRsPgR.tagnum = -1 ;
  G__HAL_dictLN_reverse_iteratorlEvectorlETRefArraycOallocatorlETRefArraygRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__HAL_dictLN_dequelEvectorlETRefArraycOallocatorlETRefArraygRsPgRcOallocatorlEvectorlETRefArraycOallocatorlETRefArraygRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__HAL_dictLN_dequelEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__HAL_dictLN_dequelEvectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__HAL_dictLN_dequelEvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__HAL_dictLN_dequelEvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__HAL_dictLN_dequelEvectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_vectorlEvectorlETRefcOallocatorlETRefgRsPgRcOallocatorlEvectorlETRefcOallocatorlETRefgRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlETRefcOallocatorlETRefgRsPgRcOallocatorlEvectorlETRefcOallocatorlETRefgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__HAL_dictLN_dequelEvectorlEvectorlETRefcOallocatorlETRefgRsPgRcOallocatorlEvectorlETRefcOallocatorlETRefgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlETRefcOallocatorlETRefgRsPgRcOallocatorlEvectorlETRefcOallocatorlETRefgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLBranchManager.tagnum = -1 ;
  G__HAL_dictLN_vectorlEHALcLcLAnalysisTreeReadercLcLBranchManagermUcOallocatorlEHALcLcLAnalysisTreeReadercLcLBranchManagermUgRsPgR.tagnum = -1 ;
  G__HAL_dictLN_reverse_iteratorlEvectorlEHALcLcLAnalysisTreeReadercLcLBranchManagermUcOallocatorlEHALcLcLAnalysisTreeReadercLcLBranchManagermUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLinternal.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLinternalcLcLImportTLVAlgo.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLinternalcLcLNthElementAlgo.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLinternalcLcLFilterTLVAlgo.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLinternalcLcLParticlesTLVCut.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLinternalcLcLSingleParticleTLVStore.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLinternalcLcLParticlesTLVStore.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLIA0000.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLIA0001.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLIA0002.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLIA0010.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLIA0011.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLIA0012.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLIA0020.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLIA0021.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLIA0022.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLRA0000.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLFA0000.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLFA0100.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLFA0101.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLFA0102.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLFA0103.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLFA0104.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLFA0110.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLFA0111.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLFA0112.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLFA0113.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLFA0114.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLFA0120.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLFA0121.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLFA0122.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLFA0123.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLFA0124.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLCA0000.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLCA0003.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLCA0100.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLCA0101.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLEA0000.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLEA0001.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLEA0002.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLEA0003.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLEA0004.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLEA0010.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLEA0011.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLEA0012.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLEA0013.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLEA0014.tagnum = -1 ;
  G__HAL_dictLN_TChain.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLAnalysisSelector.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLAnalysis.tagnum = -1 ;
  G__HAL_dictLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__HAL_dictLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__HAL_dictLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__HAL_dictLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__HAL_dictLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__HAL_dictLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__HAL_dictLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__HAL_dictLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__HAL_dictLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__HAL_dictLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__HAL_dictLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__HAL_dictLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__HAL_dictLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__HAL_dictLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__HAL_dictLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__HAL_dictLN_TF2.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLCutOptimizer.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLIntegrator.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLInterpBase.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLPolyInterp.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLPoly2DInterp.tagnum = -1 ;
  G__HAL_dictLN_TH2C.tagnum = -1 ;
  G__HAL_dictLN_TH2S.tagnum = -1 ;
  G__HAL_dictLN_TH2I.tagnum = -1 ;
  G__HAL_dictLN_TH2F.tagnum = -1 ;
  G__HAL_dictLN_TH2D.tagnum = -1 ;
  G__HAL_dictLN_TH3C.tagnum = -1 ;
  G__HAL_dictLN_TH3S.tagnum = -1 ;
  G__HAL_dictLN_TH3I.tagnum = -1 ;
  G__HAL_dictLN_TH3F.tagnum = -1 ;
  G__HAL_dictLN_TH3D.tagnum = -1 ;
  G__HAL_dictLN_THStack.tagnum = -1 ;
  G__HAL_dictLN_TLegend.tagnum = -1 ;
  G__HAL_dictLN__object.tagnum = -1 ;
  G__HAL_dictLN_HALcLcLPythonAlgorithm.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableHAL_dict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TClass);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TObject);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TString);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR),0,-1,298752,(char*)NULL,NULL,NULL);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_reverse_iteratorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR),0,-1,298752,(char*)NULL,NULL,NULL);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_reverse_iteratorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_vectorlEboolcOallocatorlEboolgRsPgR),0,-1,265216,(char*)NULL,NULL,NULL);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_vectorlEboolcOallocatorlEboolgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_vectorlEboolcOallocatorlEboolgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_string);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TList);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TRegexp);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TLorentzVector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HAL),0,-1,262144,(char*)NULL,G__setup_memvarHAL,G__setup_memfuncHAL);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TArrayD);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TArrayI);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TF1);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TH1D);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TH1);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TH1C);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TH1S);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TH1I);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TH1F);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TMap);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLAnalysisData),sizeof(HAL::AnalysisData),-1,323584,(char*)NULL,G__setup_memvarHALcLcLAnalysisData,G__setup_memfuncHALcLcLAnalysisData);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLAnalysisTreeReader),sizeof(HAL::AnalysisTreeReader),-1,324864,(char*)NULL,G__setup_memvarHALcLcLAnalysisTreeReader,G__setup_memfuncHALcLcLAnalysisTreeReader);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLAnalysisTreeWriter),sizeof(HAL::AnalysisTreeWriter),-1,323584,(char*)NULL,G__setup_memvarHALcLcLAnalysisTreeWriter,G__setup_memfuncHALcLcLAnalysisTreeWriter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLAlgorithm),sizeof(HAL::Algorithm),-1,263936,(char*)NULL,G__setup_memvarHALcLcLAlgorithm,G__setup_memfuncHALcLcLAlgorithm);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_listlEHALcLcLAlgorithmmUcOallocatorlEHALcLcLAlgorithmmUgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLCutAlgorithm),sizeof(HAL::CutAlgorithm),-1,263424,(char*)NULL,G__setup_memvarHALcLcLCutAlgorithm,G__setup_memfuncHALcLcLCutAlgorithm);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_maplEstringcOlongsPdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOlongsPdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_maplEstringcOlongsPlongcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOlongsPlonggRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_maplEstringcOunsignedsPlongsPlongcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPlongsPlonggRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_maplEstringcOTObjectmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjectmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_maplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_maplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_maplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_maplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_maplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_maplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOboolcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOboolgRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPdoublecOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPdoublegRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOlongsPlonggRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOunsignedsPlongsPlongcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOstringcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOstringgRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_maplElongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_maplEstringcOmaplElongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRsPgRsPgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOmaplElongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOmaplElongsPlongcOTObjectmUcOlesslElongsPlonggRcOallocatorlEpairlEconstsPlongsPlongcOTObjectmUgRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLAnalysisDatacLcLStorageType),sizeof(int),-1,262144,(char*)NULL,NULL,NULL);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_maplEstringcOHALcLcLAnalysisDatacLcLStorageTypecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOHALcLcLAnalysisDatacLcLStorageTypegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TTree);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TBranch);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TSelector);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TRef);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TRefArray);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLStorageType),sizeof(int),-1,262144,(char*)NULL,NULL,NULL);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_setlETStringcOlesslETStringgRcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_dequelEboolcOallocatorlEboolgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_dequelElongsPdoublecOallocatorlElongsPdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_dequelElongsPlongcOallocatorlElongsPlonggRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_dequelEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_dequelETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_dequelETObjArraycOallocatorlETObjArraygRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_dequelETClonesArraycOallocatorlETClonesArraygRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_dequelETRefcOallocatorlETRefgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_dequelETRefArraycOallocatorlETRefArraygRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_dequelEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR),sizeof(vector<long double,allocator<long double> >),-1,298752,(char*)NULL,G__setup_memvarvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR,G__setup_memfuncvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_vectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_reverse_iteratorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_dequelEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_dequelEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_dequelEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_dequelEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_vectorlETObjArraycOallocatorlETObjArraygRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_reverse_iteratorlEvectorlETObjArraycOallocatorlETObjArraygRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_dequelEvectorlETObjArraycOallocatorlETObjArraygRsPgRcOallocatorlEvectorlETObjArraycOallocatorlETObjArraygRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_vectorlETClonesArraycOallocatorlETClonesArraygRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_reverse_iteratorlEvectorlETClonesArraycOallocatorlETClonesArraygRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_dequelEvectorlETClonesArraycOallocatorlETClonesArraygRsPgRcOallocatorlEvectorlETClonesArraycOallocatorlETClonesArraygRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_vectorlETRefcOallocatorlETRefgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_reverse_iteratorlEvectorlETRefcOallocatorlETRefgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_dequelEvectorlETRefcOallocatorlETRefgRsPgRcOallocatorlEvectorlETRefcOallocatorlETRefgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_vectorlETRefArraycOallocatorlETRefArraygRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_reverse_iteratorlEvectorlETRefArraycOallocatorlETRefArraygRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_dequelEvectorlETRefArraycOallocatorlETRefArraygRsPgRcOallocatorlEvectorlETRefArraycOallocatorlETRefArraygRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),sizeof(vector<vector<bool,allocator<bool> >,allocator<vector<bool,allocator<bool> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_vectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_dequelEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEboolcOallocatorlEboolgRsPgRcOallocatorlEvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR),sizeof(vector<vector<long double,allocator<long double> >,allocator<vector<long double,allocator<long double> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_vectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_dequelEvectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRcOallocatorlEvectorlElongsPdoublecOallocatorlElongsPdoublegRsPgRsPgRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR),sizeof(vector<vector<long long,allocator<long long> >,allocator<vector<long long,allocator<long long> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_vectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_dequelEvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRcOallocatorlEvectorlElongsPlongcOallocatorlElongsPlonggRsPgRsPgRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR),sizeof(vector<vector<unsigned long long,allocator<unsigned long long> >,allocator<vector<unsigned long long,allocator<unsigned long long> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_vectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_dequelEvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRcOallocatorlEvectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_vectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_dequelEvectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlETStringcOallocatorlETStringgRsPgRcOallocatorlEvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_vectorlEvectorlETRefcOallocatorlETRefgRsPgRcOallocatorlEvectorlETRefcOallocatorlETRefgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_reverse_iteratorlEvectorlEvectorlETRefcOallocatorlETRefgRsPgRcOallocatorlEvectorlETRefcOallocatorlETRefgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_dequelEvectorlEvectorlETRefcOallocatorlETRefgRsPgRcOallocatorlEvectorlETRefcOallocatorlETRefgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlETRefcOallocatorlETRefgRsPgRcOallocatorlEvectorlETRefcOallocatorlETRefgRsPgRsPgRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLAnalysisTreeReadercLcLBranchManager),sizeof(HAL::AnalysisTreeReader::BranchManager),-1,263424,(char*)NULL,G__setup_memvarHALcLcLAnalysisTreeReadercLcLBranchManager,G__setup_memfuncHALcLcLAnalysisTreeReadercLcLBranchManager);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_vectorlEHALcLcLAnalysisTreeReadercLcLBranchManagermUcOallocatorlEHALcLcLAnalysisTreeReadercLcLBranchManagermUgRsPgR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_reverse_iteratorlEvectorlEHALcLcLAnalysisTreeReadercLcLBranchManagermUcOallocatorlEHALcLcLAnalysisTreeReadercLcLBranchManagermUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLinternal),0,-1,262144,(char*)NULL,G__setup_memvarHALcLcLinternal,G__setup_memfuncHALcLcLinternal);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLinternalcLcLImportTLVAlgo),sizeof(HAL::internal::ImportTLVAlgo),-1,295937,(char*)NULL,G__setup_memvarHALcLcLinternalcLcLImportTLVAlgo,G__setup_memfuncHALcLcLinternalcLcLImportTLVAlgo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLinternalcLcLNthElementAlgo),sizeof(HAL::internal::NthElementAlgo),-1,295939,(char*)NULL,G__setup_memvarHALcLcLinternalcLcLNthElementAlgo,G__setup_memfuncHALcLcLinternalcLcLNthElementAlgo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLinternalcLcLFilterTLVAlgo),sizeof(HAL::internal::FilterTLVAlgo),-1,295937,(char*)NULL,G__setup_memvarHALcLcLinternalcLcLFilterTLVAlgo,G__setup_memfuncHALcLcLinternalcLcLFilterTLVAlgo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLinternalcLcLParticlesTLVCut),sizeof(HAL::internal::ParticlesTLVCut),-1,295937,(char*)NULL,G__setup_memvarHALcLcLinternalcLcLParticlesTLVCut,G__setup_memfuncHALcLcLinternalcLcLParticlesTLVCut);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLinternalcLcLSingleParticleTLVStore),sizeof(HAL::internal::SingleParticleTLVStore),-1,295937,(char*)NULL,G__setup_memvarHALcLcLinternalcLcLSingleParticleTLVStore,G__setup_memfuncHALcLcLinternalcLcLSingleParticleTLVStore);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLinternalcLcLParticlesTLVStore),sizeof(HAL::internal::ParticlesTLVStore),-1,295937,(char*)NULL,G__setup_memvarHALcLcLinternalcLcLParticlesTLVStore,G__setup_memfuncHALcLcLinternalcLcLParticlesTLVStore);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLIA0000),sizeof(HAL::IA0000),-1,295936,(char*)NULL,G__setup_memvarHALcLcLIA0000,G__setup_memfuncHALcLcLIA0000);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLIA0001),sizeof(HAL::IA0001),-1,295936,(char*)NULL,G__setup_memvarHALcLcLIA0001,G__setup_memfuncHALcLcLIA0001);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLIA0002),sizeof(HAL::IA0002),-1,295936,(char*)NULL,G__setup_memvarHALcLcLIA0002,G__setup_memfuncHALcLcLIA0002);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLIA0010),sizeof(HAL::IA0010),-1,295936,(char*)NULL,G__setup_memvarHALcLcLIA0010,G__setup_memfuncHALcLcLIA0010);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLIA0011),sizeof(HAL::IA0011),-1,295936,(char*)NULL,G__setup_memvarHALcLcLIA0011,G__setup_memfuncHALcLcLIA0011);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLIA0012),sizeof(HAL::IA0012),-1,295936,(char*)NULL,G__setup_memvarHALcLcLIA0012,G__setup_memfuncHALcLcLIA0012);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLIA0020),sizeof(HAL::IA0020),-1,295936,(char*)NULL,G__setup_memvarHALcLcLIA0020,G__setup_memfuncHALcLcLIA0020);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLIA0021),sizeof(HAL::IA0021),-1,295936,(char*)NULL,G__setup_memvarHALcLcLIA0021,G__setup_memfuncHALcLcLIA0021);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLIA0022),sizeof(HAL::IA0022),-1,295936,(char*)NULL,G__setup_memvarHALcLcLIA0022,G__setup_memfuncHALcLcLIA0022);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLRA0000),sizeof(HAL::RA0000),-1,295936,(char*)NULL,G__setup_memvarHALcLcLRA0000,G__setup_memfuncHALcLcLRA0000);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLFA0000),sizeof(HAL::FA0000),-1,295936,(char*)NULL,G__setup_memvarHALcLcLFA0000,G__setup_memfuncHALcLcLFA0000);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLFA0100),sizeof(HAL::FA0100),-1,295936,(char*)NULL,G__setup_memvarHALcLcLFA0100,G__setup_memfuncHALcLcLFA0100);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLFA0101),sizeof(HAL::FA0101),-1,295936,(char*)NULL,G__setup_memvarHALcLcLFA0101,G__setup_memfuncHALcLcLFA0101);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLFA0102),sizeof(HAL::FA0102),-1,295936,(char*)NULL,G__setup_memvarHALcLcLFA0102,G__setup_memfuncHALcLcLFA0102);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLFA0103),sizeof(HAL::FA0103),-1,295936,(char*)NULL,G__setup_memvarHALcLcLFA0103,G__setup_memfuncHALcLcLFA0103);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLFA0104),sizeof(HAL::FA0104),-1,295936,(char*)NULL,G__setup_memvarHALcLcLFA0104,G__setup_memfuncHALcLcLFA0104);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLFA0110),sizeof(HAL::FA0110),-1,295936,(char*)NULL,G__setup_memvarHALcLcLFA0110,G__setup_memfuncHALcLcLFA0110);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLFA0111),sizeof(HAL::FA0111),-1,295936,(char*)NULL,G__setup_memvarHALcLcLFA0111,G__setup_memfuncHALcLcLFA0111);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLFA0112),sizeof(HAL::FA0112),-1,295936,(char*)NULL,G__setup_memvarHALcLcLFA0112,G__setup_memfuncHALcLcLFA0112);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLFA0113),sizeof(HAL::FA0113),-1,295936,(char*)NULL,G__setup_memvarHALcLcLFA0113,G__setup_memfuncHALcLcLFA0113);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLFA0114),sizeof(HAL::FA0114),-1,295936,(char*)NULL,G__setup_memvarHALcLcLFA0114,G__setup_memfuncHALcLcLFA0114);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLFA0120),sizeof(HAL::FA0120),-1,295936,(char*)NULL,G__setup_memvarHALcLcLFA0120,G__setup_memfuncHALcLcLFA0120);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLFA0121),sizeof(HAL::FA0121),-1,295936,(char*)NULL,G__setup_memvarHALcLcLFA0121,G__setup_memfuncHALcLcLFA0121);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLFA0122),sizeof(HAL::FA0122),-1,295936,(char*)NULL,G__setup_memvarHALcLcLFA0122,G__setup_memfuncHALcLcLFA0122);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLFA0123),sizeof(HAL::FA0123),-1,295936,(char*)NULL,G__setup_memvarHALcLcLFA0123,G__setup_memfuncHALcLcLFA0123);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLFA0124),sizeof(HAL::FA0124),-1,295936,(char*)NULL,G__setup_memvarHALcLcLFA0124,G__setup_memfuncHALcLcLFA0124);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLCA0000),sizeof(HAL::CA0000),-1,295936,(char*)NULL,G__setup_memvarHALcLcLCA0000,G__setup_memfuncHALcLcLCA0000);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLCA0003),sizeof(HAL::CA0003),-1,295936,(char*)NULL,G__setup_memvarHALcLcLCA0003,G__setup_memfuncHALcLcLCA0003);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLCA0100),sizeof(HAL::CA0100),-1,295936,(char*)NULL,G__setup_memvarHALcLcLCA0100,G__setup_memfuncHALcLcLCA0100);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLCA0101),sizeof(HAL::CA0101),-1,295936,(char*)NULL,G__setup_memvarHALcLcLCA0101,G__setup_memfuncHALcLcLCA0101);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLEA0000),sizeof(HAL::EA0000),-1,295936,(char*)NULL,G__setup_memvarHALcLcLEA0000,G__setup_memfuncHALcLcLEA0000);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLEA0001),sizeof(HAL::EA0001),-1,295936,(char*)NULL,G__setup_memvarHALcLcLEA0001,G__setup_memfuncHALcLcLEA0001);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLEA0002),sizeof(HAL::EA0002),-1,295936,(char*)NULL,G__setup_memvarHALcLcLEA0002,G__setup_memfuncHALcLcLEA0002);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLEA0003),sizeof(HAL::EA0003),-1,295936,(char*)NULL,G__setup_memvarHALcLcLEA0003,G__setup_memfuncHALcLcLEA0003);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLEA0004),sizeof(HAL::EA0004),-1,295936,(char*)NULL,G__setup_memvarHALcLcLEA0004,G__setup_memfuncHALcLcLEA0004);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLEA0010),sizeof(HAL::EA0010),-1,295936,(char*)NULL,G__setup_memvarHALcLcLEA0010,G__setup_memfuncHALcLcLEA0010);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLEA0011),sizeof(HAL::EA0011),-1,295936,(char*)NULL,G__setup_memvarHALcLcLEA0011,G__setup_memfuncHALcLcLEA0011);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLEA0012),sizeof(HAL::EA0012),-1,295936,(char*)NULL,G__setup_memvarHALcLcLEA0012,G__setup_memfuncHALcLcLEA0012);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLEA0013),sizeof(HAL::EA0013),-1,295936,(char*)NULL,G__setup_memvarHALcLcLEA0013,G__setup_memfuncHALcLcLEA0013);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLEA0014),sizeof(HAL::EA0014),-1,295936,(char*)NULL,G__setup_memvarHALcLcLEA0014,G__setup_memfuncHALcLcLEA0014);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TChain);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLAnalysisSelector),sizeof(HAL::AnalysisSelector),-1,324608,(char*)NULL,G__setup_memvarHALcLcLAnalysisSelector,G__setup_memfuncHALcLcLAnalysisSelector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLAnalysis),sizeof(HAL::Analysis),-1,263424,(char*)NULL,G__setup_memvarHALcLcLAnalysis,G__setup_memfuncHALcLcLAnalysis);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TMatrixTSparseDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TF2);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLCutOptimizer),sizeof(HAL::CutOptimizer),-1,263424,(char*)NULL,G__setup_memvarHALcLcLCutOptimizer,G__setup_memfuncHALcLcLCutOptimizer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLIntegrator),sizeof(HAL::Integrator),-1,262400,(char*)NULL,G__setup_memvarHALcLcLIntegrator,G__setup_memfuncHALcLcLIntegrator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLInterpBase),sizeof(HAL::InterpBase),-1,295937,(char*)NULL,G__setup_memvarHALcLcLInterpBase,G__setup_memfuncHALcLcLInterpBase);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLPolyInterp),sizeof(HAL::PolyInterp),-1,294912,(char*)NULL,G__setup_memvarHALcLcLPolyInterp,G__setup_memfuncHALcLcLPolyInterp);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLPoly2DInterp),sizeof(HAL::Poly2DInterp),-1,294912,(char*)NULL,G__setup_memvarHALcLcLPoly2DInterp,G__setup_memfuncHALcLcLPoly2DInterp);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TH2C);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TH2S);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TH2I);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TH2F);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TH2D);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TH3C);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TH3S);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TH3I);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TH3F);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TH3D);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_THStack);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN_TLegend);
   G__get_linked_tagnum_fwd(&G__HAL_dictLN__object);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HAL_dictLN_HALcLcLPythonAlgorithm),sizeof(HAL::PythonAlgorithm),-1,263424,(char*)NULL,G__setup_memvarHALcLcLPythonAlgorithm,G__setup_memfuncHALcLcLPythonAlgorithm);
}
extern "C" void G__cpp_setupHAL_dict(void) {
  G__check_setup_version(30051515,"G__cpp_setupHAL_dict()");
  G__set_cpp_environmentHAL_dict();
  G__cpp_setup_tagtableHAL_dict();

  G__cpp_setup_inheritanceHAL_dict();

  G__cpp_setup_typetableHAL_dict();

  G__cpp_setup_memvarHAL_dict();

  G__cpp_setup_memfuncHAL_dict();
  G__cpp_setup_globalHAL_dict();
  G__cpp_setup_funcHAL_dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncHAL_dict();
  return;
}
class G__cpp_setup_initHAL_dict {
  public:
    G__cpp_setup_initHAL_dict() { G__add_setup_func("HAL_dict",(G__incsetup)(&G__cpp_setupHAL_dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initHAL_dict() { G__remove_setup_func("HAL_dict"); }
};
G__cpp_setup_initHAL_dict G__cpp_setup_initializerHAL_dict;

